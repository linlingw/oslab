----------------
IN: 
0xfffffff0:  ljmp   $0xf000,$0xe05b

----------------
IN: 
0x000fe05b:  cmpl   $0x0,%cs:0x61c8
0x000fe062:  jne    0xfd0ae

----------------
IN: 
0x000fe066:  xor    %dx,%dx
0x000fe068:  mov    %dx,%ss

----------------
IN: 
0x000fe06a:  mov    $0x7000,%esp

----------------
IN: 
0x000fe070:  mov    $0xefc1c,%edx
0x000fe076:  jmp    0xfcf2b

----------------
IN: 
0x000fcf2b:  cli    
0x000fcf2c:  cld    
0x000fcf2d:  mov    %eax,%ecx
0x000fcf30:  mov    $0x8f,%eax
0x000fcf36:  out    %al,$0x70
0x000fcf38:  in     $0x71,%al
0x000fcf3a:  in     $0x92,%al
0x000fcf3c:  or     $0x2,%al
0x000fcf3e:  out    %al,$0x92
0x000fcf40:  mov    %ecx,%eax
0x000fcf43:  lidtw  %cs:0x61b8
0x000fcf49:  lgdtw  %cs:0x6178
0x000fcf4f:  mov    %cr0,%ecx
0x000fcf52:  and    $0x1fffffff,%ecx
0x000fcf59:  or     $0x1,%ecx
0x000fcf5d:  mov    %ecx,%cr0

----------------
IN: 
0x000fcf60:  ljmpl  $0x8,$0xfcf68

----------------
IN: 
0x000fcf68:  mov    $0x10,%ecx
0x000fcf6d:  mov    %ecx,%ds

----------------
IN: 
0x000fcf6f:  mov    %ecx,%es

----------------
IN: 
0x000fcf71:  mov    %ecx,%ss

----------------
IN: 
0x000fcf73:  mov    %ecx,%fs

----------------
IN: 
0x000fcf75:  mov    %ecx,%gs
0x000fcf77:  jmp    *%edx

----------------
IN: 
0x000efc1c:  push   %ebx
0x000efc1d:  sub    $0x20,%esp
0x000efc20:  call   0xec4eb

----------------
IN: 
0x000ec4eb:  push   $0xf51d0
0x000ec4f0:  push   $0xf047f
0x000ec4f5:  call   0xec4d8

----------------
IN: 
0x000ec4d8:  lea    0x8(%esp),%ecx
0x000ec4dc:  mov    0x4(%esp),%edx
0x000ec4e0:  mov    $0xf5168,%eax
0x000ec4e5:  call   0xebd11

----------------
IN: 
0x000ebd11:  push   %ebp
0x000ebd12:  push   %edi
0x000ebd13:  push   %esi
0x000ebd14:  push   %ebx
0x000ebd15:  sub    $0x8,%esp
0x000ebd18:  mov    %eax,%ebx
0x000ebd1a:  mov    %edx,%edi
0x000ebd1c:  mov    %ecx,%ebp
0x000ebd1e:  movsbl (%edi),%edx
0x000ebd21:  test   %dl,%dl
0x000ebd23:  je     0xebf7a

----------------
IN: 
0x000ebd29:  cmp    $0x25,%dl
0x000ebd2c:  jne    0xebf65

----------------
IN: 
0x000ebf65:  mov    %ebx,%eax
0x000ebf67:  call   0xe9803

----------------
IN: 
0x000e9803:  movsbl %dl,%edx
0x000e9806:  jmp    *(%eax)

----------------
IN: 
0x000eb0a7:  mov    %dl,%al
0x000eb0a9:  mov    0xf6034,%dx
0x000eb0b0:  test   %dx,%dx
0x000eb0b3:  je     0xeb0b6

----------------
IN: 
0x000eb0b5:  out    %al,(%dx)
0x000eb0b6:  ret    

----------------
IN: 
0x000ebf6c:  mov    %edi,%esi
0x000ebf6e:  jmp    0xebf72

----------------
IN: 
0x000ebf72:  lea    0x1(%esi),%edi
0x000ebf75:  jmp    0xebd1e

----------------
IN: 
0x000ebd1e:  movsbl (%edi),%edx
0x000ebd21:  test   %dl,%dl
0x000ebd23:  je     0xebf7a

----------------
IN: 
0x000ebd32:  lea    0x1(%edi),%esi
0x000ebd35:  movb   $0x20,(%esp)
0x000ebd39:  xor    %ecx,%ecx
0x000ebd3b:  movsbl (%esi),%eax
0x000ebd3e:  lea    -0x30(%eax),%edx
0x000ebd41:  cmp    $0x9,%dl
0x000ebd44:  ja     0xebd60

----------------
IN: 
0x000ebd60:  xor    %edx,%edx
0x000ebd62:  cmp    $0x6c,%al
0x000ebd64:  jne    0xebd78

----------------
IN: 
0x000ebd78:  cmp    $0x64,%al
0x000ebd7a:  je     0xebde8

----------------
IN: 
0x000ebd7c:  jg     0xebdc4

----------------
IN: 
0x000ebdc4:  cmp    $0x73,%al
0x000ebdc6:  je     0xebf48

----------------
IN: 
0x000ebf48:  lea    0x4(%ebp),%edi
0x000ebf4b:  mov    0x0(%ebp),%ebp
0x000ebf4e:  movsbl 0x0(%ebp),%edx
0x000ebf52:  test   %dl,%dl
0x000ebf54:  je     0xebf70

----------------
IN: 
0x000ebf56:  mov    %ebx,%eax
0x000ebf58:  call   0xe9803

----------------
IN: 
0x000ebf5d:  inc    %ebp
0x000ebf5e:  jmp    0xebf4e

----------------
IN: 
0x000ebf4e:  movsbl 0x0(%ebp),%edx
0x000ebf52:  test   %dl,%dl
0x000ebf54:  je     0xebf70

----------------
IN: 
0x000ebf70:  mov    %edi,%ebp
0x000ebf72:  lea    0x1(%esi),%edi
0x000ebf75:  jmp    0xebd1e

----------------
IN: 
0x000ebf7a:  add    $0x8,%esp
0x000ebf7d:  pop    %ebx
0x000ebf7e:  pop    %esi
0x000ebf7f:  pop    %edi
0x000ebf80:  pop    %ebp
0x000ebf81:  ret    

----------------
IN: 
0x000ec4ea:  ret    

----------------
IN: 
0x000ec4fa:  push   $0xf5180
0x000ec4ff:  push   $0xf0495
0x000ec504:  call   0xec4d8

----------------
IN: 
0x000ec509:  add    $0x10,%esp
0x000ec50c:  ret    

----------------
IN: 
0x000efc25:  mov    $0x40000000,%ebx
0x000efc2a:  lea    0xc(%esp),%eax
0x000efc2e:  push   %eax
0x000efc2f:  lea    0xc(%esp),%eax
0x000efc33:  push   %eax
0x000efc34:  lea    0xc(%esp),%ecx
0x000efc38:  lea    0x8(%esp),%edx
0x000efc3c:  mov    %ebx,%eax
0x000efc3e:  call   0xe99c3

----------------
IN: 
0x000e99c3:  push   %ebp
0x000e99c4:  push   %edi
0x000e99c5:  push   %esi
0x000e99c6:  push   %ebx
0x000e99c7:  mov    %edx,%edi
0x000e99c9:  mov    %ecx,%esi
0x000e99cb:  mov    0x14(%esp),%ebp
0x000e99cf:  pushf  
0x000e99d0:  pop    %ecx
0x000e99d1:  mov    %ecx,%edx
0x000e99d3:  xor    $0x200000,%edx
0x000e99d9:  push   %edx
0x000e99da:  popf   

----------------
IN: 
0x000e99db:  pushf  
0x000e99dc:  pop    %edx
0x000e99dd:  push   %ecx
0x000e99de:  popf   

----------------
IN: 
0x000e99df:  xor    %ecx,%edx
0x000e99e1:  bt     $0x15,%edx
0x000e99e5:  jb     0xe9a06

----------------
IN: 
0x000e9a06:  cpuid  
0x000e9a08:  mov    %eax,(%edi)
0x000e9a0a:  mov    %ebx,(%esi)
0x000e9a0c:  mov    %ecx,0x0(%ebp)
0x000e9a0f:  mov    0x18(%esp),%eax
0x000e9a13:  mov    %edx,(%eax)
0x000e9a15:  pop    %ebx
0x000e9a16:  pop    %esi
0x000e9a17:  pop    %edi
0x000e9a18:  pop    %ebp
0x000e9a19:  ret    

----------------
IN: 
0x000efc43:  mov    0xc(%esp),%eax
0x000efc47:  mov    %eax,0x1b(%esp)
0x000efc4b:  mov    0x10(%esp),%eax
0x000efc4f:  mov    %eax,0x1f(%esp)
0x000efc53:  mov    0x14(%esp),%eax
0x000efc57:  mov    %eax,0x23(%esp)
0x000efc5b:  movb   $0x0,0x27(%esp)
0x000efc60:  mov    $0xf4949,%edx
0x000efc65:  lea    0x1b(%esp),%eax
0x000efc69:  call   0xe9971

----------------
IN: 
0x000e9971:  push   %ebx
0x000e9972:  xor    %ecx,%ecx
0x000e9974:  mov    (%eax,%ecx,1),%bl
0x000e9977:  cmp    (%edx,%ecx,1),%bl
0x000e997a:  je     0xe9988

----------------
IN: 
0x000e997c:  setge  %al
0x000e997f:  movzbl %al,%eax
0x000e9982:  lea    -0x1(%eax,%eax,1),%eax
0x000e9986:  jmp    0xe998f

----------------
IN: 
0x000e998f:  pop    %ebx
0x000e9990:  ret    

----------------
IN: 
0x000efc6e:  pop    %edx
0x000efc6f:  pop    %ecx
0x000efc70:  test   %eax,%eax
0x000efc72:  jne    0xefcb5

----------------
IN: 
0x000efcb5:  add    $0x100,%ebx
0x000efcbb:  cmp    $0x40010000,%ebx
0x000efcc1:  jne    0xefc2a

----------------
IN: 
0x000efc2a:  lea    0xc(%esp),%eax
0x000efc2e:  push   %eax
0x000efc2f:  lea    0xc(%esp),%eax
0x000efc33:  push   %eax
0x000efc34:  lea    0xc(%esp),%ecx
0x000efc38:  lea    0x8(%esp),%edx
0x000efc3c:  mov    %ebx,%eax
0x000efc3e:  call   0xe99c3

----------------
IN: 
0x000efcc7:  cmpl   $0x0,0xf5208
0x000efcce:  jne    0xefcdd

----------------
IN: 
0x000efcd0:  push   $0xf49af
0x000efcd5:  call   0xec4d8

----------------
IN: 
0x000efcda:  pop    %eax
0x000efcdb:  jmp    0xefce7

----------------
IN: 
0x000efce7:  call   0xedfdb

----------------
IN: 
0x000edfdb:  push   %esi
0x000edfdc:  push   %ebx
0x000edfdd:  call   0xe97da

----------------
IN: 
0x000e97da:  mov    0xf5d00,%eax
0x000e97df:  shr    %eax
0x000e97e1:  and    $0x1,%eax
0x000e97e4:  ret    

----------------
IN: 
0x000edfe2:  test   %eax,%eax
0x000edfe4:  jne    0xee04a

----------------
IN: 
0x000edfe6:  xor    %edx,%edx
0x000edfe8:  or     $0xffffffff,%eax
0x000edfeb:  call   0xea50b

----------------
IN: 
0x000ea50b:  push   %esi
0x000ea50c:  push   %ebx
0x000ea50d:  mov    %eax,%ebx
0x000ea50f:  mov    %edx,%esi
0x000ea511:  test   $0x7,%al
0x000ea513:  jne    0xea546

----------------
IN: 
0x000ea546:  inc    %ebx
0x000ea547:  jmp    0xea529

----------------
IN: 
0x000ea529:  movzwl %bx,%eax
0x000ea52c:  movzbl %bh,%edx
0x000ea52f:  cmp    %esi,%edx
0x000ea531:  jne    0xea549

----------------
IN: 
0x000ea533:  xor    %edx,%edx
0x000ea535:  call   0xea491

----------------
IN: 
0x000ea491:  mov    %edx,%ecx
0x000ea493:  mov    0xf54d8,%edx
0x000ea499:  test   %edx,%edx
0x000ea49b:  movzwl %ax,%eax
0x000ea49e:  je     0xea4ab

----------------
IN: 
0x000ea4ab:  shl    $0x8,%eax
0x000ea4ae:  mov    %ecx,%edx
0x000ea4b0:  and    $0xfc,%edx
0x000ea4b6:  or     %edx,%eax
0x000ea4b8:  or     $0x80000000,%eax
0x000ea4bd:  mov    $0xcf8,%edx
0x000ea4c2:  out    %eax,(%dx)
0x000ea4c3:  and    $0x2,%ecx
0x000ea4c6:  lea    0xcfc(%ecx),%edx
0x000ea4cc:  in     (%dx),%ax
0x000ea4ce:  ret    

----------------
IN: 
0x000ea53a:  dec    %eax
0x000ea53b:  cmp    $0xfffffffd,%ax
0x000ea53f:  jbe    0xea54c

----------------
IN: 
0x000ea54c:  mov    %ebx,%eax
0x000ea54e:  pop    %ebx
0x000ea54f:  pop    %esi
0x000ea550:  ret    

----------------
IN: 
0x000edff0:  mov    %eax,%ebx
0x000edff2:  test   %eax,%eax
0x000edff4:  js     0xee03f

----------------
IN: 
0x000edff6:  movzwl %bx,%esi
0x000edff9:  xor    %edx,%edx
0x000edffb:  mov    %esi,%eax
0x000edffd:  call   0xea337

----------------
IN: 
0x000ea337:  mov    0xf54d8,%ecx
0x000ea33d:  test   %ecx,%ecx
0x000ea33f:  movzwl %ax,%eax
0x000ea342:  je     0xea34e

----------------
IN: 
0x000ea34e:  shl    $0x8,%eax
0x000ea351:  and    $0xfc,%edx
0x000ea357:  or     %edx,%eax
0x000ea359:  or     $0x80000000,%eax
0x000ea35e:  mov    $0xcf8,%edx
0x000ea363:  out    %eax,(%dx)
0x000ea364:  mov    $0xcfc,%edx
0x000ea369:  in     (%dx),%eax
0x000ea36a:  ret    

----------------
IN: 
0x000ee002:  cmp    $0x8086,%ax
0x000ee006:  jne    0xee039

----------------
IN: 
0x000ee008:  shr    $0x10,%eax
0x000ee00b:  cmp    $0x1237,%eax
0x000ee010:  jne    0xee019

----------------
IN: 
0x000ee012:  mov    $0x59,%edx
0x000ee017:  jmp    0xee025

----------------
IN: 
0x000ee025:  mov    %esi,%eax
0x000ee027:  call   0xea6ff

----------------
IN: 
0x000ea6ff:  push   %ebx
0x000ea700:  push   %ecx
0x000ea701:  movzwl %ax,%ebx
0x000ea704:  mov    %edx,(%esp)
0x000ea707:  mov    %ebx,%eax
0x000ea709:  call   0xea4cf

----------------
IN: 
0x000ea4cf:  mov    %edx,%ecx
0x000ea4d1:  mov    0xf54d8,%edx
0x000ea4d7:  test   %edx,%edx
0x000ea4d9:  movzwl %ax,%eax
0x000ea4dc:  je     0xea4e8

----------------
IN: 
0x000ea4e8:  shl    $0x8,%eax
0x000ea4eb:  mov    %ecx,%edx
0x000ea4ed:  and    $0xfc,%edx
0x000ea4f3:  or     %edx,%eax
0x000ea4f5:  or     $0x80000000,%eax
0x000ea4fa:  mov    $0xcf8,%edx
0x000ea4ff:  out    %eax,(%dx)
0x000ea500:  and    $0x3,%ecx
0x000ea503:  lea    0xcfc(%ecx),%edx
0x000ea509:  in     (%dx),%al
0x000ea50a:  ret    

----------------
IN: 
0x000ea70e:  test   $0x10,%al
0x000ea710:  mov    (%esp),%edx
0x000ea713:  mov    %ebx,%eax
0x000ea715:  jne    0xea720

----------------
IN: 
0x000ea717:  mov    $0xfffea408,%ecx
0x000ea71c:  pop    %ebx
0x000ea71d:  pop    %ebx
0x000ea71e:  jmp    *%ecx

----------------
IN: 
0xfffea408:  push   %ebp
0xfffea409:  push   %edi
0xfffea40a:  push   %esi
0xfffea40b:  push   %ebx
0xfffea40c:  sub    $0x8,%esp
0xfffea40f:  mov    %edx,%esi
0xfffea411:  mov    %edx,%edi
0xfffea413:  and    $0xfffffffc,%edi
0xfffea416:  movzwl %ax,%ebx
0xfffea419:  mov    %edi,%edx
0xfffea41b:  mov    %ebx,%eax
0xfffea41d:  call   0xfffea337

----------------
IN: 
0xfffea337:  mov    0xf54d8,%ecx
0xfffea33d:  test   %ecx,%ecx
0xfffea33f:  movzwl %ax,%eax
0xfffea342:  je     0xfffea34e

----------------
IN: 
0xfffea34e:  shl    $0x8,%eax
0xfffea351:  and    $0xfc,%edx
0xfffea357:  or     %edx,%eax
0xfffea359:  or     $0x80000000,%eax
0xfffea35e:  mov    $0xcf8,%edx
0xfffea363:  out    %eax,(%dx)
0xfffea364:  mov    $0xcfc,%edx
0xfffea369:  in     (%dx),%eax
0xfffea36a:  ret    

----------------
IN: 
0xfffea422:  mov    %eax,(%esp)
0xfffea425:  lea    0x4(%edi),%ebp
0xfffea428:  mov    %ebp,%edx
0xfffea42a:  mov    %ebx,%eax
0xfffea42c:  call   0xfffea337

----------------
IN: 
0xfffea431:  mov    %eax,0x4(%esp)
0xfffea435:  mov    %esi,%eax
0xfffea437:  and    $0x3,%eax
0xfffea43a:  lea    (%esp,%eax,1),%ecx
0xfffea43d:  xor    %edx,%edx
0xfffea43f:  movb   $0x33,0x1(%ecx,%edx,1)
0xfffea444:  inc    %edx
0xfffea445:  cmp    $0x6,%edx
0xfffea448:  jne    0xfffea43f

----------------
IN: 
0xfffea43f:  movb   $0x33,0x1(%ecx,%edx,1)
0xfffea444:  inc    %edx
0xfffea445:  cmp    $0x6,%edx
0xfffea448:  jne    0xfffea43f

----------------
IN: 
0xfffea44a:  movzbl (%esp,%eax,1),%esi
0xfffea44e:  and    $0x10,%esi
0xfffea451:  movb   $0x30,(%esp,%eax,1)
0xfffea455:  mov    (%esp),%ecx
0xfffea458:  mov    %edi,%edx
0xfffea45a:  mov    %ebx,%eax
0xfffea45c:  call   0xfffea07a

----------------
IN: 
0xfffea07a:  push   %esi
0xfffea07b:  push   %ebx
0xfffea07c:  mov    %edx,%ebx
0xfffea07e:  mov    0xf54d8,%esi
0xfffea084:  test   %esi,%esi
0xfffea086:  movzwl %ax,%edx
0xfffea089:  je     0xfffea096

----------------
IN: 
0xfffea096:  mov    %edx,%eax
0xfffea098:  shl    $0x8,%eax
0xfffea09b:  and    $0xfc,%ebx
0xfffea0a1:  or     %ebx,%eax
0xfffea0a3:  or     $0x80000000,%eax
0xfffea0a8:  mov    $0xcf8,%edx
0xfffea0ad:  out    %eax,(%dx)
0xfffea0ae:  mov    $0xcfc,%edx
0xfffea0b3:  mov    %ecx,%eax
0xfffea0b5:  out    %eax,(%dx)
0xfffea0b6:  pop    %ebx
0xfffea0b7:  pop    %esi
0xfffea0b8:  ret    

----------------
IN: 
0xfffea461:  mov    0x4(%esp),%ecx
0xfffea465:  mov    %ebp,%edx
0xfffea467:  mov    %ebx,%eax
0xfffea469:  call   0xfffea07a

----------------
IN: 
0xfffea46e:  mov    %esi,%eax
0xfffea470:  test   %al,%al
0xfffea472:  jne    0xfffea489

----------------
IN: 
0xfffea474:  mov    $0xd2d80,%eax
0xfffea479:  mov    $0x100000,%ecx
0xfffea47e:  sub    %eax,%ecx
0xfffea480:  mov    $0xfffd2d80,%esi
0xfffea485:  mov    %eax,%edi
0xfffea487:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0xfffea487:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0xfffea489:  add    $0x8,%esp
0xfffea48c:  pop    %ebx
0xfffea48d:  pop    %esi
0xfffea48e:  pop    %edi
0xfffea48f:  pop    %ebp
0xfffea490:  ret    

----------------
IN: 
0x000ee02c:  call   0xea727

----------------
IN: 
0x000ea727:  cmpl   $0x0,0xf61c8
0x000ea72e:  jne    0xea742

----------------
IN: 
0x000ea730:  mov    $0x8f,%al
0x000ea732:  out    %al,$0x70
0x000ea734:  xor    %eax,%eax
0x000ea736:  out    %al,$0x71
0x000ea738:  movl   $0x1,0xf61c8
0x000ea742:  ret    

----------------
IN: 
0x000ee031:  mov    %ebx,0xf5158
0x000ee037:  jmp    0xee04a

----------------
IN: 
0x000ee04a:  pop    %ebx
0x000ee04b:  pop    %esi
0x000ee04c:  ret    

----------------
IN: 
0x000efcec:  call   0xe7f27

----------------
IN: 
0x000e7f27:  push   %ebp
0x000e7f28:  push   %edi
0x000e7f29:  push   %esi
0x000e7f2a:  push   %ebx
0x000e7f2b:  sub    $0x70,%esp
0x000e7f2e:  call   0xea727

----------------
IN: 
0x000ea742:  ret    

----------------
IN: 
0x000e7f33:  call   0xe97da

----------------
IN: 
0x000e97da:  mov    0xf5d00,%eax
0x000e97df:  shr    %eax
0x000e97e1:  and    $0x1,%eax
0x000e97e4:  ret    

----------------
IN: 
0x000e7f38:  test   %eax,%eax
0x000e7f3a:  jne    0xe7f51

----------------
IN: 
0x000e7f3c:  mov    0xf6034,%dx
0x000e7f43:  in     (%dx),%al
0x000e7f44:  cmp    $0xe9,%al
0x000e7f46:  je     0xe7f51

----------------
IN: 
0x000e7f48:  movw   $0x0,0xf6034
0x000e7f51:  xor    %edx,%edx
0x000e7f53:  xor    %eax,%eax
0x000e7f55:  call   0xea491

----------------
IN: 
0x000ea491:  mov    %edx,%ecx
0x000ea493:  mov    0xf54d8,%edx
0x000ea499:  test   %edx,%edx
0x000ea49b:  movzwl %ax,%eax
0x000ea49e:  je     0xea4ab

----------------
IN: 
0x000ea4ab:  shl    $0x8,%eax
0x000ea4ae:  mov    %ecx,%edx
0x000ea4b0:  and    $0xfc,%edx
0x000ea4b6:  or     %edx,%eax
0x000ea4b8:  or     $0x80000000,%eax
0x000ea4bd:  mov    $0xcf8,%edx
0x000ea4c2:  out    %eax,(%dx)
0x000ea4c3:  and    $0x2,%ecx
0x000ea4c6:  lea    0xcfc(%ecx),%edx
0x000ea4cc:  in     (%dx),%ax
0x000ea4ce:  ret    

----------------
IN: 
0x000e7f5a:  movzwl %ax,%esi
0x000e7f5d:  lea    -0x1(%esi),%eax
0x000e7f60:  cmp    $0xfffffffd,%ax
0x000e7f64:  ja     0xe7fd4

----------------
IN: 
0x000e7f66:  mov    $0x2,%edx
0x000e7f6b:  xor    %eax,%eax
0x000e7f6d:  call   0xea491

----------------
IN: 
0x000e7f72:  movzwl %ax,%ebx
0x000e7f75:  mov    $0x2c,%edx
0x000e7f7a:  xor    %eax,%eax
0x000e7f7c:  call   0xea491

----------------
IN: 
0x000e7f81:  mov    %eax,%edi
0x000e7f83:  mov    $0x2e,%edx
0x000e7f88:  xor    %eax,%eax
0x000e7f8a:  call   0xea491

----------------
IN: 
0x000e7f8f:  cmp    $0x1100,%ax
0x000e7f93:  jne    0xe7fd4

----------------
IN: 
0x000e7f95:  cmp    $0x1af4,%di
0x000e7f9a:  jne    0xe7fd4

----------------
IN: 
0x000e7f9c:  orl    $0x1,0xf5d00
0x000e7fa3:  cmp    $0x1237,%bx
0x000e7fa8:  je     0xe7fb8

----------------
IN: 
0x000e7fb8:  push   $0xf4790
0x000e7fbd:  call   0xec4d8

----------------
IN: 
0x000ec4d8:  lea    0x8(%esp),%ecx
0x000ec4dc:  mov    0x4(%esp),%edx
0x000ec4e0:  mov    $0xf5168,%eax
0x000ec4e5:  call   0xebd11

----------------
IN: 
0x000ebd11:  push   %ebp
0x000ebd12:  push   %edi
0x000ebd13:  push   %esi
0x000ebd14:  push   %ebx
0x000ebd15:  sub    $0x8,%esp
0x000ebd18:  mov    %eax,%ebx
0x000ebd1a:  mov    %edx,%edi
0x000ebd1c:  mov    %ecx,%ebp
0x000ebd1e:  movsbl (%edi),%edx
0x000ebd21:  test   %dl,%dl
0x000ebd23:  je     0xebf7a

----------------
IN: 
0x000ebd29:  cmp    $0x25,%dl
0x000ebd2c:  jne    0xebf65

----------------
IN: 
0x000ebf65:  mov    %ebx,%eax
0x000ebf67:  call   0xe9803

----------------
IN: 
0x000e9803:  movsbl %dl,%edx
0x000e9806:  jmp    *(%eax)

----------------
IN: 
0x000eb0a7:  mov    %dl,%al
0x000eb0a9:  mov    0xf6034,%dx
0x000eb0b0:  test   %dx,%dx
0x000eb0b3:  je     0xeb0b6

----------------
IN: 
0x000eb0b6:  ret    

----------------
IN: 
0x000ebf6c:  mov    %edi,%esi
0x000ebf6e:  jmp    0xebf72

----------------
IN: 
0x000ebf72:  lea    0x1(%esi),%edi
0x000ebf75:  jmp    0xebd1e

----------------
IN: 
0x000ebd1e:  movsbl (%edi),%edx
0x000ebd21:  test   %dl,%dl
0x000ebd23:  je     0xebf7a

----------------
IN: 
0x000ebf7a:  add    $0x8,%esp
0x000ebf7d:  pop    %ebx
0x000ebf7e:  pop    %esi
0x000ebf7f:  pop    %edi
0x000ebf80:  pop    %ebp
0x000ebf81:  ret    

----------------
IN: 
0x000ec4ea:  ret    

----------------
IN: 
0x000e7fc2:  pop    %ebp
0x000e7fc3:  jmp    0xe7fd4

----------------
IN: 
0x000e7fd4:  lea    0x1c(%esp),%eax
0x000e7fd8:  push   %eax
0x000e7fd9:  lea    0x1c(%esp),%esi
0x000e7fdd:  push   %esi
0x000e7fde:  lea    0x1c(%esp),%ecx
0x000e7fe2:  lea    0x18(%esp),%edx
0x000e7fe6:  mov    $0x40000000,%eax
0x000e7feb:  call   0xe99c3

----------------
IN: 
0x000e99c3:  push   %ebp
0x000e99c4:  push   %edi
0x000e99c5:  push   %esi
0x000e99c6:  push   %ebx
0x000e99c7:  mov    %edx,%edi
0x000e99c9:  mov    %ecx,%esi
0x000e99cb:  mov    0x14(%esp),%ebp
0x000e99cf:  pushf  
0x000e99d0:  pop    %ecx
0x000e99d1:  mov    %ecx,%edx
0x000e99d3:  xor    $0x200000,%edx
0x000e99d9:  push   %edx
0x000e99da:  popf   

----------------
IN: 
0x000e99db:  pushf  
0x000e99dc:  pop    %edx
0x000e99dd:  push   %ecx
0x000e99de:  popf   

----------------
IN: 
0x000e99df:  xor    %ecx,%edx
0x000e99e1:  bt     $0x15,%edx
0x000e99e5:  jb     0xe9a06

----------------
IN: 
0x000e9a06:  cpuid  
0x000e9a08:  mov    %eax,(%edi)
0x000e9a0a:  mov    %ebx,(%esi)
0x000e9a0c:  mov    %ecx,0x0(%ebp)
0x000e9a0f:  mov    0x18(%esp),%eax
0x000e9a13:  mov    %edx,(%eax)
0x000e9a15:  pop    %ebx
0x000e9a16:  pop    %esi
0x000e9a17:  pop    %edi
0x000e9a18:  pop    %ebp
0x000e9a19:  ret    

----------------
IN: 
0x000e7ff0:  mov    0x1c(%esp),%eax
0x000e7ff4:  mov    %eax,0x38(%esp)
0x000e7ff8:  mov    0x20(%esp),%eax
0x000e7ffc:  mov    %eax,0x3c(%esp)
0x000e8000:  mov    0x24(%esp),%eax
0x000e8004:  mov    %eax,0x40(%esp)
0x000e8008:  movb   $0x0,0x44(%esp)
0x000e800d:  mov    $0xf47ea,%edx
0x000e8012:  lea    0x38(%esp),%eax
0x000e8016:  call   0xe9971

----------------
IN: 
0x000e9971:  push   %ebx
0x000e9972:  xor    %ecx,%ecx
0x000e9974:  mov    (%eax,%ecx,1),%bl
0x000e9977:  cmp    (%edx,%ecx,1),%bl
0x000e997a:  je     0xe9988

----------------
IN: 
0x000e997c:  setge  %al
0x000e997f:  movzbl %al,%eax
0x000e9982:  lea    -0x1(%eax,%eax,1),%eax
0x000e9986:  jmp    0xe998f

----------------
IN: 
0x000e998f:  pop    %ebx
0x000e9990:  ret    

----------------
IN: 
0x000e801b:  pop    %ebx
0x000e801c:  pop    %edi
0x000e801d:  test   %eax,%eax
0x000e801f:  jne    0xe807e

----------------
IN: 
0x000e807e:  call   0xe97da

----------------
IN: 
0x000e8083:  test   %eax,%eax
0x000e8085:  je     0xe8112

----------------
IN: 
0x000e8112:  call   0xdb345

----------------
IN: 
0x000db345:  mov    0xf53e4,%ecx
0x000db34b:  test   %ecx,%ecx
0x000db34d:  jne    0xdb3c1

----------------
IN: 
0x000db34f:  push   %esi
0x000db350:  push   %ebx
0x000db351:  push   %esi
0x000db352:  xor    %eax,%eax
0x000db354:  mov    $0x510,%edx
0x000db359:  out    %ax,(%dx)
0x000db35b:  xor    %ebx,%ebx
0x000db35d:  mov    $0x511,%edx
0x000db362:  in     (%dx),%al
0x000db363:  movzbl %al,%eax
0x000db366:  movsbl 0xf1235(%ebx),%esi
0x000db36d:  cmp    %esi,%eax
0x000db36f:  jne    0xdb3c7

----------------
IN: 
0x000db371:  inc    %ebx
0x000db372:  cmp    $0x4,%ebx
0x000db375:  jne    0xdb362

----------------
IN: 
0x000db362:  in     (%dx),%al
0x000db363:  movzbl %al,%eax
0x000db366:  movsbl 0xf1235(%ebx),%esi
0x000db36d:  cmp    %esi,%eax
0x000db36f:  jne    0xdb3c7

----------------
IN: 
0x000db377:  push   $0xf123a
0x000db37c:  call   0xec4d8

----------------
IN: 
0x000db381:  movl   $0x1,0xf53e4
0x000db38b:  mov    $0x4,%ecx
0x000db390:  mov    $0x1,%edx
0x000db395:  lea    0x4(%esp),%eax
0x000db399:  call   0xec37e

----------------
IN: 
0x000ec37e:  push   %esi
0x000ec37f:  push   %ebx
0x000ec380:  mov    %eax,%ebx
0x000ec382:  mov    %edx,%eax
0x000ec384:  mov    %ecx,%esi
0x000ec386:  cmpl   $0x0,0xf53e0
0x000ec38d:  je     0xec3a2

----------------
IN: 
0x000ec3a2:  mov    $0x510,%edx
0x000ec3a7:  out    %ax,(%dx)
0x000ec3a9:  test   %ecx,%ecx
0x000ec3ab:  je     0xec3b8

----------------
IN: 
0x000ec3ad:  mov    %ecx,%edx
0x000ec3af:  mov    %ebx,%eax
0x000ec3b1:  pop    %ebx
0x000ec3b2:  pop    %esi
0x000ec3b3:  jmp    0xec35d

----------------
IN: 
0x000ec35d:  cmpl   $0x0,0xf53e0
0x000ec364:  je     0xec370

----------------
IN: 
0x000ec370:  push   %edi
0x000ec371:  mov    %edx,%ecx
0x000ec373:  mov    %eax,%edi
0x000ec375:  mov    $0x511,%edx
0x000ec37a:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x000ec37a:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x000ec37c:  pop    %edi
0x000ec37d:  ret    

----------------
IN: 
0x000db39e:  pop    %ebx
0x000db39f:  testb  $0x2,(%esp)
0x000db3a3:  je     0xdb3ba

----------------
IN: 
0x000db3a5:  push   $0xf124d
0x000db3aa:  call   0xec4d8

----------------
IN: 
0x000db3af:  movl   $0x1,0xf53e0
0x000db3b9:  pop    %ecx
0x000db3ba:  mov    $0x1,%ecx
0x000db3bf:  jmp    0xdb3c7

----------------
IN: 
0x000db3c7:  mov    %ecx,%eax
0x000db3c9:  pop    %edx
0x000db3ca:  pop    %ebx
0x000db3cb:  pop    %esi
0x000db3cc:  ret    

----------------
IN: 
0x000e8117:  test   %eax,%eax
0x000e8119:  je     0xe82a6

----------------
IN: 
0x000e811f:  mov    $0x4,%ecx
0x000e8124:  mov    $0x19,%edx
0x000e8129:  mov    %esi,%eax
0x000e812b:  call   0xec37e

----------------
IN: 
0x000ec38f:  shl    $0x10,%eax
0x000ec392:  or     $0xa,%eax
0x000ec395:  mov    %eax,%ecx
0x000ec397:  mov    %esi,%edx
0x000ec399:  mov    %ebx,%eax
0x000ec39b:  pop    %ebx
0x000ec39c:  pop    %esi
0x000ec39d:  jmp    0xec309

----------------
IN: 
0x000ec309:  push   %esi
0x000ec30a:  push   %ebx
0x000ec30b:  sub    $0x10,%esp
0x000ec30e:  mov    %edx,%esi
0x000ec310:  mov    %ecx,%ebx
0x000ec312:  xor    %edx,%edx
0x000ec314:  call   0xeb449

----------------
IN: 
0x000eb449:  push   %ebp
0x000eb44a:  mov    %esp,%ebp
0x000eb44c:  mov    %edx,%ecx
0x000eb44e:  bswap  %ecx
0x000eb450:  mov    %eax,%edx
0x000eb452:  bswap  %edx
0x000eb454:  mov    %ecx,%eax
0x000eb456:  pop    %ebp
0x000eb457:  ret    

----------------
IN: 
0x000ec319:  mov    %eax,0x8(%esp)
0x000ec31d:  mov    %edx,0xc(%esp)
0x000ec321:  mov    %esi,%eax
0x000ec323:  call   0xe9c60

----------------
IN: 
0x000e9c60:  bswap  %eax
0x000e9c62:  ret    

----------------
IN: 
0x000ec328:  mov    %eax,0x4(%esp)
0x000ec32c:  mov    %ebx,%eax
0x000ec32e:  call   0xe9c60

----------------
IN: 
0x000ec333:  mov    %eax,(%esp)
0x000ec336:  mov    %esp,%eax
0x000ec338:  call   0xe9c60

----------------
IN: 
0x000ec33d:  mov    $0x518,%edx
0x000ec342:  out    %eax,(%dx)
0x000ec343:  mov    (%esp),%eax
0x000ec346:  call   0xe9c60

----------------
IN: 
0x000ec34b:  and    $0xfffffffe,%eax
0x000ec34e:  je     0xec357

----------------
IN: 
0x000ec357:  add    $0x10,%esp
0x000ec35a:  pop    %ebx
0x000ec35b:  pop    %esi
0x000ec35c:  ret    

----------------
IN: 
0x000e8130:  mov    0x18(%esp),%eax
0x000e8134:  call   0xe9c60

----------------
IN: 
0x000e8139:  mov    %eax,0x18(%esp)
0x000e813d:  xor    %esi,%esi
0x000e813f:  cmp    0x18(%esp),%esi
0x000e8143:  jae    0xe8185

----------------
IN: 
0x000e8145:  mov    $0x40,%edx
0x000e814a:  lea    0x30(%esp),%eax
0x000e814e:  call   0xec35d

----------------
IN: 
0x000ec366:  mov    $0x2,%ecx
0x000ec36b:  jmp    0xec309

----------------
IN: 
0x000e8153:  mov    $0x9,%ecx
0x000e8158:  mov    $0xf1709,%edx
0x000e815d:  lea    0x38(%esp),%eax
0x000e8161:  call   0xd4eee

----------------
IN: 
0x000d4eee:  add    %eax,%ecx
0x000d4ef0:  cmp    %ecx,%eax
0x000d4ef2:  jne    0xd4ef7

----------------
IN: 
0x000d4ef7:  push   %ebx
0x000d4ef8:  mov    (%edx),%bl
0x000d4efa:  cmp    %bl,(%eax)
0x000d4efc:  je     0xd4f05

----------------
IN: 
0x000d4efe:  sbb    %eax,%eax
0x000d4f00:  or     $0x1,%eax
0x000d4f03:  jmp    0xd4f0d

----------------
IN: 
0x000d4f0d:  pop    %ebx
0x000d4f0e:  ret    

----------------
IN: 
0x000e8166:  test   %eax,%eax
0x000e8168:  je     0xe816d

----------------
IN: 
0x000e816a:  inc    %esi
0x000e816b:  jmp    0xe813f

----------------
IN: 
0x000e813f:  cmp    0x18(%esp),%esi
0x000e8143:  jae    0xe8185

----------------
IN: 
0x000d4f05:  inc    %eax
0x000d4f06:  inc    %edx
0x000d4f07:  cmp    %ecx,%eax
0x000d4f09:  jne    0xd4ef8

----------------
IN: 
0x000d4ef8:  mov    (%edx),%bl
0x000d4efa:  cmp    %bl,(%eax)
0x000d4efc:  je     0xd4f05

----------------
IN: 
0x000d4f0b:  xor    %eax,%eax
0x000d4f0d:  pop    %ebx
0x000d4f0e:  ret    

----------------
IN: 
0x000e816d:  mov    0x34(%esp),%esi
0x000e8171:  rol    $0x8,%si
0x000e8175:  mov    0x30(%esp),%eax
0x000e8179:  call   0xe9c60

----------------
IN: 
0x000e817e:  mov    %eax,%ecx
0x000e8180:  test   %si,%si
0x000e8183:  jne    0xe8195

----------------
IN: 
0x000e8195:  mov    $0x510,%edx
0x000e819a:  mov    %esi,%eax
0x000e819c:  out    %ax,(%dx)
0x000e819e:  mov    $0x14,%esi
0x000e81a3:  mov    %ecx,%eax
0x000e81a5:  xor    %edx,%edx
0x000e81a7:  div    %esi
0x000e81a9:  mov    %eax,0x18(%esp)
0x000e81ad:  xor    %ebp,%ebp
0x000e81af:  cmp    0x18(%esp),%ebp
0x000e81b3:  jae    0xe830c

----------------
IN: 
0x000e81b9:  mov    $0x14,%edx
0x000e81be:  lea    0x1c(%esp),%eax
0x000e81c2:  call   0xec35d

----------------
IN: 
0x000e81c7:  mov    0x2c(%esp),%eax
0x000e81cb:  cmp    $0x1,%eax
0x000e81ce:  je     0xe81f8

----------------
IN: 
0x000e81f8:  push   $0x1
0x000e81fa:  pushl  0x2c(%esp)
0x000e81fe:  pushl  0x2c(%esp)
0x000e8202:  mov    0x28(%esp),%eax
0x000e8206:  mov    0x2c(%esp),%edx
0x000e820a:  call   0xd776b

----------------
IN: 
0x000d776b:  push   %edi
0x000d776c:  push   %esi
0x000d776d:  push   %ebx
0x000d776e:  mov    0x10(%esp),%ebx
0x000d7772:  mov    0x14(%esp),%ecx
0x000d7776:  mov    %ecx,%edi
0x000d7778:  or     %ebx,%edi
0x000d777a:  je     0xd7784

----------------
IN: 
0x000d777c:  pop    %ebx
0x000d777d:  pop    %esi
0x000d777e:  pop    %edi
0x000d777f:  jmp    0xd759c

----------------
IN: 
0x000d759c:  push   %ebp
0x000d759d:  push   %edi
0x000d759e:  push   %esi
0x000d759f:  push   %ebx
0x000d75a0:  sub    $0x24,%esp
0x000d75a3:  mov    %eax,0xc(%esp)
0x000d75a7:  mov    %edx,0x10(%esp)
0x000d75ab:  mov    0x38(%esp),%eax
0x000d75af:  mov    0x3c(%esp),%edx
0x000d75b3:  mov    %eax,0x1c(%esp)
0x000d75b7:  mov    %edx,0x20(%esp)
0x000d75bb:  mov    0x40(%esp),%ebp
0x000d75bf:  mov    %eax,%esi
0x000d75c1:  mov    %edx,%edi
0x000d75c3:  add    0xc(%esp),%esi
0x000d75c7:  adc    0x10(%esp),%edi
0x000d75cb:  mov    %esi,(%esp)
0x000d75ce:  mov    %edi,0x4(%esp)
0x000d75d2:  mov    0xf5d24,%edx
0x000d75d8:  movl   $0x0,0x8(%esp)
0x000d75e0:  cmp    %edx,0x8(%esp)
0x000d75e4:  jge    0xd7732

----------------
IN: 
0x000d7732:  cmp    $0xffffffff,%ebp
0x000d7735:  je     0xd7763

----------------
IN: 
0x000d7737:  mov    %ebp,0x40(%esp)
0x000d773b:  mov    0x1c(%esp),%eax
0x000d773f:  mov    0x20(%esp),%edx
0x000d7743:  mov    %eax,0x38(%esp)
0x000d7747:  mov    %edx,0x3c(%esp)
0x000d774b:  mov    0xc(%esp),%edx
0x000d774f:  mov    0x10(%esp),%ecx
0x000d7753:  mov    0x8(%esp),%eax
0x000d7757:  add    $0x24,%esp
0x000d775a:  pop    %ebx
0x000d775b:  pop    %esi
0x000d775c:  pop    %edi
0x000d775d:  pop    %ebp
0x000d775e:  jmp    0xd7512

----------------
IN: 
0x000d7512:  push   %ebp
0x000d7513:  push   %edi
0x000d7514:  push   %esi
0x000d7515:  push   %ebx
0x000d7516:  sub    $0xc,%esp
0x000d7519:  mov    %ecx,%edi
0x000d751b:  mov    0x20(%esp),%ecx
0x000d751f:  mov    0x24(%esp),%ebx
0x000d7523:  mov    %ecx,(%esp)
0x000d7526:  mov    %ebx,0x4(%esp)
0x000d752a:  mov    0x28(%esp),%ebp
0x000d752e:  mov    0xf5d24,%ecx
0x000d7534:  cmp    $0x1f,%ecx
0x000d7537:  jle    0xd754f

----------------
IN: 
0x000d754f:  mov    %edx,%esi
0x000d7551:  imul   $0x14,%eax,%ebx
0x000d7554:  sub    %eax,%ecx
0x000d7556:  imul   $0x14,%ecx,%ecx
0x000d7559:  lea    0xf5d40(%ebx),%edx
0x000d755f:  lea    0xf5d54(%ebx),%eax
0x000d7565:  mov    %edx,0x8(%esp)
0x000d7569:  call   0xd6dfd

----------------
IN: 
0x000d6dfd:  push   %edi
0x000d6dfe:  push   %esi
0x000d6dff:  mov    %edx,%esi
0x000d6e01:  cmp    %eax,%edx
0x000d6e03:  jb     0xd6e0b

----------------
IN: 
0x000d6e0b:  sub    $0x1,%ecx
0x000d6e0e:  jb     0xd6e18

----------------
IN: 
0x000d6e18:  pop    %esi
0x000d6e19:  pop    %edi
0x000d6e1a:  ret    

----------------
IN: 
0x000d756e:  incl   0xf5d24
0x000d7574:  mov    %esi,0xf5d40(%ebx)
0x000d757a:  mov    %edi,0xf5d44(%ebx)
0x000d7580:  mov    (%esp),%esi
0x000d7583:  mov    0x4(%esp),%edi
0x000d7587:  mov    0x8(%esp),%edx
0x000d758b:  mov    %esi,0x8(%edx)
0x000d758e:  mov    %edi,0xc(%edx)
0x000d7591:  mov    %ebp,0x10(%edx)
0x000d7594:  add    $0xc,%esp
0x000d7597:  pop    %ebx
0x000d7598:  pop    %esi
0x000d7599:  pop    %edi
0x000d759a:  pop    %ebp
0x000d759b:  ret    

----------------
IN: 
0x000e820f:  pushl  0x34(%esp)
0x000e8213:  pushl  0x34(%esp)
0x000e8217:  pushl  0x34(%esp)
0x000e821b:  pushl  0x34(%esp)
0x000e821f:  push   $0xf48ba
0x000e8224:  call   0xec4d8

----------------
IN: 
0x000ebd32:  lea    0x1(%edi),%esi
0x000ebd35:  movb   $0x20,(%esp)
0x000ebd39:  xor    %ecx,%ecx
0x000ebd3b:  movsbl (%esi),%eax
0x000ebd3e:  lea    -0x30(%eax),%edx
0x000ebd41:  cmp    $0x9,%dl
0x000ebd44:  ja     0xebd60

----------------
IN: 
0x000ebd46:  cmp    $0x30,%al
0x000ebd48:  jne    0xebd4e

----------------
IN: 
0x000ebd4a:  test   %ecx,%ecx
0x000ebd4c:  je     0xebd57

----------------
IN: 
0x000ebd57:  movb   $0x30,(%esp)
0x000ebd5b:  xor    %ecx,%ecx
0x000ebd5d:  inc    %esi
0x000ebd5e:  jmp    0xebd3b

----------------
IN: 
0x000ebd3b:  movsbl (%esi),%eax
0x000ebd3e:  lea    -0x30(%eax),%edx
0x000ebd41:  cmp    $0x9,%dl
0x000ebd44:  ja     0xebd60

----------------
IN: 
0x000ebd4e:  imul   $0xa,%ecx,%edx
0x000ebd51:  lea    -0x30(%edx,%eax,1),%ecx
0x000ebd55:  jmp    0xebd5d

----------------
IN: 
0x000ebd5d:  inc    %esi
0x000ebd5e:  jmp    0xebd3b

----------------
IN: 
0x000ebd60:  xor    %edx,%edx
0x000ebd62:  cmp    $0x6c,%al
0x000ebd64:  jne    0xebd78

----------------
IN: 
0x000ebd66:  mov    0x1(%esi),%al
0x000ebd69:  cmp    $0x6c,%al
0x000ebd6b:  je     0xebd70

----------------
IN: 
0x000ebd70:  mov    0x2(%esi),%al
0x000ebd73:  add    $0x2,%esi
0x000ebd76:  mov    $0x1,%dl
0x000ebd78:  cmp    $0x64,%al
0x000ebd7a:  je     0xebde8

----------------
IN: 
0x000ebd7c:  jg     0xebdc4

----------------
IN: 
0x000ebdc4:  cmp    $0x73,%al
0x000ebdc6:  je     0xebf48

----------------
IN: 
0x000ebdcc:  jg     0xebdd7

----------------
IN: 
0x000ebdd7:  cmp    $0x75,%al
0x000ebdd9:  je     0xebe0d

----------------
IN: 
0x000ebddb:  cmp    $0x78,%al
0x000ebddd:  je     0xebebc

----------------
IN: 
0x000ebebc:  cmp    $0x58,%al
0x000ebebe:  sete   %al
0x000ebec1:  movzbl %al,%eax
0x000ebec4:  mov    %eax,%edi
0x000ebec6:  mov    0x0(%ebp),%eax
0x000ebec9:  mov    %eax,0x4(%esp)
0x000ebecd:  movsbl (%esp),%eax
0x000ebed1:  test   %dl,%dl
0x000ebed3:  je     0xebf04

----------------
IN: 
0x000ebed5:  lea    0x8(%ebp),%edx
0x000ebed8:  mov    %edx,(%esp)
0x000ebedb:  mov    0x4(%ebp),%edx
0x000ebede:  test   %edx,%edx
0x000ebee0:  je     0xebf0a

----------------
IN: 
0x000ebf0a:  push   %edi
0x000ebf0b:  push   %eax
0x000ebf0c:  mov    0xc(%esp),%edx
0x000ebf10:  mov    %ebx,%eax
0x000ebf12:  call   0xe990b

----------------
IN: 
0x000e990b:  push   %ebp
0x000e990c:  push   %edi
0x000e990d:  push   %esi
0x000e990e:  push   %ebx
0x000e990f:  sub    $0x8,%esp
0x000e9912:  mov    %edx,%esi
0x000e9914:  mov    %ecx,%ebx
0x000e9916:  mov    0x20(%esp),%edi
0x000e991a:  mov    0x1c(%esp),%dl
0x000e991e:  mov    %esi,%ebp
0x000e9920:  mov    $0x1,%ecx
0x000e9925:  shr    $0x4,%ebp
0x000e9928:  je     0xe992d

----------------
IN: 
0x000e992d:  sub    %ecx,%ebx
0x000e992f:  movsbl %dl,%ebp
0x000e9932:  test   %ebx,%ebx
0x000e9934:  jle    0xe994e

----------------
IN: 
0x000e9936:  mov    %ecx,0x4(%esp)
0x000e993a:  mov    %ebp,%edx
0x000e993c:  mov    %eax,(%esp)
0x000e993f:  call   0xe9803

----------------
IN: 
0x000e9944:  dec    %ebx
0x000e9945:  mov    0x4(%esp),%ecx
0x000e9949:  mov    (%esp),%eax
0x000e994c:  jmp    0xe9932

----------------
IN: 
0x000e9932:  test   %ebx,%ebx
0x000e9934:  jle    0xe994e

----------------
IN: 
0x000e994e:  mov    %edi,0x1c(%esp)
0x000e9952:  mov    %esi,%edx
0x000e9954:  add    $0x8,%esp
0x000e9957:  pop    %ebx
0x000e9958:  pop    %esi
0x000e9959:  pop    %edi
0x000e995a:  pop    %ebp
0x000e995b:  jmp    0xe9872

----------------
IN: 
0x000e9872:  push   %edi
0x000e9873:  push   %esi
0x000e9874:  push   %ebx
0x000e9875:  mov    %eax,%esi
0x000e9877:  mov    %edx,%ebx
0x000e9879:  mov    0x10(%esp),%edi
0x000e987d:  dec    %ecx
0x000e987e:  cmp    $0x6,%ecx
0x000e9881:  ja     0xe988a

----------------
IN: 
0x000e9883:  jmp    *0xf4ab8(,%ecx,4)

----------------
IN: 
0x000e98fa:  and    $0xf,%ebx
0x000e98fd:  mov    %ebx,%edx
0x000e98ff:  mov    %edi,%ecx
0x000e9901:  mov    %esi,%eax
0x000e9903:  pop    %ebx
0x000e9904:  pop    %esi
0x000e9905:  pop    %edi
0x000e9906:  jmp    0xe9856

----------------
IN: 
0x000e9856:  push   %ebx
0x000e9857:  lea    0x30(%edx),%ebx
0x000e985a:  cmp    $0x9,%edx
0x000e985d:  jbe    0xe9869

----------------
IN: 
0x000e9869:  movsbl %bl,%edx
0x000e986c:  pop    %ebx
0x000e986d:  jmp    0xe9803

----------------
IN: 
0x000ebf17:  pop    %ecx
0x000ebf18:  pop    %edi
0x000ebf19:  mov    (%esp),%ebp
0x000ebf1c:  jmp    0xebf72

----------------
IN: 
0x000e992a:  inc    %ecx
0x000e992b:  jmp    0xe9925

----------------
IN: 
0x000e9925:  shr    $0x4,%ebp
0x000e9928:  je     0xe992d

----------------
IN: 
0x000e9894:  mov    %ebx,%edx
0x000e9896:  shr    $0x18,%edx
0x000e9899:  and    $0xf,%edx
0x000e989c:  mov    %edi,%ecx
0x000e989e:  mov    %esi,%eax
0x000e98a0:  call   0xe9856

----------------
IN: 
0x000e98a5:  mov    %ebx,%edx
0x000e98a7:  shr    $0x14,%edx
0x000e98aa:  and    $0xf,%edx
0x000e98ad:  mov    %edi,%ecx
0x000e98af:  mov    %esi,%eax
0x000e98b1:  call   0xe9856

----------------
IN: 
0x000e98b6:  mov    %ebx,%edx
0x000e98b8:  shr    $0x10,%edx
0x000e98bb:  and    $0xf,%edx
0x000e98be:  mov    %edi,%ecx
0x000e98c0:  mov    %esi,%eax
0x000e98c2:  call   0xe9856

----------------
IN: 
0x000e98c7:  mov    %ebx,%edx
0x000e98c9:  shr    $0xc,%edx
0x000e98cc:  and    $0xf,%edx
0x000e98cf:  mov    %edi,%ecx
0x000e98d1:  mov    %esi,%eax
0x000e98d3:  call   0xe9856

----------------
IN: 
0x000e98d8:  mov    %ebx,%edx
0x000e98da:  shr    $0x8,%edx
0x000e98dd:  and    $0xf,%edx
0x000e98e0:  mov    %edi,%ecx
0x000e98e2:  mov    %esi,%eax
0x000e98e4:  call   0xe9856

----------------
IN: 
0x000e98e9:  mov    %ebx,%edx
0x000e98eb:  shr    $0x4,%edx
0x000e98ee:  and    $0xf,%edx
0x000e98f1:  mov    %edi,%ecx
0x000e98f3:  mov    %esi,%eax
0x000e98f5:  call   0xe9856

----------------
IN: 
0x000e8229:  mov    0x3c(%esp),%eax
0x000e822d:  mov    0x40(%esp),%edx
0x000e8231:  add    $0x20,%esp
0x000e8234:  cmp    $0x0,%edx
0x000e8237:  mov    0x24(%esp),%esi
0x000e823b:  mov    0x28(%esp),%edi
0x000e823f:  ja     0xe827c

----------------
IN: 
0x000e8241:  mov    0xe9778,%ecx
0x000e8247:  xor    %ebx,%ebx
0x000e8249:  mov    %ecx,0x8(%esp)
0x000e824d:  mov    %ebx,0xc(%esp)
0x000e8251:  mov    %eax,%ecx
0x000e8253:  mov    %edx,%ebx
0x000e8255:  add    %esi,%ecx
0x000e8257:  adc    %edi,%ebx
0x000e8259:  mov    %ecx,(%esp)
0x000e825c:  mov    %ebx,0x4(%esp)
0x000e8260:  mov    (%esp),%ebx
0x000e8263:  cmp    %ebx,0xe9778
0x000e8269:  mov    0xc(%esp),%ebx
0x000e826d:  sbb    0x4(%esp),%ebx
0x000e8271:  jae    0xe82a0

----------------
IN: 
0x000e8273:  add    %esi,%eax
0x000e8275:  mov    %eax,0xe9778
0x000e827a:  jmp    0xe82a0

----------------
IN: 
0x000e82a0:  inc    %ebp
0x000e82a1:  jmp    0xe81af

----------------
IN: 
0x000e81af:  cmp    0x18(%esp),%ebp
0x000e81b3:  jae    0xe830c

----------------
IN: 
0x000e830c:  push   $0x2
0x000e830e:  push   $0x0
0x000e8310:  push   $0x40000
0x000e8315:  mov    $0xfffc0000,%eax
0x000e831a:  xor    %edx,%edx
0x000e831c:  call   0xd759c

----------------
IN: 
0x000d75ea:  imul   $0x14,0x8(%esp),%eax
0x000d75ef:  mov    0xf5d40(%eax),%ecx
0x000d75f5:  mov    0xf5d44(%eax),%ebx
0x000d75fb:  mov    %ecx,%esi
0x000d75fd:  mov    %ebx,%edi
0x000d75ff:  add    0xf5d48(%eax),%esi
0x000d7605:  adc    0xf5d4c(%eax),%edi
0x000d760b:  mov    %esi,0x14(%esp)
0x000d760f:  mov    %edi,0x18(%esp)
0x000d7613:  mov    0x14(%esp),%edi
0x000d7617:  cmp    0xc(%esp),%edi
0x000d761b:  mov    0x18(%esp),%edi
0x000d761f:  sbb    0x10(%esp),%edi
0x000d7623:  jae    0xd762b

----------------
IN: 
0x000d7625:  incl   0x8(%esp)
0x000d7629:  jmp    0xd75e0

----------------
IN: 
0x000d75e0:  cmp    %edx,0x8(%esp)
0x000d75e4:  jge    0xd7732

----------------
IN: 
0x000e8321:  add    $0xc,%esp
0x000e8324:  push   $0xffffffff
0x000e8326:  push   $0x0
0x000e8328:  push   $0x50000
0x000e832d:  mov    $0xa0000,%eax
0x000e8332:  xor    %edx,%edx
0x000e8334:  call   0xd759c

----------------
IN: 
0x000d762b:  cmp    0xc(%esp),%ecx
0x000d762f:  mov    %ebx,%edi
0x000d7631:  sbb    0x10(%esp),%edi
0x000d7635:  jae    0xd76b2

----------------
IN: 
0x000d7637:  add    $0xf5d40,%eax
0x000d763c:  mov    %eax,%edi
0x000d763e:  mov    0x10(%eax),%eax
0x000d7641:  mov    %eax,%esi
0x000d7643:  cmp    %ebp,%eax
0x000d7645:  jne    0xd7664

----------------
IN: 
0x000d7664:  mov    0xc(%esp),%eax
0x000d7668:  mov    0x10(%esp),%edx
0x000d766c:  sub    %ecx,%eax
0x000d766e:  sbb    %ebx,%edx
0x000d7670:  mov    %eax,0x8(%edi)
0x000d7673:  mov    %edx,0xc(%edi)
0x000d7676:  incl   0x8(%esp)
0x000d767a:  mov    0x14(%esp),%eax
0x000d767e:  cmp    %eax,(%esp)
0x000d7681:  mov    0x4(%esp),%eax
0x000d7685:  sbb    0x18(%esp),%eax
0x000d7689:  jae    0xd76b2

----------------
IN: 
0x000d768b:  push   %esi
0x000d768c:  mov    0x18(%esp),%eax
0x000d7690:  mov    0x1c(%esp),%edx
0x000d7694:  sub    0x4(%esp),%eax
0x000d7698:  sbb    0x8(%esp),%edx
0x000d769c:  push   %edx
0x000d769d:  push   %eax
0x000d769e:  mov    0xc(%esp),%edx
0x000d76a2:  mov    0x10(%esp),%ecx
0x000d76a6:  mov    0x14(%esp),%eax
0x000d76aa:  call   0xd7512

----------------
IN: 
0x000d6e10:  mov    (%esi,%ecx,1),%dl
0x000d6e13:  mov    %dl,(%eax,%ecx,1)
0x000d6e16:  jmp    0xd6e0b

----------------
IN: 
0x000d76af:  add    $0xc,%esp
0x000d76b2:  imul   $0x14,0x8(%esp),%ebx
0x000d76b7:  mov    0x8(%esp),%eax
0x000d76bb:  cmp    0xf5d24,%eax
0x000d76c1:  jge    0xd7732

----------------
IN: 
0x000d76c3:  lea    0xf5d40(%ebx),%ecx
0x000d76c9:  mov    0xf5d40(%ebx),%eax
0x000d76cf:  mov    0xf5d44(%ebx),%edx
0x000d76d5:  cmp    %eax,(%esp)
0x000d76d8:  mov    0x4(%esp),%edi
0x000d76dc:  sbb    %edx,%edi
0x000d76de:  jb     0xd7732

----------------
IN: 
0x000d76e0:  lea    0x8(%ecx),%edi
0x000d76e3:  mov    %edi,0x14(%esp)
0x000d76e7:  add    0x8(%ecx),%eax
0x000d76ea:  adc    0xc(%ecx),%edx
0x000d76ed:  cmp    %eax,(%esp)
0x000d76f0:  mov    0x4(%esp),%edi
0x000d76f4:  sbb    %edx,%edi
0x000d76f6:  jb     0xd7703

----------------
IN: 
0x000d7703:  mov    (%esp),%ebx
0x000d7706:  mov    0x4(%esp),%esi
0x000d770a:  mov    %ebx,(%ecx)
0x000d770c:  mov    %esi,0x4(%ecx)
0x000d770f:  sub    %ebx,%eax
0x000d7711:  sbb    %esi,%edx
0x000d7713:  mov    0x14(%esp),%ebx
0x000d7717:  mov    %eax,(%ebx)
0x000d7719:  mov    %edx,0x4(%ebx)
0x000d771c:  cmp    0x10(%ecx),%ebp
0x000d771f:  jne    0xd7732

----------------
IN: 
0x000d7763:  add    $0x24,%esp
0x000d7766:  pop    %ebx
0x000d7767:  pop    %esi
0x000d7768:  pop    %edi
0x000d7769:  pop    %ebp
0x000d776a:  ret    

----------------
IN: 
0x000e8339:  push   $0x2
0x000e833b:  push   $0x0
0x000e833d:  push   $0x10000
0x000e8342:  mov    $0xf0000,%eax
0x000e8347:  xor    %edx,%edx
0x000e8349:  call   0xd759c

----------------
IN: 
0x000d76b2:  imul   $0x14,0x8(%esp),%ebx
0x000d76b7:  mov    0x8(%esp),%eax
0x000d76bb:  cmp    0xf5d24,%eax
0x000d76c1:  jge    0xd7732

----------------
IN: 
0x000e834e:  mov    0xf5d24,%eax
0x000e8353:  lea    -0x1(%eax),%esi
0x000e8356:  add    $0x18,%esp
0x000e8359:  xor    %ebx,%ebx
0x000e835b:  test   %esi,%esi
0x000e835d:  js     0xe83d3

----------------
IN: 
0x000e835f:  imul   $0x14,%esi,%ecx
0x000e8362:  mov    0xf5d40(%ecx),%eax
0x000e8368:  mov    0xf5d44(%ecx),%edx
0x000e836e:  mov    %eax,%edi
0x000e8370:  mov    %edx,%ebp
0x000e8372:  add    0xf5d48(%ecx),%edi
0x000e8378:  adc    0xf5d4c(%ecx),%ebp
0x000e837e:  mov    %edi,(%esp)
0x000e8381:  mov    %ebp,0x4(%esp)
0x000e8385:  mov    $0xfffff,%edi
0x000e838a:  cmp    (%esp),%edi
0x000e838d:  mov    $0x0,%edi
0x000e8392:  sbb    0x4(%esp),%edi
0x000e8396:  jae    0xe83d3

----------------
IN: 
0x000e8398:  cmpl   $0x1,0xf5d50(%ecx)
0x000e839f:  jne    0xe83d0

----------------
IN: 
0x000e83d0:  dec    %esi
0x000e83d1:  jmp    0xe835b

----------------
IN: 
0x000e835b:  test   %esi,%esi
0x000e835d:  js     0xe83d3

----------------
IN: 
0x000e83a1:  cmpl   $0x0,0x4(%esp)
0x000e83a6:  ja     0xe83d0

----------------
IN: 
0x000e83a8:  mov    (%esp),%ecx
0x000e83ab:  test   %ebx,%ebx
0x000e83ad:  jne    0xe83c4

----------------
IN: 
0x000e83af:  lea    -0x40000(%ecx),%edx
0x000e83b5:  and    $0xfffffff0,%edx
0x000e83b8:  cmp    %edx,%ecx
0x000e83ba:  jb     0xe83c4

----------------
IN: 
0x000e83bc:  cmp    %edx,%eax
0x000e83be:  ja     0xe83c4

----------------
IN: 
0x000e83c0:  mov    %edx,%ebx
0x000e83c2:  mov    %edx,%ecx
0x000e83c4:  mov    %eax,%edx
0x000e83c6:  mov    $0xe96d8,%eax
0x000e83cb:  call   0xd797e

----------------
IN: 
0x000d797e:  push   %ebx
0x000d797f:  sub    $0x2c,%esp
0x000d7982:  mov    %edx,%ebx
0x000d7984:  mov    %eax,%edx
0x000d7986:  mov    (%eax),%eax
0x000d7988:  test   %eax,%eax
0x000d798a:  jne    0xd79c3

----------------
IN: 
0x000d798c:  movl   $0xffffffff,0x28(%esp)
0x000d7994:  mov    %ebx,0x1c(%esp)
0x000d7998:  mov    %ecx,0x20(%esp)
0x000d799c:  movl   $0x0,0x24(%esp)
0x000d79a4:  lea    0x14(%esp),%eax
0x000d79a8:  call   0xd4ecf

----------------
IN: 
0x000d4ecf:  mov    (%edx),%ecx
0x000d4ed1:  mov    %edx,0x4(%eax)
0x000d4ed4:  mov    %ecx,(%eax)
0x000d4ed6:  test   %ecx,%ecx
0x000d4ed8:  je     0xd4edd

----------------
IN: 
0x000d4edd:  mov    %eax,(%edx)
0x000d4edf:  ret    

----------------
IN: 
0x000d79ad:  mov    %esp,%eax
0x000d79af:  call   0xd7788

----------------
IN: 
0x000d7788:  push   %edi
0x000d7789:  push   %esi
0x000d778a:  push   %ebx
0x000d778b:  mov    %eax,%ebx
0x000d778d:  push   %eax
0x000d778e:  mov    $0x10,%ecx
0x000d7793:  mov    $0x2c,%edx
0x000d7798:  mov    0xe96d8,%eax
0x000d779d:  call   0xd6ecd

----------------
IN: 
0x000d6ecd:  push   %ebp
0x000d6ece:  push   %edi
0x000d6ecf:  push   %esi
0x000d6ed0:  push   %ebx
0x000d6ed1:  mov    %ecx,%esi
0x000d6ed3:  mov    0x14(%esp),%ecx
0x000d6ed7:  neg    %esi
0x000d6ed9:  test   %eax,%eax
0x000d6edb:  je     0xd6f10

----------------
IN: 
0x000d6edd:  mov    0xc(%eax),%edi
0x000d6ee0:  mov    %edi,%ebx
0x000d6ee2:  sub    %edx,%ebx
0x000d6ee4:  and    %esi,%ebx
0x000d6ee6:  mov    0x10(%eax),%ebp
0x000d6ee9:  add    0x8(%eax),%ebp
0x000d6eec:  cmp    %ebx,%ebp
0x000d6eee:  ja     0xd6f0c

----------------
IN: 
0x000d6ef0:  cmp    %ebx,%edi
0x000d6ef2:  jb     0xd6f0c

----------------
IN: 
0x000d6ef4:  mov    %ebx,0x8(%ecx)
0x000d6ef7:  mov    %edi,0xc(%ecx)
0x000d6efa:  mov    %edx,0x10(%ecx)
0x000d6efd:  mov    %ebx,0xc(%eax)
0x000d6f00:  mov    0x4(%eax),%edx
0x000d6f03:  mov    %ecx,%eax
0x000d6f05:  call   0xd4ecf

----------------
IN: 
0x000d4eda:  mov    %eax,0x4(%ecx)
0x000d4edd:  mov    %eax,(%edx)
0x000d4edf:  ret    

----------------
IN: 
0x000d6f0a:  jmp    0xd6f12

----------------
IN: 
0x000d6f12:  mov    %ebx,%eax
0x000d6f14:  pop    %ebx
0x000d6f15:  pop    %esi
0x000d6f16:  pop    %edi
0x000d6f17:  pop    %ebp
0x000d6f18:  ret    

----------------
IN: 
0x000d77a2:  pop    %ecx
0x000d77a3:  test   %eax,%eax
0x000d77a5:  jne    0xd77d4

----------------
IN: 
0x000d77d4:  mov    %eax,%edx
0x000d77d6:  mov    $0xb,%ecx
0x000d77db:  mov    %eax,%edi
0x000d77dd:  mov    %ebx,%esi
0x000d77df:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000d77df:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000d77e1:  mov    (%ebx),%ecx
0x000d77e3:  mov    %ecx,(%eax)
0x000d77e5:  test   %ecx,%ecx
0x000d77e7:  je     0xd77ec

----------------
IN: 
0x000d77e9:  mov    %eax,0x4(%ecx)
0x000d77ec:  mov    0x4(%ebx),%ecx
0x000d77ef:  mov    %ecx,0x4(%eax)
0x000d77f2:  mov    %eax,(%ecx)
0x000d77f4:  lea    0x14(%eax),%esi
0x000d77f7:  mov    0x14(%ebx),%ecx
0x000d77fa:  mov    %ecx,0x14(%eax)
0x000d77fd:  test   %ecx,%ecx
0x000d77ff:  je     0xd7804

----------------
IN: 
0x000d7804:  mov    0x18(%ebx),%ecx
0x000d7807:  mov    %ecx,0x18(%eax)
0x000d780a:  mov    %esi,(%ecx)
0x000d780c:  mov    %edx,%eax
0x000d780e:  pop    %ebx
0x000d780f:  pop    %esi
0x000d7810:  pop    %edi
0x000d7811:  ret    

----------------
IN: 
0x000d79b4:  test   %eax,%eax
0x000d79b6:  jne    0xd79ca

----------------
IN: 
0x000d79ca:  add    $0x2c,%esp
0x000d79cd:  pop    %ebx
0x000d79ce:  ret    

----------------
IN: 
0x000e83d3:  mov    $0x90000,%ecx
0x000e83d8:  mov    $0x7000,%edx
0x000e83dd:  mov    $0xe96dc,%eax
0x000e83e2:  call   0xd797e

----------------
IN: 
0x000d6f0c:  mov    (%eax),%eax
0x000d6f0e:  jmp    0xd6ed9

----------------
IN: 
0x000d6ed9:  test   %eax,%eax
0x000d6edb:  je     0xd6f10

----------------
IN: 
0x000e83e7:  test   %ebx,%ebx
0x000e83e9:  je     0xe8412

----------------
IN: 
0x000e83eb:  lea    0x40000(%ebx),%ecx
0x000e83f1:  mov    %ebx,%edx
0x000e83f3:  mov    $0xe96e4,%eax
0x000e83f8:  call   0xd797e

----------------
IN: 
0x000e83fd:  mov    %ebx,%eax
0x000e83ff:  xor    %edx,%edx
0x000e8401:  push   $0x2
0x000e8403:  push   $0x0
0x000e8405:  push   $0x40000
0x000e840a:  call   0xd759c

----------------
IN: 
0x000e840f:  add    $0xc,%esp
0x000e8412:  mov    $0xe97c0,%ebp
0x000e8417:  sub    $0xd4ec0,%ebp
0x000e841d:  mov    %ebp,%edx
0x000e841f:  mov    $0x20,%eax
0x000e8424:  call   0xdecff

----------------
IN: 
0x000decff:  sub    $0x8,%esp
0x000ded02:  mov    %eax,%ecx
0x000ded04:  mov    %eax,0x4(%esp)
0x000ded08:  mov    %edx,(%esp)
0x000ded0b:  mov    $0xe96d8,%eax
0x000ded10:  call   0xd7812

----------------
IN: 
0x000d7812:  push   %esi
0x000d7813:  push   %ebx
0x000d7814:  sub    $0x2c,%esp
0x000d7817:  mov    %edx,%ebx
0x000d7819:  test   %edx,%edx
0x000d781b:  je     0xd784c

----------------
IN: 
0x000d781d:  movl   $0xffffffff,0x28(%esp)
0x000d7825:  lea    0x14(%esp),%esi
0x000d7829:  push   %esi
0x000d782a:  mov    (%eax),%eax
0x000d782c:  call   0xd6ecd

----------------
IN: 
0x000d7831:  mov    %eax,%ebx
0x000d7833:  pop    %eax
0x000d7834:  test   %ebx,%ebx
0x000d7836:  je     0xd784c

----------------
IN: 
0x000d7838:  mov    %esp,%eax
0x000d783a:  call   0xd7788

----------------
IN: 
0x000d7801:  mov    %esi,0x4(%ecx)
0x000d7804:  mov    0x18(%ebx),%ecx
0x000d7807:  mov    %ecx,0x18(%eax)
0x000d780a:  mov    %esi,(%ecx)
0x000d780c:  mov    %edx,%eax
0x000d780e:  pop    %ebx
0x000d780f:  pop    %esi
0x000d7810:  pop    %edi
0x000d7811:  ret    

----------------
IN: 
0x000d783f:  test   %eax,%eax
0x000d7841:  jne    0xd784c

----------------
IN: 
0x000d784c:  mov    %ebx,%eax
0x000d784e:  add    $0x2c,%esp
0x000d7851:  pop    %ebx
0x000d7852:  pop    %esi
0x000d7853:  ret    

----------------
IN: 
0x000ded15:  test   %eax,%eax
0x000ded17:  mov    (%esp),%edx
0x000ded1a:  mov    0x4(%esp),%ecx
0x000ded1e:  jne    0xded2d

----------------
IN: 
0x000ded2d:  add    $0x8,%esp
0x000ded30:  ret    

----------------
IN: 
0x000e8429:  mov    %eax,%ebx
0x000e842b:  test   %eax,%eax
0x000e842d:  jne    0xe8439

----------------
IN: 
0x000e8439:  push   %ebp
0x000e843a:  push   %eax
0x000e843b:  push   $0xd4ec0
0x000e8440:  push   $0xf4920
0x000e8445:  call   0xec4d8

----------------
IN: 
0x000ebd78:  cmp    $0x64,%al
0x000ebd7a:  je     0xebde8

----------------
IN: 
0x000ebdce:  cmp    $0x70,%al
0x000ebdd0:  je     0xebe2a

----------------
IN: 
0x000ebe2a:  lea    0x4(%ebp),%edi
0x000ebe2d:  mov    0x0(%ebp),%ebp
0x000ebe30:  cmpb   $0x50,0x1(%esi)
0x000ebe34:  jne    0xebe8e

----------------
IN: 
0x000ebe8e:  mov    $0x30,%edx
0x000ebe93:  mov    %ebx,%eax
0x000ebe95:  call   0xe9803

----------------
IN: 
0x000ebe9a:  mov    $0x78,%edx
0x000ebe9f:  mov    %ebx,%eax
0x000ebea1:  call   0xe9803

----------------
IN: 
0x000ebea6:  push   $0x0
0x000ebea8:  mov    $0x8,%ecx
0x000ebead:  mov    %ebp,%edx
0x000ebeaf:  mov    %ebx,%eax
0x000ebeb1:  call   0xe9872

----------------
IN: 
0x000e988a:  shr    $0x1c,%edx
0x000e988d:  mov    %edi,%ecx
0x000e988f:  call   0xe9856

----------------
IN: 
0x000e985f:  lea    0x57(%edx),%ebx
0x000e9862:  test   %ecx,%ecx
0x000e9864:  je     0xe9869

----------------
IN: 
0x000ebeb6:  pop    %ebp
0x000ebeb7:  jmp    0xebf70

----------------
IN: 
0x000ebf70:  mov    %edi,%ebp
0x000ebf72:  lea    0x1(%esi),%edi
0x000ebf75:  jmp    0xebd1e

----------------
IN: 
0x000ebde8:  mov    0x0(%ebp),%edi
0x000ebdeb:  test   %dl,%dl
0x000ebded:  jne    0xebdf4

----------------
IN: 
0x000ebdef:  add    $0x4,%ebp
0x000ebdf2:  jmp    0xebdf7

----------------
IN: 
0x000ebdf7:  test   %edi,%edi
0x000ebdf9:  jns    0xebe09

----------------
IN: 
0x000ebe09:  mov    %edi,%edx
0x000ebe0b:  jmp    0xebe1e

----------------
IN: 
0x000ebe1e:  mov    %ebx,%eax
0x000ebe20:  call   0xe9808

----------------
IN: 
0x000e9808:  push   %edi
0x000e9809:  push   %esi
0x000e980a:  push   %ebx
0x000e980b:  sub    $0xc,%esp
0x000e980e:  mov    %eax,%esi
0x000e9810:  mov    %edx,%ecx
0x000e9812:  movb   $0x0,0xb(%esp)
0x000e9817:  lea    0xa(%esp),%ebx
0x000e981b:  mov    $0xa,%edi
0x000e9820:  mov    %ecx,%eax
0x000e9822:  xor    %edx,%edx
0x000e9824:  div    %edi
0x000e9826:  add    $0x30,%edx
0x000e9829:  mov    %dl,(%ebx)
0x000e982b:  cmp    $0x9,%ecx
0x000e982e:  jbe    0xe9835

----------------
IN: 
0x000e9830:  dec    %ebx
0x000e9831:  mov    %eax,%ecx
0x000e9833:  jmp    0xe9820

----------------
IN: 
0x000e9820:  mov    %ecx,%eax
0x000e9822:  xor    %edx,%edx
0x000e9824:  div    %edi
0x000e9826:  add    $0x30,%edx
0x000e9829:  mov    %dl,(%ebx)
0x000e982b:  cmp    $0x9,%ecx
0x000e982e:  jbe    0xe9835

----------------
IN: 
0x000e9835:  test   %ebx,%ebx
0x000e9837:  jne    0xe983e

----------------
IN: 
0x000e983e:  movsbl (%ebx),%edx
0x000e9841:  test   %dl,%dl
0x000e9843:  je     0xe984f

----------------
IN: 
0x000e9845:  mov    %esi,%eax
0x000e9847:  call   0xe9803

----------------
IN: 
0x000e984c:  inc    %ebx
0x000e984d:  jmp    0xe983e

----------------
IN: 
0x000e984f:  add    $0xc,%esp
0x000e9852:  pop    %ebx
0x000e9853:  pop    %esi
0x000e9854:  pop    %edi
0x000e9855:  ret    

----------------
IN: 
0x000ebe25:  jmp    0xebf72

----------------
IN: 
0x000e844a:  mov    $0xd4ec0,%esi
0x000e844f:  mov    %ebx,%edi
0x000e8451:  mov    %ebp,%ecx
0x000e8453:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000e8453:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000e8455:  mov    %ebx,%eax
0x000e8457:  sub    $0xd4ec0,%eax
0x000e845c:  add    $0x10,%esp
0x000e845f:  mov    $0xd2d80,%edx
0x000e8464:  cmp    $0xd36c4,%edx
0x000e846a:  jae    0xe8477

----------------
IN: 
0x000e846c:  mov    (%edx),%ecx
0x000e846e:  add    %ebx,%ecx
0x000e8470:  add    %eax,(%ecx)
0x000e8472:  add    $0x4,%edx
0x000e8475:  jmp    0xe8464

----------------
IN: 
0x000e8464:  cmp    $0xd36c4,%edx
0x000e846a:  jae    0xe8477

----------------
IN: 
0x000e8477:  mov    $0xd4ec0,%ecx
0x000e847c:  sub    %ebx,%ecx
0x000e847e:  mov    $0xd36c4,%edx
0x000e8483:  cmp    $0xd45f4,%edx
0x000e8489:  jae    0xe8496

----------------
IN: 
0x000e848b:  mov    (%edx),%esi
0x000e848d:  add    %ebx,%esi
0x000e848f:  add    %ecx,(%esi)
0x000e8491:  add    $0x4,%edx
0x000e8494:  jmp    0xe8483

----------------
IN: 
0x000e8483:  cmp    $0xd45f4,%edx
0x000e8489:  jae    0xe8496

----------------
IN: 
0x000e8496:  mov    $0xd45f4,%edx
0x000e849b:  cmp    $0xd4600,%edx
0x000e84a1:  jae    0xe84b0

----------------
IN: 
0x000e84a3:  mov    (%edx),%ecx
0x000e84a5:  add    %eax,0xd2d80(%ecx)
0x000e84ab:  add    $0x4,%edx
0x000e84ae:  jmp    0xe849b

----------------
IN: 
0x000e849b:  cmp    $0xd4600,%edx
0x000e84a1:  jae    0xe84b0

----------------
IN: 
0x000e84b0:  mov    $0xe5312,%ecx
0x000e84b5:  cmp    $0xe97c0,%ecx
0x000e84bb:  jae    0xe84c8

----------------
IN: 
0x000e84bd:  lea    (%eax,%ecx,1),%edx
0x000e84c0:  cmp    $0xd4ec0,%ecx
0x000e84c6:  jae    0xe84cd

----------------
IN: 
0x000e84cd:  xor    %eax,%eax
0x000e84cf:  call   *%edx

----------------
IN: 
0x07fbbab2:  push   %ebp
0x07fbbab3:  push   %edi
0x07fbbab4:  push   %esi
0x07fbbab5:  push   %ebx
0x07fbbab6:  sub    $0x124,%esp
0x07fbbabc:  call   0x7fb2f55

----------------
IN: 
0x07fb2f55:  push   %ebp
0x07fb2f56:  push   %edi
0x07fb2f57:  push   %esi
0x07fb2f58:  push   %ebx
0x07fb2f59:  sub    $0xa8,%esp
0x07fb2f5f:  xor    %eax,%eax
0x07fb2f61:  mov    0x7fbfe64(,%eax,4),%ecx
0x07fb2f68:  mov    (%ecx),%edx
0x07fb2f6a:  test   %edx,%edx
0x07fb2f6c:  je     0x7fb2f71

----------------
IN: 
0x07fb2f6e:  mov    %ecx,0x4(%edx)
0x07fb2f71:  inc    %eax
0x07fb2f72:  cmp    $0x5,%eax
0x07fb2f75:  jne    0x7fb2f61

----------------
IN: 
0x07fb2f61:  mov    0x7fbfe64(,%eax,4),%ecx
0x07fb2f68:  mov    (%ecx),%edx
0x07fb2f6a:  test   %edx,%edx
0x07fb2f6c:  je     0x7fb2f71

----------------
IN: 
0x07fb2f71:  inc    %eax
0x07fb2f72:  cmp    $0x5,%eax
0x07fb2f75:  jne    0x7fb2f61

----------------
IN: 
0x07fb2f77:  mov    $0xd4ec0,%ecx
0x07fb2f7c:  sub    $0xd4600,%ecx
0x07fb2f82:  mov    $0xd4600,%edx
0x07fb2f87:  mov    $0xe8f00,%eax
0x07fb2f8c:  call   0x7fad59d

----------------
IN: 
0x07fad59d:  push   %edi
0x07fad59e:  push   %esi
0x07fad59f:  mov    %edx,%esi
0x07fad5a1:  cmp    %eax,%edx
0x07fad5a3:  jb     0x7fad5ab

----------------
IN: 
0x07fad5ab:  sub    $0x1,%ecx
0x07fad5ae:  jb     0x7fad5b8

----------------
IN: 
0x07fad5b0:  mov    (%esi,%ecx,1),%dl
0x07fad5b3:  mov    %dl,(%eax,%ecx,1)
0x07fad5b6:  jmp    0x7fad5ab

----------------
IN: 
0x07fad5b8:  pop    %esi
0x07fad5b9:  pop    %edi
0x07fad5ba:  ret    

----------------
IN: 
0x07fb2f91:  mov    %eax,%ecx
0x07fb2f93:  mov    $0xd9810,%edx
0x07fb2f98:  mov    $0x7fbfe88,%eax
0x07fb2f9d:  call   0x7fae11e

----------------
IN: 
0x07fae11e:  push   %ebx
0x07fae11f:  sub    $0x2c,%esp
0x07fae122:  mov    %edx,%ebx
0x07fae124:  mov    %eax,%edx
0x07fae126:  mov    (%eax),%eax
0x07fae128:  test   %eax,%eax
0x07fae12a:  jne    0x7fae163

----------------
IN: 
0x07fae12c:  movl   $0xffffffff,0x28(%esp)
0x07fae134:  mov    %ebx,0x1c(%esp)
0x07fae138:  mov    %ecx,0x20(%esp)
0x07fae13c:  movl   $0x0,0x24(%esp)
0x07fae144:  lea    0x14(%esp),%eax
0x07fae148:  call   0x7fab66f

----------------
IN: 
0x07fab66f:  mov    (%edx),%ecx
0x07fab671:  mov    %edx,0x4(%eax)
0x07fab674:  mov    %ecx,(%eax)
0x07fab676:  test   %ecx,%ecx
0x07fab678:  je     0x7fab67d

----------------
IN: 
0x07fab67d:  mov    %eax,(%edx)
0x07fab67f:  ret    

----------------
IN: 
0x07fae14d:  mov    %esp,%eax
0x07fae14f:  call   0x7fadf28

----------------
IN: 
0x07fadf28:  push   %edi
0x07fadf29:  push   %esi
0x07fadf2a:  push   %ebx
0x07fadf2b:  mov    %eax,%ebx
0x07fadf2d:  push   %eax
0x07fadf2e:  mov    $0x10,%ecx
0x07fadf33:  mov    $0x2c,%edx
0x07fadf38:  mov    0x7fbfe78,%eax
0x07fadf3d:  call   0x7fad66d

----------------
IN: 
0x07fad66d:  push   %ebp
0x07fad66e:  push   %edi
0x07fad66f:  push   %esi
0x07fad670:  push   %ebx
0x07fad671:  mov    %ecx,%esi
0x07fad673:  mov    0x14(%esp),%ecx
0x07fad677:  neg    %esi
0x07fad679:  test   %eax,%eax
0x07fad67b:  je     0x7fad6b0

----------------
IN: 
0x07fad67d:  mov    0xc(%eax),%edi
0x07fad680:  mov    %edi,%ebx
0x07fad682:  sub    %edx,%ebx
0x07fad684:  and    %esi,%ebx
0x07fad686:  mov    0x10(%eax),%ebp
0x07fad689:  add    0x8(%eax),%ebp
0x07fad68c:  cmp    %ebx,%ebp
0x07fad68e:  ja     0x7fad6ac

----------------
IN: 
0x07fad6ac:  mov    (%eax),%eax
0x07fad6ae:  jmp    0x7fad679

----------------
IN: 
0x07fad679:  test   %eax,%eax
0x07fad67b:  je     0x7fad6b0

----------------
IN: 
0x07fad690:  cmp    %ebx,%edi
0x07fad692:  jb     0x7fad6ac

----------------
IN: 
0x07fad694:  mov    %ebx,0x8(%ecx)
0x07fad697:  mov    %edi,0xc(%ecx)
0x07fad69a:  mov    %edx,0x10(%ecx)
0x07fad69d:  mov    %ebx,0xc(%eax)
0x07fad6a0:  mov    0x4(%eax),%edx
0x07fad6a3:  mov    %ecx,%eax
0x07fad6a5:  call   0x7fab66f

----------------
IN: 
0x07fab67a:  mov    %eax,0x4(%ecx)
0x07fab67d:  mov    %eax,(%edx)
0x07fab67f:  ret    

----------------
IN: 
0x07fad6aa:  jmp    0x7fad6b2

----------------
IN: 
0x07fad6b2:  mov    %ebx,%eax
0x07fad6b4:  pop    %ebx
0x07fad6b5:  pop    %esi
0x07fad6b6:  pop    %edi
0x07fad6b7:  pop    %ebp
0x07fad6b8:  ret    

----------------
IN: 
0x07fadf42:  pop    %ecx
0x07fadf43:  test   %eax,%eax
0x07fadf45:  jne    0x7fadf74

----------------
IN: 
0x07fadf74:  mov    %eax,%edx
0x07fadf76:  mov    $0xb,%ecx
0x07fadf7b:  mov    %eax,%edi
0x07fadf7d:  mov    %ebx,%esi
0x07fadf7f:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fadf7f:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fadf81:  mov    (%ebx),%ecx
0x07fadf83:  mov    %ecx,(%eax)
0x07fadf85:  test   %ecx,%ecx
0x07fadf87:  je     0x7fadf8c

----------------
IN: 
0x07fadf89:  mov    %eax,0x4(%ecx)
0x07fadf8c:  mov    0x4(%ebx),%ecx
0x07fadf8f:  mov    %ecx,0x4(%eax)
0x07fadf92:  mov    %eax,(%ecx)
0x07fadf94:  lea    0x14(%eax),%esi
0x07fadf97:  mov    0x14(%ebx),%ecx
0x07fadf9a:  mov    %ecx,0x14(%eax)
0x07fadf9d:  test   %ecx,%ecx
0x07fadf9f:  je     0x7fadfa4

----------------
IN: 
0x07fadfa4:  mov    0x18(%ebx),%ecx
0x07fadfa7:  mov    %ecx,0x18(%eax)
0x07fadfaa:  mov    %esi,(%ecx)
0x07fadfac:  mov    %edx,%eax
0x07fadfae:  pop    %ebx
0x07fadfaf:  pop    %esi
0x07fadfb0:  pop    %edi
0x07fadfb1:  ret    

----------------
IN: 
0x07fae154:  test   %eax,%eax
0x07fae156:  jne    0x7fae16a

----------------
IN: 
0x07fae16a:  add    $0x2c,%esp
0x07fae16d:  pop    %ebx
0x07fae16e:  ret    

----------------
IN: 
0x07fb2fa2:  mov    0x7fbfe88,%eax
0x07fb2fa7:  xor    %edx,%edx
0x07fb2fa9:  test   %eax,%eax
0x07fb2fab:  je     0x7fb2fb3

----------------
IN: 
0x07fb2fad:  mov    %eax,%edx
0x07fb2faf:  mov    (%eax),%eax
0x07fb2fb1:  jmp    0x7fb2fa9

----------------
IN: 
0x07fb2fa9:  test   %eax,%eax
0x07fb2fab:  je     0x7fb2fb3

----------------
IN: 
0x07fb2fb3:  mov    %edx,0xf54d4
0x07fb2fb9:  mov    $0xf5d00,%ecx
0x07fb2fbe:  sub    $0xf5500,%ecx
0x07fb2fc4:  xor    %edx,%edx
0x07fb2fc6:  mov    $0xf5500,%eax
0x07fb2fcb:  call   0xeab7b

----------------
IN: 
0x000eab7b:  test   %ecx,%ecx
0x000eab7d:  je     0xeab85

----------------
IN: 
0x000eab7f:  dec    %ecx
0x000eab80:  mov    %dl,(%eax,%ecx,1)
0x000eab83:  jmp    0xeab7b

----------------
IN: 
0x000eab85:  ret    

----------------
IN: 
0x07fb2fd0:  mov    $0xf5d00,%ecx
0x07fb2fd5:  mov    %eax,%edx
0x07fb2fd7:  mov    $0x7fbfe80,%eax
0x07fb2fdc:  call   0x7fae11e

----------------
IN: 
0x07fb2fe1:  call   0x7faba05

----------------
IN: 
0x07faba05:  push   %esi
0x07faba06:  push   %ebx
0x07faba07:  mov    0xf5d24,%ecx
0x07faba0d:  lea    -0x1(%ecx),%ebx
0x07faba10:  imul   $0x14,%ecx,%ecx
0x07faba13:  add    $0xf5d40,%ecx
0x07faba19:  test   %ebx,%ebx
0x07faba1b:  js     0x7faba3d

----------------
IN: 
0x07faba1d:  mov    -0xc(%ecx),%eax
0x07faba20:  mov    -0x8(%ecx),%edx
0x07faba23:  add    -0x14(%ecx),%eax
0x07faba26:  adc    -0x10(%ecx),%edx
0x07faba29:  cmp    $0x0,%edx
0x07faba2c:  ja     0x7faba37

----------------
IN: 
0x07faba37:  dec    %ebx
0x07faba38:  sub    $0x14,%ecx
0x07faba3b:  jmp    0x7faba19

----------------
IN: 
0x07faba19:  test   %ebx,%ebx
0x07faba1b:  js     0x7faba3d

----------------
IN: 
0x07faba2e:  mov    -0x4(%ecx),%esi
0x07faba31:  and    $0xfffffffd,%esi
0x07faba34:  dec    %esi
0x07faba35:  je     0x7faba3f

----------------
IN: 
0x07faba3f:  cmp    $0x100000,%eax
0x07faba44:  jae    0x7faba4b

----------------
IN: 
0x07faba4b:  mov    %eax,0xf5d20
0x07faba50:  pop    %ebx
0x07faba51:  pop    %esi
0x07faba52:  ret    

----------------
IN: 
0x07fb2fe6:  call   0x7fb1ae5

----------------
IN: 
0x07fb1ae5:  mov    0xf53e4,%ecx
0x07fb1aeb:  test   %ecx,%ecx
0x07fb1aed:  jne    0x7fb1b61

----------------
IN: 
0x07fb1b61:  mov    $0x1,%eax
0x07fb1b66:  ret    

----------------
IN: 
0x07fb2feb:  test   %eax,%eax
0x07fb2fed:  jne    0x7fb2ffb

----------------
IN: 
0x07fb2ffb:  push   $0x2
0x07fb2ffd:  xor    %ecx,%ecx
0x07fb2fff:  mov    $0xe,%edx
0x07fb3004:  mov    $0xf1698,%eax
0x07fb3009:  call   0x7fae2ff

----------------
IN: 
0x07fae2ff:  push   %ebp
0x07fae300:  push   %edi
0x07fae301:  push   %esi
0x07fae302:  push   %ebx
0x07fae303:  push   %ebx
0x07fae304:  mov    %eax,(%esp)
0x07fae307:  mov    %edx,%edi
0x07fae309:  mov    %ecx,%esi
0x07fae30b:  mov    0x18(%esp),%ebp
0x07fae30f:  mov    $0x94,%eax
0x07fae314:  call   0x7fae09f

----------------
IN: 
0x07fae09f:  push   %edx
0x07fae0a0:  mov    %eax,(%esp)
0x07fae0a3:  call   0x7fae08e

----------------
IN: 
0x07fae08e:  mov    %eax,%edx
0x07fae090:  mov    $0x10,%ecx
0x07fae095:  mov    $0x7fbfe78,%eax
0x07fae09a:  jmp    0x7fadfb2

----------------
IN: 
0x07fadfb2:  push   %esi
0x07fadfb3:  push   %ebx
0x07fadfb4:  sub    $0x2c,%esp
0x07fadfb7:  mov    %edx,%ebx
0x07fadfb9:  test   %edx,%edx
0x07fadfbb:  je     0x7fadfec

----------------
IN: 
0x07fadfbd:  movl   $0xffffffff,0x28(%esp)
0x07fadfc5:  lea    0x14(%esp),%esi
0x07fadfc9:  push   %esi
0x07fadfca:  mov    (%eax),%eax
0x07fadfcc:  call   0x7fad66d

----------------
IN: 
0x07fadfd1:  mov    %eax,%ebx
0x07fadfd3:  pop    %eax
0x07fadfd4:  test   %ebx,%ebx
0x07fadfd6:  je     0x7fadfec

----------------
IN: 
0x07fadfd8:  mov    %esp,%eax
0x07fadfda:  call   0x7fadf28

----------------
IN: 
0x07fadfa1:  mov    %esi,0x4(%ecx)
0x07fadfa4:  mov    0x18(%ebx),%ecx
0x07fadfa7:  mov    %ecx,0x18(%eax)
0x07fadfaa:  mov    %esi,(%ecx)
0x07fadfac:  mov    %edx,%eax
0x07fadfae:  pop    %ebx
0x07fadfaf:  pop    %esi
0x07fadfb0:  pop    %edi
0x07fadfb1:  ret    

----------------
IN: 
0x07fadfdf:  test   %eax,%eax
0x07fadfe1:  jne    0x7fadfec

----------------
IN: 
0x07fadfec:  mov    %ebx,%eax
0x07fadfee:  add    $0x2c,%esp
0x07fadff1:  pop    %ebx
0x07fadff2:  pop    %esi
0x07fadff3:  ret    

----------------
IN: 
0x07fae0a8:  test   %eax,%eax
0x07fae0aa:  mov    (%esp),%edx
0x07fae0ad:  jne    0x7fae0c1

----------------
IN: 
0x07fae0c1:  pop    %edx
0x07fae0c2:  ret    

----------------
IN: 
0x07fae319:  test   %eax,%eax
0x07fae31b:  jne    0x7fae331

----------------
IN: 
0x07fae331:  mov    %eax,%ebx
0x07fae333:  mov    $0x94,%ecx
0x07fae338:  xor    %edx,%edx
0x07fae33a:  call   0xeab7b

----------------
IN: 
0x07fae33f:  lea    0x4(%eax),%eax
0x07fae342:  mov    $0x80,%ecx
0x07fae347:  mov    (%esp),%edx
0x07fae34a:  call   0x7fab6af

----------------
IN: 
0x07fab6af:  push   %esi
0x07fab6b0:  push   %ebx
0x07fab6b1:  lea    0x1(%edx),%ebx
0x07fab6b4:  lea    (%edx,%ecx,1),%esi
0x07fab6b7:  mov    %eax,%ecx
0x07fab6b9:  cmp    %esi,%ebx
0x07fab6bb:  je     0x7fab6cb

----------------
IN: 
0x07fab6bd:  inc    %ebx
0x07fab6be:  mov    -0x2(%ebx),%dl
0x07fab6c1:  test   %dl,%dl
0x07fab6c3:  je     0x7fab6cb

----------------
IN: 
0x07fab6c5:  inc    %ecx
0x07fab6c6:  mov    %dl,-0x1(%ecx)
0x07fab6c9:  jmp    0x7fab6b9

----------------
IN: 
0x07fab6b9:  cmp    %esi,%ebx
0x07fab6bb:  je     0x7fab6cb

----------------
IN: 
0x07fab6cb:  movb   $0x0,(%ecx)
0x07fab6ce:  pop    %ebx
0x07fab6cf:  pop    %esi
0x07fab6d0:  ret    

----------------
IN: 
0x07fae34f:  mov    %ebp,0x84(%ebx)
0x07fae355:  mov    %edi,0x8c(%ebx)
0x07fae35b:  mov    %esi,0x90(%ebx)
0x07fae361:  movl   $0x7fad926,0x88(%ebx)
0x07fae36b:  mov    0x7fbfe5c,%eax
0x07fae370:  mov    %eax,(%ebx)
0x07fae372:  mov    %ebx,0x7fbfe5c
0x07fae378:  pop    %eax
0x07fae379:  pop    %ebx
0x07fae37a:  pop    %esi
0x07fae37b:  pop    %edi
0x07fae37c:  pop    %ebp
0x07fae37d:  ret    

----------------
IN: 
0x07fb300e:  push   $0x1
0x07fb3010:  xor    %ecx,%ecx
0x07fb3012:  mov    $0x8002,%edx
0x07fb3017:  mov    $0xf16ab,%eax
0x07fb301c:  call   0x7fae2ff

----------------
IN: 
0x07fb3021:  push   $0x2
0x07fb3023:  xor    %ecx,%ecx
0x07fb3025:  mov    $0xf,%edx
0x07fb302a:  mov    $0xf16bd,%eax
0x07fb302f:  call   0x7fae2ff

----------------
IN: 
0x07fb3034:  mov    $0x8,%ecx
0x07fb3039:  mov    $0xd,%edx
0x07fb303e:  lea    0x2c(%esp),%eax
0x07fb3042:  call   0xec37e

----------------
IN: 
0x07fb3047:  xor    %edx,%edx
0x07fb3049:  xor    %ecx,%ecx
0x07fb304b:  mov    $0xf16bd,%eax
0x07fb3050:  call   0x7fad81f

----------------
IN: 
0x07fad81f:  push   %ebp
0x07fad820:  mov    %esp,%ebp
0x07fad822:  push   %edi
0x07fad823:  push   %esi
0x07fad824:  sub    $0x8,%esp
0x07fad827:  mov    %edx,%esi
0x07fad829:  mov    %ecx,%edi
0x07fad82b:  call   0x7fad7ee

----------------
IN: 
0x07fad7ee:  push   %edi
0x07fad7ef:  push   %esi
0x07fad7f0:  push   %ebx
0x07fad7f1:  mov    %eax,%esi
0x07fad7f3:  call   0xe9960

----------------
IN: 
0x000e9960:  mov    %eax,%ecx
0x000e9962:  mov    %eax,%edx
0x000e9964:  cmpb   $0x0,(%edx)
0x000e9967:  je     0xe996c

----------------
IN: 
0x000e9969:  inc    %edx
0x000e996a:  jmp    0xe9964

----------------
IN: 
0x000e9964:  cmpb   $0x0,(%edx)
0x000e9967:  je     0xe996c

----------------
IN: 
0x000e996c:  mov    %edx,%eax
0x000e996e:  sub    %ecx,%eax
0x000e9970:  ret    

----------------
IN: 
0x07fad7f8:  lea    0x1(%eax),%edi
0x07fad7fb:  mov    0x7fbfe5c,%ebx
0x07fad801:  test   %ebx,%ebx
0x07fad803:  je     0x7fad819

----------------
IN: 
0x07fad805:  lea    0x4(%ebx),%edx
0x07fad808:  mov    %edi,%ecx
0x07fad80a:  mov    %esi,%eax
0x07fad80c:  call   0x7fab68e

----------------
IN: 
0x07fab68e:  add    %eax,%ecx
0x07fab690:  cmp    %ecx,%eax
0x07fab692:  jne    0x7fab697

----------------
IN: 
0x07fab697:  push   %ebx
0x07fab698:  mov    (%edx),%bl
0x07fab69a:  cmp    %bl,(%eax)
0x07fab69c:  je     0x7fab6a5

----------------
IN: 
0x07fab6a5:  inc    %eax
0x07fab6a6:  inc    %edx
0x07fab6a7:  cmp    %ecx,%eax
0x07fab6a9:  jne    0x7fab698

----------------
IN: 
0x07fab698:  mov    (%edx),%bl
0x07fab69a:  cmp    %bl,(%eax)
0x07fab69c:  je     0x7fab6a5

----------------
IN: 
0x07fab6ab:  xor    %eax,%eax
0x07fab6ad:  pop    %ebx
0x07fab6ae:  ret    

----------------
IN: 
0x07fad811:  test   %eax,%eax
0x07fad813:  je     0x7fad819

----------------
IN: 
0x07fad819:  mov    %ebx,%eax
0x07fad81b:  pop    %ebx
0x07fad81c:  pop    %esi
0x07fad81d:  pop    %edi
0x07fad81e:  ret    

----------------
IN: 
0x07fad830:  test   %eax,%eax
0x07fad832:  jne    0x7fad83a

----------------
IN: 
0x07fad83a:  mov    0x84(%eax),%edx
0x07fad840:  lea    -0x1(%edx),%ecx
0x07fad843:  cmp    $0x7,%ecx
0x07fad846:  ja     0x7fad834

----------------
IN: 
0x07fad848:  test   %edx,%ecx
0x07fad84a:  jne    0x7fad834

----------------
IN: 
0x07fad84c:  movl   $0x0,(%esp)
0x07fad853:  movl   $0x0,0x4(%esp)
0x07fad85b:  mov    $0x8,%ecx
0x07fad860:  mov    %esp,%edx
0x07fad862:  call   *0x88(%eax)

----------------
IN: 
0x07fad926:  push   %esi
0x07fad927:  push   %ebx
0x07fad928:  mov    %edx,%esi
0x07fad92a:  mov    0x84(%eax),%edx
0x07fad930:  cmp    %ecx,%edx
0x07fad932:  ja     0x7fad97a

----------------
IN: 
0x07fad934:  mov    %eax,%ebx
0x07fad936:  mov    0x90(%eax),%ecx
0x07fad93c:  mov    0x8c(%eax),%eax
0x07fad942:  test   %ecx,%ecx
0x07fad944:  jne    0x7fad953

----------------
IN: 
0x07fad946:  mov    %edx,%ecx
0x07fad948:  mov    %eax,%edx
0x07fad94a:  mov    %esi,%eax
0x07fad94c:  call   0xec37e

----------------
IN: 
0x07fad951:  jmp    0x7fad972

----------------
IN: 
0x07fad972:  mov    0x84(%ebx),%eax
0x07fad978:  jmp    0x7fad97d

----------------
IN: 
0x07fad97d:  pop    %ebx
0x07fad97e:  pop    %esi
0x07fad97f:  ret    

----------------
IN: 
0x07fad868:  test   %eax,%eax
0x07fad86a:  js     0x7fad834

----------------
IN: 
0x07fad86c:  mov    (%esp),%eax
0x07fad86f:  mov    0x4(%esp),%edx
0x07fad873:  pop    %ecx
0x07fad874:  pop    %esi
0x07fad875:  pop    %esi
0x07fad876:  pop    %edi
0x07fad877:  pop    %ebp
0x07fad878:  ret    

----------------
IN: 
0x07fb3055:  lea    0x0(,%eax,8),%ebx
0x07fb305c:  push   %ebx
0x07fb305d:  mov    $0x8,%ecx
0x07fb3062:  mov    $0xd,%edx
0x07fb3067:  mov    $0xf16ca,%eax
0x07fb306c:  call   0x7fae2ff

----------------
IN: 
0x07fb3071:  lea    0x8(%ebx),%ecx
0x07fb3074:  mov    0x30(%esp),%eax
0x07fb3078:  shl    $0x3,%eax
0x07fb307b:  push   %eax
0x07fb307c:  mov    $0xd,%edx
0x07fb3081:  mov    $0xf16db,%eax
0x07fb3086:  call   0x7fae2ff

----------------
IN: 
0x07fb308b:  mov    $0x2,%ecx
0x07fb3090:  mov    $0x8000,%edx
0x07fb3095:  lea    0x2a(%esp),%eax
0x07fb3099:  call   0xec37e

----------------
IN: 
0x07fb309e:  add    $0x14,%esp
0x07fb30a1:  mov    $0x2,%esi
0x07fb30a6:  xor    %ebx,%ebx
0x07fb30a8:  movzwl 0x16(%esp),%eax
0x07fb30ad:  cmp    %eax,%ebx
0x07fb30af:  jge    0x7fb3102

----------------
IN: 
0x07fb3102:  mov    $0x2,%ecx
0x07fb3107:  mov    $0x8001,%edx
0x07fb310c:  lea    0x16(%esp),%eax
0x07fb3110:  call   0xec37e

----------------
IN: 
0x07fb3115:  mov    $0x2,%esi
0x07fb311a:  xor    %ebx,%ebx
0x07fb311c:  movzwl 0x16(%esp),%eax
0x07fb3121:  cmp    %eax,%ebx
0x07fb3123:  jge    0x7fb31b6

----------------
IN: 
0x07fb31b6:  mov    $0x4,%ecx
0x07fb31bb:  mov    $0x19,%edx
0x07fb31c0:  lea    0x18(%esp),%eax
0x07fb31c4:  call   0xec37e

----------------
IN: 
0x07fb31c9:  mov    0x18(%esp),%eax
0x07fb31cd:  call   0xe9c60

----------------
IN: 
0x07fb31d2:  mov    %eax,0x18(%esp)
0x07fb31d6:  xor    %ebx,%ebx
0x07fb31d8:  cmp    0x18(%esp),%ebx
0x07fb31dc:  jae    0x7fb320e

----------------
IN: 
0x07fb31de:  mov    $0x40,%edx
0x07fb31e3:  lea    0x28(%esp),%eax
0x07fb31e7:  call   0xec35d

----------------
IN: 
0x07fb31ec:  mov    0x28(%esp),%eax
0x07fb31f0:  call   0xe9c60

----------------
IN: 
0x07fb31f5:  mov    0x2c(%esp),%edx
0x07fb31f9:  xchg   %dh,%dl
0x07fb31fb:  movzwl %dx,%edx
0x07fb31fe:  push   %eax
0x07fb31ff:  xor    %ecx,%ecx
0x07fb3201:  lea    0x34(%esp),%eax
0x07fb3205:  call   0x7fae2ff

----------------
IN: 
0x07fb320a:  inc    %ebx
0x07fb320b:  pop    %esi
0x07fb320c:  jmp    0x7fb31d8

----------------
IN: 
0x07fb31d8:  cmp    0x18(%esp),%ebx
0x07fb31dc:  jae    0x7fb320e

----------------
IN: 
0x07fb320e:  mov    $0xf1709,%eax
0x07fb3213:  call   0x7fad7ee

----------------
IN: 
0x07fab69e:  sbb    %eax,%eax
0x07fab6a0:  or     $0x1,%eax
0x07fab6a3:  jmp    0x7fab6ad

----------------
IN: 
0x07fab6ad:  pop    %ebx
0x07fab6ae:  ret    

----------------
IN: 
0x07fad815:  mov    (%ebx),%ebx
0x07fad817:  jmp    0x7fad801

----------------
IN: 
0x07fad801:  test   %ebx,%ebx
0x07fad803:  je     0x7fad819

----------------
IN: 
0x07fb3218:  test   %eax,%eax
0x07fb321a:  jne    0x7fb32e7

----------------
IN: 
0x07fb32e7:  mov    $0xf1733,%eax
0x07fb32ec:  call   0x7fad7ee

----------------
IN: 
0x07fb32f1:  test   %eax,%eax
0x07fb32f3:  je     0x7fb330f

----------------
IN: 
0x07fb32f5:  movw   $0x600,0xf515c
0x07fb32fe:  push   $0x600
0x07fb3303:  push   $0xf1744
0x07fb3308:  call   0xec4d8

----------------
IN: 
0x000ebf04:  lea    0x4(%ebp),%edx
0x000ebf07:  mov    %edx,(%esp)
0x000ebf0a:  push   %edi
0x000ebf0b:  push   %eax
0x000ebf0c:  mov    0xc(%esp),%edx
0x000ebf10:  mov    %ebx,%eax
0x000ebf12:  call   0xe990b

----------------
IN: 
0x07fb330d:  pop    %ecx
0x07fb330e:  pop    %ebx
0x07fb330f:  movw   $0x0,0x28(%esp)
0x07fb3316:  mov    $0x2,%ecx
0x07fb331b:  mov    $0x4,%edx
0x07fb3320:  lea    0x28(%esp),%eax
0x07fb3324:  call   0xec37e

----------------
IN: 
0x07fb3329:  cmpw   $0x0,0x28(%esp)
0x07fb332f:  je     0x7fb2fef

----------------
IN: 
0x07fb2fef:  xor    %eax,%eax
0x07fb2ff1:  mov    $0xfff53,%edx
0x07fb2ff6:  jmp    0x7fb33e9

----------------
IN: 
0x07fb33e9:  mov    %dx,(%eax)
0x07fb33ec:  movw   $0xf000,0x2(%eax)
0x07fb33f2:  add    $0x4,%eax
0x07fb33f5:  cmp    $0x400,%eax
0x07fb33fa:  jne    0x7fb33e9

----------------
IN: 
0x07fb33fc:  mov    $0x20,%eax
0x07fb3401:  mov    $0xfd440,%edx
0x07fb3406:  mov    %dx,(%eax)
0x07fb3409:  movw   $0xf000,0x2(%eax)
0x07fb340f:  add    $0x4,%eax
0x07fb3412:  cmp    $0x40,%eax
0x07fb3415:  jne    0x7fb3406

----------------
IN: 
0x07fb3406:  mov    %dx,(%eax)
0x07fb3409:  movw   $0xf000,0x2(%eax)
0x07fb340f:  add    $0x4,%eax
0x07fb3412:  cmp    $0x40,%eax
0x07fb3415:  jne    0x7fb3406

----------------
IN: 
0x07fb3417:  mov    $0x1c0,%eax
0x07fb341c:  mov    $0xfd449,%edx
0x07fb3421:  mov    %dx,(%eax)
0x07fb3424:  movw   $0xf000,0x2(%eax)
0x07fb342a:  add    $0x4,%eax
0x07fb342d:  cmp    $0x1e0,%eax
0x07fb3432:  jne    0x7fb3421

----------------
IN: 
0x07fb3421:  mov    %dx,(%eax)
0x07fb3424:  movw   $0xf000,0x2(%eax)
0x07fb342a:  add    $0x4,%eax
0x07fb342d:  cmp    $0x1e0,%eax
0x07fb3432:  jne    0x7fb3421

----------------
IN: 
0x07fb3434:  mov    $0xfe2c3,%eax
0x07fb3439:  mov    %ax,0x8
0x07fb343f:  movw   $0xf000,0xa
0x07fb3448:  mov    $0xfff54,%eax
0x07fb344d:  mov    %ax,0x14
0x07fb3453:  movw   $0xf000,0x16
0x07fb345c:  mov    $0xff065,%eax
0x07fb3461:  mov    %ax,0x40
0x07fb3467:  movw   $0xf000,0x42
0x07fb3470:  mov    $0xff84d,%eax
0x07fb3475:  mov    %ax,0x44
0x07fb347b:  movw   $0xf000,0x46
0x07fb3484:  mov    $0xff841,%eax
0x07fb3489:  mov    %ax,0x48
0x07fb348f:  movw   $0xf000,0x4a
0x07fb3498:  mov    $0xfe3fe,%eax
0x07fb349d:  mov    %ax,0x4c
0x07fb34a3:  movw   $0xf000,0x4e
0x07fb34ac:  mov    $0xfe739,%eax
0x07fb34b1:  mov    %ax,0x50
0x07fb34b7:  movw   $0xf000,0x52
0x07fb34c0:  mov    $0xff859,%eax
0x07fb34c5:  mov    %ax,0x54
0x07fb34cb:  movw   $0xf000,0x56
0x07fb34d4:  mov    $0xfe82e,%eax
0x07fb34d9:  mov    %ax,0x58
0x07fb34df:  movw   $0xf000,0x5a
0x07fb34e8:  mov    $0xfefd2,%eax
0x07fb34ed:  mov    %ax,0x5c
0x07fb34f3:  movw   $0xf000,0x5e
0x07fb34fc:  mov    $0xfd465,%eax
0x07fb3501:  mov    %ax,0x60
0x07fb3507:  movw   $0xf000,0x62
0x07fb3510:  mov    $0xfe6f2,%eax
0x07fb3515:  mov    %ax,0x64
0x07fb351b:  movw   $0xf000,0x66
0x07fb3524:  mov    $0xffe6e,%eax
0x07fb3529:  mov    %ax,0x68
0x07fb352f:  movw   $0xf000,0x6a
0x07fb3538:  mov    $0xfec59,%eax
0x07fb353d:  mov    %ax,0x100
0x07fb3543:  movw   $0xf000,0x102
0x07fb354c:  mov    $0x180,%eax
0x07fb3551:  movl   $0x0,(%eax)
0x07fb3557:  add    $0x4,%eax
0x07fb355a:  cmp    $0x19c,%eax
0x07fb355f:  jne    0x7fb3551

----------------
IN: 
0x07fb3551:  movl   $0x0,(%eax)
0x07fb3557:  add    $0x4,%eax
0x07fb355a:  cmp    $0x19c,%eax
0x07fb355f:  jne    0x7fb3551

----------------
IN: 
0x07fb3561:  movl   $0x0,0x1e4
0x07fb356b:  mov    $0x100,%ecx
0x07fb3570:  xor    %edx,%edx
0x07fb3572:  mov    $0x400,%eax
0x07fb3577:  call   0xeab7b

----------------
IN: 
0x07fb357c:  movw   $0x9fc0,0x40e
0x07fb3585:  movw   $0x27f,0x413
0x07fb358e:  mov    $0x121,%ecx
0x07fb3593:  mov    $0x9fc00,%eax
0x07fb3598:  call   0xeab7b

----------------
IN: 
0x07fb359d:  movb   $0x1,0x9fc00
0x07fb35a4:  push   $0x2
0x07fb35a6:  push   $0x0
0x07fb35a8:  push   $0x400
0x07fb35ad:  mov    $0x9fc00,%eax
0x07fb35b2:  xor    %edx,%edx
0x07fb35b4:  call   0x7fadf0b

----------------
IN: 
0x07fadf0b:  push   %edi
0x07fadf0c:  push   %esi
0x07fadf0d:  push   %ebx
0x07fadf0e:  mov    0x10(%esp),%ebx
0x07fadf12:  mov    0x14(%esp),%ecx
0x07fadf16:  mov    %ecx,%edi
0x07fadf18:  or     %ebx,%edi
0x07fadf1a:  je     0x7fadf24

----------------
IN: 
0x07fadf1c:  pop    %ebx
0x07fadf1d:  pop    %esi
0x07fadf1e:  pop    %edi
0x07fadf1f:  jmp    0x7fadd3c

----------------
IN: 
0x07fadd3c:  push   %ebp
0x07fadd3d:  push   %edi
0x07fadd3e:  push   %esi
0x07fadd3f:  push   %ebx
0x07fadd40:  sub    $0x24,%esp
0x07fadd43:  mov    %eax,0xc(%esp)
0x07fadd47:  mov    %edx,0x10(%esp)
0x07fadd4b:  mov    0x38(%esp),%eax
0x07fadd4f:  mov    0x3c(%esp),%edx
0x07fadd53:  mov    %eax,0x1c(%esp)
0x07fadd57:  mov    %edx,0x20(%esp)
0x07fadd5b:  mov    0x40(%esp),%ebp
0x07fadd5f:  mov    %eax,%esi
0x07fadd61:  mov    %edx,%edi
0x07fadd63:  add    0xc(%esp),%esi
0x07fadd67:  adc    0x10(%esp),%edi
0x07fadd6b:  mov    %esi,(%esp)
0x07fadd6e:  mov    %edi,0x4(%esp)
0x07fadd72:  mov    0xf5d24,%edx
0x07fadd78:  movl   $0x0,0x8(%esp)
0x07fadd80:  cmp    %edx,0x8(%esp)
0x07fadd84:  jge    0x7faded2

----------------
IN: 
0x07fadd8a:  imul   $0x14,0x8(%esp),%eax
0x07fadd8f:  mov    0xf5d40(%eax),%ecx
0x07fadd95:  mov    0xf5d44(%eax),%ebx
0x07fadd9b:  mov    %ecx,%esi
0x07fadd9d:  mov    %ebx,%edi
0x07fadd9f:  add    0xf5d48(%eax),%esi
0x07fadda5:  adc    0xf5d4c(%eax),%edi
0x07faddab:  mov    %esi,0x14(%esp)
0x07faddaf:  mov    %edi,0x18(%esp)
0x07faddb3:  mov    0x14(%esp),%edi
0x07faddb7:  cmp    0xc(%esp),%edi
0x07faddbb:  mov    0x18(%esp),%edi
0x07faddbf:  sbb    0x10(%esp),%edi
0x07faddc3:  jae    0x7faddcb

----------------
IN: 
0x07faddcb:  cmp    0xc(%esp),%ecx
0x07faddcf:  mov    %ebx,%edi
0x07faddd1:  sbb    0x10(%esp),%edi
0x07faddd5:  jae    0x7fade52

----------------
IN: 
0x07faddd7:  add    $0xf5d40,%eax
0x07fadddc:  mov    %eax,%edi
0x07faddde:  mov    0x10(%eax),%eax
0x07fadde1:  mov    %eax,%esi
0x07fadde3:  cmp    %ebp,%eax
0x07fadde5:  jne    0x7fade04

----------------
IN: 
0x07fade04:  mov    0xc(%esp),%eax
0x07fade08:  mov    0x10(%esp),%edx
0x07fade0c:  sub    %ecx,%eax
0x07fade0e:  sbb    %ebx,%edx
0x07fade10:  mov    %eax,0x8(%edi)
0x07fade13:  mov    %edx,0xc(%edi)
0x07fade16:  incl   0x8(%esp)
0x07fade1a:  mov    0x14(%esp),%eax
0x07fade1e:  cmp    %eax,(%esp)
0x07fade21:  mov    0x4(%esp),%eax
0x07fade25:  sbb    0x18(%esp),%eax
0x07fade29:  jae    0x7fade52

----------------
IN: 
0x07fade52:  imul   $0x14,0x8(%esp),%ebx
0x07fade57:  mov    0x8(%esp),%eax
0x07fade5b:  cmp    0xf5d24,%eax
0x07fade61:  jge    0x7faded2

----------------
IN: 
0x07fade63:  lea    0xf5d40(%ebx),%ecx
0x07fade69:  mov    0xf5d40(%ebx),%eax
0x07fade6f:  mov    0xf5d44(%ebx),%edx
0x07fade75:  cmp    %eax,(%esp)
0x07fade78:  mov    0x4(%esp),%edi
0x07fade7c:  sbb    %edx,%edi
0x07fade7e:  jb     0x7faded2

----------------
IN: 
0x07faded2:  cmp    $0xffffffff,%ebp
0x07faded5:  je     0x7fadf03

----------------
IN: 
0x07faded7:  mov    %ebp,0x40(%esp)
0x07fadedb:  mov    0x1c(%esp),%eax
0x07fadedf:  mov    0x20(%esp),%edx
0x07fadee3:  mov    %eax,0x38(%esp)
0x07fadee7:  mov    %edx,0x3c(%esp)
0x07fadeeb:  mov    0xc(%esp),%edx
0x07fadeef:  mov    0x10(%esp),%ecx
0x07fadef3:  mov    0x8(%esp),%eax
0x07fadef7:  add    $0x24,%esp
0x07fadefa:  pop    %ebx
0x07fadefb:  pop    %esi
0x07fadefc:  pop    %edi
0x07fadefd:  pop    %ebp
0x07fadefe:  jmp    0x7fadcb2

----------------
IN: 
0x07fadcb2:  push   %ebp
0x07fadcb3:  push   %edi
0x07fadcb4:  push   %esi
0x07fadcb5:  push   %ebx
0x07fadcb6:  sub    $0xc,%esp
0x07fadcb9:  mov    %ecx,%edi
0x07fadcbb:  mov    0x20(%esp),%ecx
0x07fadcbf:  mov    0x24(%esp),%ebx
0x07fadcc3:  mov    %ecx,(%esp)
0x07fadcc6:  mov    %ebx,0x4(%esp)
0x07fadcca:  mov    0x28(%esp),%ebp
0x07fadcce:  mov    0xf5d24,%ecx
0x07fadcd4:  cmp    $0x1f,%ecx
0x07fadcd7:  jle    0x7fadcef

----------------
IN: 
0x07fadcef:  mov    %edx,%esi
0x07fadcf1:  imul   $0x14,%eax,%ebx
0x07fadcf4:  sub    %eax,%ecx
0x07fadcf6:  imul   $0x14,%ecx,%ecx
0x07fadcf9:  lea    0xf5d40(%ebx),%edx
0x07fadcff:  lea    0xf5d54(%ebx),%eax
0x07fadd05:  mov    %edx,0x8(%esp)
0x07fadd09:  call   0x7fad59d

----------------
IN: 
0x07fadd0e:  incl   0xf5d24
0x07fadd14:  mov    %esi,0xf5d40(%ebx)
0x07fadd1a:  mov    %edi,0xf5d44(%ebx)
0x07fadd20:  mov    (%esp),%esi
0x07fadd23:  mov    0x4(%esp),%edi
0x07fadd27:  mov    0x8(%esp),%edx
0x07fadd2b:  mov    %esi,0x8(%edx)
0x07fadd2e:  mov    %edi,0xc(%edx)
0x07fadd31:  mov    %ebp,0x10(%edx)
0x07fadd34:  add    $0xc,%esp
0x07fadd37:  pop    %ebx
0x07fadd38:  pop    %esi
0x07fadd39:  pop    %edi
0x07fadd3a:  pop    %ebp
0x07fadd3b:  ret    

----------------
IN: 
0x07fb35b9:  mov    $0xe9798,%eax
0x07fb35be:  sub    $0xd9800,%eax
0x07fb35c3:  mov    %eax,0xe8f90
0x07fb35c8:  mov    $0xb8,%al
0x07fb35ca:  out    %al,$0x70
0x07fb35cc:  in     $0x71,%al
0x07fb35ce:  add    $0xc,%esp
0x07fb35d1:  test   $0x1,%al
0x07fb35d3:  je     0x7fb35df

----------------
IN: 
0x07fb35df:  mov    $0xbd,%al
0x07fb35e1:  out    %al,$0x70
0x07fb35e3:  in     $0x71,%al
0x07fb35e5:  movzbl %al,%edx
0x07fb35e8:  mov    $0xb8,%al
0x07fb35ea:  out    %al,$0x70
0x07fb35ec:  in     $0x71,%al
0x07fb35ee:  shl    $0x4,%eax
0x07fb35f1:  and    $0xf00,%eax
0x07fb35f6:  or     %eax,%edx
0x07fb35f8:  movl   $0x270f,0x7fbfe44
0x07fb3602:  movl   $0x270f,0x7fbfe48
0x07fb360c:  movl   $0x270f,0x7fbfe4c
0x07fb3616:  movl   $0x270f,0x7fbfe50
0x07fb3620:  xor    %edi,%edi
0x07fb3622:  movb   $0x0,0x3(%esp)
0x07fb3627:  xor    %ebx,%ebx
0x07fb3629:  xor    %ecx,%ecx
0x07fb362b:  mov    $0x65,%eax
0x07fb3630:  mov    %edx,%esi
0x07fb3632:  and    $0xf,%esi
0x07fb3635:  mov    %edx,0x10(%esp)
0x07fb3639:  shr    $0x4,%edx
0x07fb363c:  cmp    $0x3,%esi
0x07fb363f:  je     0x7fb366a

----------------
IN: 
0x07fb3641:  testb  $0xc,0x10(%esp)
0x07fb3646:  jne    0x7fb365a

----------------
IN: 
0x07fb3648:  cmp    $0x1,%esi
0x07fb364b:  je     0x7fb3675

----------------
IN: 
0x07fb364d:  cmp    $0x2,%esi
0x07fb3650:  jne    0x7fb3679

----------------
IN: 
0x07fb3652:  mov    %eax,0x8(%esp)
0x07fb3656:  mov    $0x1,%bl
0x07fb3658:  jmp    0x7fb3679

----------------
IN: 
0x07fb3679:  inc    %eax
0x07fb367a:  cmp    $0x68,%eax
0x07fb367d:  jne    0x7fb3630

----------------
IN: 
0x07fb3630:  mov    %edx,%esi
0x07fb3632:  and    $0xf,%esi
0x07fb3635:  mov    %edx,0x10(%esp)
0x07fb3639:  shr    $0x4,%edx
0x07fb363c:  cmp    $0x3,%esi
0x07fb363f:  je     0x7fb366a

----------------
IN: 
0x07fb3675:  mov    %eax,%ebp
0x07fb3677:  mov    $0x1,%cl
0x07fb3679:  inc    %eax
0x07fb367a:  cmp    $0x68,%eax
0x07fb367d:  jne    0x7fb3630

----------------
IN: 
0x07fb366a:  mov    %eax,0xc(%esp)
0x07fb366e:  movb   $0x1,0x3(%esp)
0x07fb3673:  jmp    0x7fb3679

----------------
IN: 
0x07fb367f:  mov    %edi,%eax
0x07fb3681:  test   %al,%al
0x07fb3683:  je     0x7fb368e

----------------
IN: 
0x07fb368e:  cmpb   $0x0,0x3(%esp)
0x07fb3693:  je     0x7fb369e

----------------
IN: 
0x07fb3695:  mov    0xc(%esp),%eax
0x07fb3699:  mov    %eax,0x7fbfe4c
0x07fb369e:  test   %bl,%bl
0x07fb36a0:  je     0x7fb36ab

----------------
IN: 
0x07fb36a2:  mov    0x8(%esp),%eax
0x07fb36a6:  mov    %eax,0x7fbfe48
0x07fb36ab:  test   %cl,%cl
0x07fb36ad:  je     0x7fb36b5

----------------
IN: 
0x07fb36af:  mov    %ebp,0x7fbfe50
0x07fb36b5:  mov    $0xea60,%edx
0x07fb36ba:  xor    %ecx,%ecx
0x07fb36bc:  mov    $0xf1780,%eax
0x07fb36c1:  call   0x7fad81f

----------------
IN: 
0x07fb36c6:  mov    %eax,0xf54c0
0x07fb36cb:  xor    %edx,%edx
0x07fb36cd:  mov    $0xf1793,%eax
0x07fb36d2:  call   0x7fae1dd

----------------
IN: 
0x07fae1dd:  push   %ebp
0x07fae1de:  push   %edi
0x07fae1df:  push   %esi
0x07fae1e0:  push   %ebx
0x07fae1e1:  mov    %edx,%ebp
0x07fae1e3:  call   0x7fad7ee

----------------
IN: 
0x07fae1e8:  test   %eax,%eax
0x07fae1ea:  je     0x7fae23f

----------------
IN: 
0x07fae1ec:  mov    %eax,%esi
0x07fae1ee:  mov    0x84(%eax),%edi
0x07fae1f4:  xor    %ebx,%ebx
0x07fae1f6:  test   %edi,%edi
0x07fae1f8:  je     0x7fae241

----------------
IN: 
0x07fae241:  mov    %ebx,%eax
0x07fae243:  pop    %ebx
0x07fae244:  pop    %esi
0x07fae245:  pop    %edi
0x07fae246:  pop    %ebp
0x07fae247:  ret    

----------------
IN: 
0x07fb36d7:  mov    %eax,%ebx
0x07fb36d9:  test   %eax,%eax
0x07fb36db:  je     0x7fb3796

----------------
IN: 
0x07fb3796:  xor    %edx,%edx
0x07fb3798:  mov    $0xf17b2,%eax
0x07fb379d:  call   0x7fae1dd

----------------
IN: 
0x07fb37a2:  mov    %eax,%ebx
0x07fb37a4:  test   %eax,%eax
0x07fb37a6:  je     0x7fb389b

----------------
IN: 
0x07fb389b:  movl   $0xfd27e,0xf6044
0x07fb38a5:  mov    $0x10,%edx
0x07fb38aa:  mov    $0xf6040,%eax
0x07fb38af:  call   0xeaaa5

----------------
IN: 
0x000eaaa5:  add    %eax,%edx
0x000eaaa7:  xor    %ecx,%ecx
0x000eaaa9:  cmp    %edx,%eax
0x000eaaab:  je     0xeaab2

----------------
IN: 
0x000eaaad:  add    (%eax),%cl
0x000eaaaf:  inc    %eax
0x000eaab0:  jmp    0xeaaa9

----------------
IN: 
0x000eaaa9:  cmp    %edx,%eax
0x000eaaab:  je     0xeaab2

----------------
IN: 
0x000eaab2:  mov    %cl,%al
0x000eaab4:  ret    

----------------
IN: 
0x07fb38b4:  sub    %al,0xf604a
0x07fb38ba:  mov    $0xfd0c3,%eax
0x07fb38bf:  mov    %ax,0xf5d17
0x07fb38c5:  movw   $0xf000,0xf5d19
0x07fb38ce:  mov    $0x10,%edx
0x07fb38d3:  mov    $0xf5d10,%eax
0x07fb38d8:  call   0xeaaa5

----------------
IN: 
0x07fb38dd:  sub    %al,0xf5d16
0x07fb38e3:  mov    $0xfd125,%eax
0x07fb38e8:  mov    %ax,0xf606d
0x07fb38ee:  mov    $0xfd121,%eax
0x07fb38f3:  mov    %ax,0xf6071
0x07fb38f9:  mov    $0x21,%edx
0x07fb38fe:  mov    $0xf6060,%eax
0x07fb3903:  call   0xeaaa5

----------------
IN: 
0x07fb3908:  sub    %al,0xf6068
0x07fb390e:  movb   $0x10,0x496
0x07fb3915:  movw   $0x1e,0x41a
0x07fb391e:  movw   $0x1e,0x41c
0x07fb3927:  movw   $0x1e,0x480
0x07fb3930:  movw   $0x3e,0x482
0x07fb3939:  orw    $0x4,0x410
0x07fb3941:  add    $0xa8,%esp
0x07fb3947:  pop    %ebx
0x07fb3948:  pop    %esi
0x07fb3949:  pop    %edi
0x07fb394a:  pop    %ebp
0x07fb394b:  ret    

----------------
IN: 
0x07fbbac1:  call   0x7fb934b

----------------
IN: 
0x07fb934b:  push   %ebp
0x07fb934c:  push   %edi
0x07fb934d:  push   %esi
0x07fb934e:  push   %ebx
0x07fb934f:  sub    $0xa8,%esp
0x07fb9355:  xor    %edx,%edx
0x07fb9357:  mov    %dl,%al
0x07fb9359:  out    %al,$0xd
0x07fb935b:  out    %al,$0xda
0x07fb935d:  mov    $0xc0,%al
0x07fb935f:  out    %al,$0xd6
0x07fb9361:  mov    %dl,%al
0x07fb9363:  out    %al,$0xd4
0x07fb9365:  call   0xea98a

----------------
IN: 
0x000ea98a:  mov    $0x11,%al
0x000ea98c:  out    %al,$0x20
0x000ea98e:  out    %al,$0xa0
0x000ea990:  mov    $0x8,%al
0x000ea992:  out    %al,$0x21
0x000ea994:  mov    $0x70,%al
0x000ea996:  out    %al,$0xa1
0x000ea998:  mov    $0x4,%al
0x000ea99a:  out    %al,$0x21
0x000ea99c:  mov    $0x2,%al
0x000ea99e:  out    %al,$0xa1
0x000ea9a0:  mov    $0x1,%al
0x000ea9a2:  out    %al,$0x21
0x000ea9a4:  out    %al,$0xa1
0x000ea9a6:  mov    $0xfb,%al
0x000ea9a8:  out    %al,$0x21
0x000ea9aa:  mov    $0xff,%al
0x000ea9ac:  out    %al,$0xa1
0x000ea9ae:  ret    

----------------
IN: 
0x07fb936a:  movb   $0x1,0xf54e1
0x07fb9371:  mov    $0x1,%eax
0x07fb9376:  call   0xebf98

----------------
IN: 
0x000ebf98:  push   %ebx
0x000ebf99:  mov    %eax,%ebx
0x000ebf9b:  mov    %esp,%eax
0x000ebf9d:  cmp    $0x7000,%eax
0x000ebfa2:  jbe    0xebfae

----------------
IN: 
0x000ebfae:  mov    $0x18,%ecx
0x000ebfb3:  xor    %edx,%edx
0x000ebfb5:  mov    $0xe979c,%eax
0x000ebfba:  call   0xeab7b

----------------
IN: 
0x000ebfbf:  test   %ebx,%ebx
0x000ebfc1:  je     0xebfca

----------------
IN: 
0x000ebfc3:  movb   $0x1,0xe979c
0x000ebfca:  movb   $0x1,0xe979e
0x000ebfd1:  pop    %ebx
0x000ebfd2:  ret    

----------------
IN: 
0x07fb937b:  mov    $0x1,%edx
0x07fb9380:  xor    %ecx,%ecx
0x07fb9382:  mov    $0xf36c4,%eax
0x07fb9387:  call   0x7fad81f

----------------
IN: 
0x07fad834:  mov    %esi,%eax
0x07fad836:  mov    %edi,%edx
0x07fad838:  jmp    0x7fad873

----------------
IN: 
0x07fad873:  pop    %ecx
0x07fad874:  pop    %esi
0x07fad875:  pop    %esi
0x07fad876:  pop    %edi
0x07fad877:  pop    %ebp
0x07fad878:  ret    

----------------
IN: 
0x07fb938c:  mov    %al,0xf54e0
0x07fb9391:  orw    $0x2,0x410
0x07fb9399:  mov    $0xfd437,%edx
0x07fb939e:  movzwl %dx,%edx
0x07fb93a1:  or     $0xf0000000,%edx
0x07fb93a7:  mov    $0xd,%eax
0x07fb93ac:  call   0x7fad04c

----------------
IN: 
0x07fad04c:  push   %esi
0x07fad04d:  push   %ebx
0x07fad04e:  mov    %eax,%ecx
0x07fad050:  mov    %edx,%ebx
0x07fad052:  mov    $0x1,%edx
0x07fad057:  shl    %cl,%edx
0x07fad059:  in     $0x21,%al
0x07fad05b:  mov    %edx,%esi
0x07fad05d:  not    %esi
0x07fad05f:  and    %esi,%eax
0x07fad061:  out    %al,$0x21
0x07fad063:  in     $0xa1,%al
0x07fad065:  shr    $0x8,%dx
0x07fad069:  not    %edx
0x07fad06b:  and    %edx,%eax
0x07fad06d:  out    %al,$0xa1
0x07fad06f:  lea    0x8(%ecx),%eax
0x07fad072:  cmp    $0x7,%ecx
0x07fad075:  jle    0x7fad07a

----------------
IN: 
0x07fad077:  lea    0x68(%ecx),%eax
0x07fad07a:  mov    %ebx,0x0(,%eax,4)
0x07fad081:  pop    %ebx
0x07fad082:  pop    %esi
0x07fad083:  ret    

----------------
IN: 
0x07fb93b1:  call   0x7fb56c9

----------------
IN: 
0x07fb56c9:  push   %ebp
0x07fb56ca:  push   %edi
0x07fb56cb:  push   %esi
0x07fb56cc:  push   %ebx
0x07fb56cd:  sub    $0xd4,%esp
0x07fb56d3:  call   0xe97da

----------------
IN: 
0x07fb56d8:  mov    %eax,0xc(%esp)
0x07fb56dc:  test   %eax,%eax
0x07fb56de:  je     0x7fb5890

----------------
IN: 
0x07fb5890:  testb  $0x4,0xf5d00
0x07fb5897:  lea    0x50(%esp),%esi
0x07fb589b:  je     0x7fb5970

----------------
IN: 
0x07fb5970:  call   0x7faffe1

----------------
IN: 
0x07faffe1:  push   %ebp
0x07faffe2:  push   %edi
0x07faffe3:  push   %esi
0x07faffe4:  push   %ebx
0x07faffe5:  sub    $0x60,%esp
0x07faffe8:  push   $0xf0b85
0x07faffed:  call   0xec4d8

----------------
IN: 
0x07fafff2:  mov    $0xcf8,%edx
0x07fafff7:  mov    $0x80000000,%eax
0x07fafffc:  out    %eax,(%dx)
0x07fafffd:  in     (%dx),%eax
0x07fafffe:  pop    %ebp
0x07faffff:  cmp    $0x80000000,%eax
0x07fb0004:  jne    0x7fb0058

----------------
IN: 
0x07fb0006:  xor    %edx,%edx
0x07fb0008:  xor    %ecx,%ecx
0x07fb000a:  mov    $0xf0b45,%eax
0x07fb000f:  call   0x7fad81f

----------------
IN: 
0x07fb0014:  mov    %eax,%ebx
0x07fb0016:  movb   $0x0,0x54(%esp)
0x07fb001b:  lea    0x54(%esp),%edx
0x07fb001f:  xor    %eax,%eax
0x07fb0021:  call   0x7faf5f0

----------------
IN: 
0x07faf5f0:  push   %ebp
0x07faf5f1:  push   %edi
0x07faf5f2:  push   %esi
0x07faf5f3:  push   %ebx
0x07faf5f4:  sub    $0x8,%esp
0x07faf5f7:  mov    %eax,%ebx
0x07faf5f9:  mov    %edx,%edi
0x07faf5fb:  push   %eax
0x07faf5fc:  push   $0x7fbf27c
0x07faf601:  push   $0xf0864
0x07faf606:  call   0xec4d8

----------------
IN: 
0x000ebf48:  lea    0x4(%ebp),%edi
0x000ebf4b:  mov    0x0(%ebp),%ebp
0x000ebf4e:  movsbl 0x0(%ebp),%edx
0x000ebf52:  test   %dl,%dl
0x000ebf54:  je     0xebf70

----------------
IN: 
0x000ebf56:  mov    %ebx,%eax
0x000ebf58:  call   0xe9803

----------------
IN: 
0x000ebf5d:  inc    %ebp
0x000ebf5e:  jmp    0xebf4e

----------------
IN: 
0x000ebf4e:  movsbl 0x0(%ebp),%edx
0x000ebf52:  test   %dl,%dl
0x000ebf54:  je     0xebf70

----------------
IN: 
0x07faf60b:  mov    %ebx,%eax
0x07faf60d:  shl    $0x8,%eax
0x07faf610:  dec    %eax
0x07faf611:  mov    %eax,0xc(%esp)
0x07faf615:  mov    %ebx,%edx
0x07faf617:  call   0xea50b

----------------
IN: 
0x000ea50b:  push   %esi
0x000ea50c:  push   %ebx
0x000ea50d:  mov    %eax,%ebx
0x000ea50f:  mov    %edx,%esi
0x000ea511:  test   $0x7,%al
0x000ea513:  jne    0xea546

----------------
IN: 
0x000ea546:  inc    %ebx
0x000ea547:  jmp    0xea529

----------------
IN: 
0x000ea529:  movzwl %bx,%eax
0x000ea52c:  movzbl %bh,%edx
0x000ea52f:  cmp    %esi,%edx
0x000ea531:  jne    0xea549

----------------
IN: 
0x000ea533:  xor    %edx,%edx
0x000ea535:  call   0xea491

----------------
IN: 
0x000ea53a:  dec    %eax
0x000ea53b:  cmp    $0xfffffffd,%ax
0x000ea53f:  jbe    0xea54c

----------------
IN: 
0x000ea54c:  mov    %ebx,%eax
0x000ea54e:  pop    %ebx
0x000ea54f:  pop    %esi
0x000ea550:  ret    

----------------
IN: 
0x07faf61c:  mov    %eax,%esi
0x07faf61e:  add    $0xc,%esp
0x07faf621:  test   %esi,%esi
0x07faf623:  js     0x7faf666

----------------
IN: 
0x07faf625:  movzwl %si,%ebp
0x07faf628:  mov    $0xa,%edx
0x07faf62d:  mov    %ebp,%eax
0x07faf62f:  call   0xea491

----------------
IN: 
0x07faf634:  cmp    $0x604,%ax
0x07faf638:  jne    0x7faf659

----------------
IN: 
0x07faf659:  mov    %ebx,%edx
0x07faf65b:  mov    %esi,%eax
0x07faf65d:  call   0xea50b

----------------
IN: 
0x000ea515:  movzwl %ax,%eax
0x000ea518:  mov    $0xe,%edx
0x000ea51d:  call   0xea4cf

----------------
IN: 
0x000ea4cf:  mov    %edx,%ecx
0x000ea4d1:  mov    0xf54d8,%edx
0x000ea4d7:  test   %edx,%edx
0x000ea4d9:  movzwl %ax,%eax
0x000ea4dc:  je     0xea4e8

----------------
IN: 
0x000ea4e8:  shl    $0x8,%eax
0x000ea4eb:  mov    %ecx,%edx
0x000ea4ed:  and    $0xfc,%edx
0x000ea4f3:  or     %edx,%eax
0x000ea4f5:  or     $0x80000000,%eax
0x000ea4fa:  mov    $0xcf8,%edx
0x000ea4ff:  out    %eax,(%dx)
0x000ea500:  and    $0x3,%ecx
0x000ea503:  lea    0xcfc(%ecx),%edx
0x000ea509:  in     (%dx),%al
0x000ea50a:  ret    

----------------
IN: 
0x000ea522:  test   %al,%al
0x000ea524:  js     0xea546

----------------
IN: 
0x000ea526:  add    $0x8,%ebx
0x000ea529:  movzwl %bx,%eax
0x000ea52c:  movzbl %bh,%edx
0x000ea52f:  cmp    %esi,%edx
0x000ea531:  jne    0xea549

----------------
IN: 
0x07faf662:  mov    %eax,%esi
0x07faf664:  jmp    0x7faf621

----------------
IN: 
0x07faf621:  test   %esi,%esi
0x07faf623:  js     0x7faf666

----------------
IN: 
0x000ea541:  test   $0x7,%bl
0x000ea544:  je     0xea526

----------------
IN: 
0x000ea549:  or     $0xffffffff,%ebx
0x000ea54c:  mov    %ebx,%eax
0x000ea54e:  pop    %ebx
0x000ea54f:  pop    %esi
0x000ea550:  ret    

----------------
IN: 
0x07faf666:  mov    %ebx,%edx
0x07faf668:  mov    (%esp),%eax
0x07faf66b:  call   0xea50b

----------------
IN: 
0x07faf670:  mov    %eax,%ebp
0x07faf672:  test   %eax,%eax
0x07faf674:  js     0x7faf837

----------------
IN: 
0x07faf67a:  movzwl %bp,%eax
0x07faf67d:  mov    %eax,(%esp)
0x07faf680:  mov    $0xa,%edx
0x07faf685:  call   0xea491

----------------
IN: 
0x07faf68a:  cmp    $0x604,%ax
0x07faf68e:  jne    0x7faf82e

----------------
IN: 
0x07faf82e:  mov    %ebx,%edx
0x07faf830:  mov    %ebp,%eax
0x07faf832:  jmp    0x7faf66b

----------------
IN: 
0x07faf66b:  call   0xea50b

----------------
IN: 
0x07faf837:  add    $0x8,%esp
0x07faf83a:  pop    %ebx
0x07faf83b:  pop    %esi
0x07faf83c:  pop    %edi
0x07faf83d:  pop    %ebp
0x07faf83e:  ret    

----------------
IN: 
0x07fb0026:  test   %bl,%bl
0x07fb0028:  jne    0x7fb0062

----------------
IN: 
0x07fb002a:  push   $0xf0ba4
0x07fb002f:  call   0xec4d8

----------------
IN: 
0x07fb0034:  call   0x7fafe37

----------------
IN: 
0x07fafe37:  push   %ebp
0x07fafe38:  push   %edi
0x07fafe39:  push   %esi
0x07fafe3a:  push   %ebx
0x07fafe3b:  sub    $0x414,%esp
0x07fafe41:  mov    $0x400,%ecx
0x07fafe46:  xor    %edx,%edx
0x07fafe48:  lea    0x14(%esp),%eax
0x07fafe4c:  call   0xeab7b

----------------
IN: 
0x07fafe51:  xor    %edx,%edx
0x07fafe53:  xor    %ecx,%ecx
0x07fafe55:  mov    $0xf0b45,%eax
0x07fafe5a:  call   0x7fad81f

----------------
IN: 
0x07fafe5f:  mov    %eax,0x10(%esp)
0x07fafe63:  movl   $0x0,0x8(%esp)
0x07fafe6b:  xor    %ebp,%ebp
0x07fafe6d:  movl   $0x0,(%esp)
0x07fafe74:  or     $0xffffffff,%ebx
0x07fafe77:  movl   $0x7fbfde8,0x4(%esp)
0x07fafe7f:  cmp    %ebx,0xf5d0c
0x07fafe85:  jle    0x7faffb8

----------------
IN: 
0x07fafe8b:  inc    %ebx
0x07fafe8c:  mov    %ebx,%eax
0x07fafe8e:  shl    $0x8,%eax
0x07fafe91:  dec    %eax
0x07fafe92:  mov    %ebx,%edx
0x07fafe94:  call   0xea50b

----------------
IN: 
0x07fafe99:  mov    %eax,%edi
0x07fafe9b:  test   %edi,%edi
0x07fafe9d:  js     0x7faffaa

----------------
IN: 
0x07fafea3:  mov    $0x20,%eax
0x07fafea8:  call   0x7fae09f

----------------
IN: 
0x07fafead:  mov    %eax,%esi
0x07fafeaf:  test   %eax,%eax
0x07fafeb1:  jne    0x7fafecc

----------------
IN: 
0x07fafecc:  mov    $0x20,%ecx
0x07fafed1:  xor    %edx,%edx
0x07fafed3:  call   0xeab7b

----------------
IN: 
0x07fafed8:  lea    0x4(%eax),%eax
0x07fafedb:  mov    %eax,0xc(%esp)
0x07fafedf:  mov    0x4(%esp),%edx
0x07fafee3:  call   0x7fab66f

----------------
IN: 
0x07fafee8:  incl   0x8(%esp)
0x07fafeec:  mov    0x14(%esp,%ebx,4),%edx
0x07fafef0:  test   %edx,%edx
0x07fafef2:  jne    0x7faff0a

----------------
IN: 
0x07fafef4:  cmp    %ebx,(%esp)
0x07fafef7:  je     0x7fafefa

----------------
IN: 
0x07fafefa:  cmp    %ebx,0xf5d0c
0x07faff00:  jge    0x7faff10

----------------
IN: 
0x07faff10:  mov    %ebp,%eax
0x07faff12:  mov    %ebx,(%esp)
0x07faff15:  mov    %di,(%esi)
0x07faff18:  mov    %edx,0xc(%esi)
0x07faff1b:  mov    %al,0x2(%esi)
0x07faff1e:  movzwl %di,%eax
0x07faff21:  mov    %eax,0x4(%esp)
0x07faff25:  xor    %edx,%edx
0x07faff27:  call   0xea337

----------------
IN: 
0x000ea337:  mov    0xf54d8,%ecx
0x000ea33d:  test   %ecx,%ecx
0x000ea33f:  movzwl %ax,%eax
0x000ea342:  je     0xea34e

----------------
IN: 
0x000ea34e:  shl    $0x8,%eax
0x000ea351:  and    $0xfc,%edx
0x000ea357:  or     %edx,%eax
0x000ea359:  or     $0x80000000,%eax
0x000ea35e:  mov    $0xcf8,%edx
0x000ea363:  out    %eax,(%dx)
0x000ea364:  mov    $0xcfc,%edx
0x000ea369:  in     (%dx),%eax
0x000ea36a:  ret    

----------------
IN: 
0x07faff2c:  mov    %eax,0x10(%esi)
0x07faff2f:  mov    $0x8,%edx
0x07faff34:  movzwl %di,%eax
0x07faff37:  call   0xea337

----------------
IN: 
0x07faff3c:  mov    %eax,%edx
0x07faff3e:  shr    $0x10,%edx
0x07faff41:  mov    %dx,0x14(%esi)
0x07faff45:  xchg   %ah,%al
0x07faff47:  mov    %ax,0x16(%esi)
0x07faff4b:  mov    $0xe,%edx
0x07faff50:  movzwl %di,%eax
0x07faff53:  call   0xea4cf

----------------
IN: 
0x07faff58:  mov    %al,0x18(%esi)
0x07faff5b:  and    $0x7f,%eax
0x07faff5e:  dec    %eax
0x07faff5f:  cmp    $0x1,%al
0x07faff61:  ja     0x7faff92

----------------
IN: 
0x07faff92:  mov    %ebx,%edx
0x07faff94:  mov    %edi,%eax
0x07faff96:  call   0xea50b

----------------
IN: 
0x07faff9b:  mov    %eax,%edi
0x07faff9d:  mov    0xc(%esp),%eax
0x07faffa1:  mov    %eax,0x4(%esp)
0x07faffa5:  jmp    0x7fafe9b

----------------
IN: 
0x07fafe9b:  test   %edi,%edi
0x07fafe9d:  js     0x7faffaa

----------------
IN: 
0x07faffaa:  cmp    $0xff,%ebx
0x07faffb0:  jne    0x7fafe7f

----------------
IN: 
0x07fafe7f:  cmp    %ebx,0xf5d0c
0x07fafe85:  jle    0x7faffb8

----------------
IN: 
0x07faffb8:  cmp    %ebp,0x10(%esp)
0x07faffbc:  jg     0x7fafe8b

----------------
IN: 
0x07faffc2:  pushl  0xf5d0c
0x07faffc8:  pushl  0xc(%esp)
0x07faffcc:  push   $0xf0b59
0x07faffd1:  call   0xec4d8

----------------
IN: 
0x07faffd6:  add    $0x420,%esp
0x07faffdc:  pop    %ebx
0x07faffdd:  pop    %esi
0x07faffde:  pop    %edi
0x07faffdf:  pop    %ebp
0x07faffe0:  ret    

----------------
IN: 
0x07fb0039:  mov    0x7fbff18,%eax
0x07fb003e:  mov    %eax,0x7fbfdc0
0x07fb0043:  movl   $0x0,0x7fbfdc4
0x07fb004d:  mov    0x7fbfde8,%eax
0x07fb0052:  lea    -0x4(%eax),%ebx
0x07fb0055:  pop    %edi
0x07fb0056:  jmp    0x7fb007d

----------------
IN: 
0x07fb007d:  cmp    $0xfffffffc,%ebx
0x07fb0080:  je     0x7fb0098

----------------
IN: 
0x07fb0082:  xor    %ecx,%ecx
0x07fb0084:  mov    %ebx,%edx
0x07fb0086:  mov    $0x7fbf900,%eax
0x07fb008b:  call   0x7fabc0c

----------------
IN: 
0x07fabc0c:  push   %esi
0x07fabc0d:  push   %ebx
0x07fabc0e:  mov    %edx,%ebx
0x07fabc10:  mov    (%eax),%edx
0x07fabc12:  test   %edx,%edx
0x07fabc14:  je     0x7fabc57

----------------
IN: 
0x07fabc16:  cmp    $0xffffffff,%edx
0x07fabc19:  je     0x7fabc23

----------------
IN: 
0x07fabc1b:  movzwl 0x10(%ebx),%esi
0x07fabc1f:  cmp    %edx,%esi
0x07fabc21:  jne    0x7fabc52

----------------
IN: 
0x07fabc23:  mov    0x4(%eax),%edx
0x07fabc26:  cmp    $0xffffffff,%edx
0x07fabc29:  je     0x7fabc33

----------------
IN: 
0x07fabc2b:  movzwl 0x12(%ebx),%esi
0x07fabc2f:  cmp    %esi,%edx
0x07fabc31:  jne    0x7fabc52

----------------
IN: 
0x07fabc33:  movzwl 0x14(%ebx),%edx
0x07fabc37:  xor    0x8(%eax),%edx
0x07fabc3a:  and    0xc(%eax),%edx
0x07fabc3d:  jne    0x7fabc52

----------------
IN: 
0x07fabc3f:  mov    0x10(%eax),%esi
0x07fabc42:  xor    %eax,%eax
0x07fabc44:  test   %esi,%esi
0x07fabc46:  je     0x7fabc60

----------------
IN: 
0x07fabc48:  mov    %ecx,%edx
0x07fabc4a:  mov    %ebx,%eax
0x07fabc4c:  call   *%esi

----------------
IN: 
0x07fabd78:  mov    0x7fbff18,%eax
0x07fabd7d:  cmp    $0x80000000,%eax
0x07fabd82:  ja     0x7fabd90

----------------
IN: 
0x07fabd84:  movl   $0x80000000,0x7fbfdc0
0x07fabd8e:  jmp    0x7fabda1

----------------
IN: 
0x07fabda1:  movl   $0x0,0x7fbfdc4
0x07fabdab:  movl   $0x7fabd12,0x7fbfda4
0x07fabdb5:  ret    

----------------
IN: 
0x07fabc4e:  xor    %eax,%eax
0x07fabc50:  jmp    0x7fabc60

----------------
IN: 
0x07fabc60:  pop    %ebx
0x07fabc61:  pop    %esi
0x07fabc62:  ret    

----------------
IN: 
0x07fb0090:  mov    0x4(%ebx),%ebx
0x07fb0093:  sub    $0x4,%ebx
0x07fb0096:  jmp    0x7fb007d

----------------
IN: 
0x07fabc52:  add    $0x14,%eax
0x07fabc55:  jmp    0x7fabc10

----------------
IN: 
0x07fabc10:  mov    (%eax),%edx
0x07fabc12:  test   %edx,%edx
0x07fabc14:  je     0x7fabc57

----------------
IN: 
0x07fabc57:  cmpl   $0x0,0xc(%eax)
0x07fabc5b:  jne    0x7fabc1b

----------------
IN: 
0x07fabc5d:  or     $0xffffffff,%eax
0x07fabc60:  pop    %ebx
0x07fabc61:  pop    %esi
0x07fabc62:  ret    

----------------
IN: 
0x07fb0098:  push   $0xf0bd9
0x07fb009d:  call   0xec4d8

----------------
IN: 
0x07fb00a2:  mov    0xf5d0c,%eax
0x07fb00a7:  inc    %eax
0x07fb00a8:  imul   $0x28,%eax,%eax
0x07fb00ab:  call   0x7fae09f

----------------
IN: 
0x07fb00b0:  mov    %eax,0xc(%esp)
0x07fb00b4:  pop    %esi
0x07fb00b5:  test   %eax,%eax
0x07fb00b7:  jne    0x7fb00cf

----------------
IN: 
0x07fb00cf:  mov    0xf5d0c,%eax
0x07fb00d4:  lea    0x1(%eax),%ecx
0x07fb00d7:  imul   $0x28,%ecx,%ecx
0x07fb00da:  xor    %edx,%edx
0x07fb00dc:  mov    0x8(%esp),%eax
0x07fb00e0:  call   0xeab7b

----------------
IN: 
0x07fb00e5:  push   $0xf0bfd
0x07fb00ea:  call   0xec4d8

----------------
IN: 
0x07fb00ef:  mov    0x7fbfde8,%eax
0x07fb00f4:  lea    -0x4(%eax),%ebp
0x07fb00f7:  pop    %ebx
0x07fb00f8:  cmp    $0xfffffffc,%ebp
0x07fb00fb:  je     0x7fb032b

----------------
IN: 
0x07fb0101:  cmpw   $0x604,0x14(%ebp)
0x07fb0107:  jne    0x7fb0118

----------------
IN: 
0x07fb0118:  movzbl 0x1(%ebp),%eax
0x07fb011c:  imul   $0x28,%eax,%eax
0x07fb011f:  add    0x8(%esp),%eax
0x07fb0123:  mov    %eax,0x30(%esp)
0x07fb0127:  cmpl   $0x0,0x24(%eax)
0x07fb012b:  jne    0x7fb0135

----------------
IN: 
0x07fb012d:  mov    0x8(%esp),%eax
0x07fb0131:  mov    %eax,0x30(%esp)
0x07fb0135:  movl   $0x0,0x14(%esp)
0x07fb013d:  cmpw   $0x604,0x14(%ebp)
0x07fb0143:  jne    0x7fb0155

----------------
IN: 
0x07fb0155:  cmpl   $0x6,0x14(%esp)
0x07fb015a:  je     0x7fb0169

----------------
IN: 
0x07fb015c:  mov    0x14(%esp),%eax
0x07fb0160:  lea    0x10(,%eax,4),%ebx
0x07fb0167:  jmp    0x7fb017d

----------------
IN: 
0x07fb017d:  movzwl 0x0(%ebp),%eax
0x07fb0181:  mov    %eax,0xc(%esp)
0x07fb0185:  mov    %ebx,%edx
0x07fb0187:  call   0xea337

----------------
IN: 
0x07fb018c:  mov    %eax,0x28(%esp)
0x07fb0190:  cmpl   $0x6,0x14(%esp)
0x07fb0195:  jne    0x7fb01c1

----------------
IN: 
0x07fb01c1:  testb  $0x1,0x28(%esp)
0x07fb01c6:  jne    0x7fb01fb

----------------
IN: 
0x07fb01c8:  mov    0x28(%esp),%eax
0x07fb01cc:  and    $0x8,%eax
0x07fb01cf:  cmp    $0x1,%eax
0x07fb01d2:  sbb    %eax,%eax
0x07fb01d4:  mov    %eax,0x24(%esp)
0x07fb01d8:  addl   $0x2,0x24(%esp)
0x07fb01dd:  mov    0x28(%esp),%eax
0x07fb01e1:  and    $0x6,%eax
0x07fb01e4:  cmp    $0x4,%eax
0x07fb01e7:  sete   %al
0x07fb01ea:  movzbl %al,%eax
0x07fb01ed:  mov    %eax,0x1c(%esp)
0x07fb01f1:  movl   $0xfffffff0,0x2c(%esp)
0x07fb01f9:  jmp    0x7fb0213

----------------
IN: 
0x07fb0213:  or     $0xffffffff,%ecx
0x07fb0216:  mov    %ebx,%edx
0x07fb0218:  mov    0xc(%esp),%eax
0x07fb021c:  call   0xea07a

----------------
IN: 
0x000ea07a:  push   %esi
0x000ea07b:  push   %ebx
0x000ea07c:  mov    %edx,%ebx
0x000ea07e:  mov    0xf54d8,%esi
0x000ea084:  test   %esi,%esi
0x000ea086:  movzwl %ax,%edx
0x000ea089:  je     0xea096

----------------
IN: 
0x000ea096:  mov    %edx,%eax
0x000ea098:  shl    $0x8,%eax
0x000ea09b:  and    $0xfc,%ebx
0x000ea0a1:  or     %ebx,%eax
0x000ea0a3:  or     $0x80000000,%eax
0x000ea0a8:  mov    $0xcf8,%edx
0x000ea0ad:  out    %eax,(%dx)
0x000ea0ae:  mov    $0xcfc,%edx
0x000ea0b3:  mov    %ecx,%eax
0x000ea0b5:  out    %eax,(%dx)
0x000ea0b6:  pop    %ebx
0x000ea0b7:  pop    %esi
0x000ea0b8:  ret    

----------------
IN: 
0x07fb0221:  mov    %ebx,%edx
0x07fb0223:  mov    0xc(%esp),%eax
0x07fb0227:  call   0xea337

----------------
IN: 
0x07fb022c:  mov    %eax,0x34(%esp)
0x07fb0230:  mov    %eax,0x40(%esp)
0x07fb0234:  movl   $0x0,0x44(%esp)
0x07fb023c:  mov    0x28(%esp),%ecx
0x07fb0240:  mov    %ebx,%edx
0x07fb0242:  mov    0xc(%esp),%eax
0x07fb0246:  call   0xea07a

----------------
IN: 
0x07fb024b:  cmpl   $0x0,0x1c(%esp)
0x07fb0250:  je     0x7fb02af

----------------
IN: 
0x07fb02af:  mov    0x34(%esp),%eax
0x07fb02b3:  and    0x2c(%esp),%eax
0x07fb02b7:  neg    %eax
0x07fb02b9:  mov    %eax,%esi
0x07fb02bb:  xor    %edi,%edi
0x07fb02bd:  mov    %edi,%eax
0x07fb02bf:  or     %esi,%eax
0x07fb02c1:  je     0x7fb0311

----------------
IN: 
0x07fb0311:  incl   0x14(%esp)
0x07fb0315:  cmpl   $0x6,0x14(%esp)
0x07fb031a:  jle    0x7fb013d

----------------
IN: 
0x07fb013d:  cmpw   $0x604,0x14(%ebp)
0x07fb0143:  jne    0x7fb0155

----------------
IN: 
0x07fb0169:  mov    0x18(%ebp),%al
0x07fb016c:  and    $0x7f,%eax
0x07fb016f:  xor    %ebx,%ebx
0x07fb0171:  dec    %al
0x07fb0173:  sete   %bl
0x07fb0176:  lea    0x30(,%ebx,8),%ebx
0x07fb017d:  movzwl 0x0(%ebp),%eax
0x07fb0181:  mov    %eax,0xc(%esp)
0x07fb0185:  mov    %ebx,%edx
0x07fb0187:  call   0xea337

----------------
IN: 
0x07fb0197:  mov    $0xfffff800,%ecx
0x07fb019c:  mov    %ebx,%edx
0x07fb019e:  mov    0xc(%esp),%eax
0x07fb01a2:  call   0xea07a

----------------
IN: 
0x07fb01a7:  movl   $0xfffff800,0x2c(%esp)
0x07fb01af:  movl   $0x1,0x24(%esp)
0x07fb01b7:  movl   $0x0,0x1c(%esp)
0x07fb01bf:  jmp    0x7fb0221

----------------
IN: 
0x07fb0320:  mov    0x4(%ebp),%eax
0x07fb0323:  lea    -0x4(%eax),%ebp
0x07fb0326:  jmp    0x7fb00f8

----------------
IN: 
0x07fb00f8:  cmp    $0xfffffffc,%ebp
0x07fb00fb:  je     0x7fb032b

----------------
IN: 
0x07fb01fb:  movl   $0xfffffffc,0x2c(%esp)
0x07fb0203:  movl   $0x0,0x24(%esp)
0x07fb020b:  movl   $0x0,0x1c(%esp)
0x07fb0213:  or     $0xffffffff,%ecx
0x07fb0216:  mov    %ebx,%edx
0x07fb0218:  mov    0xc(%esp),%eax
0x07fb021c:  call   0xea07a

----------------
IN: 
0x07fb02c3:  mov    $0xfff,%eax
0x07fb02c8:  cmp    %esi,%eax
0x07fb02ca:  mov    $0x0,%eax
0x07fb02cf:  sbb    %edi,%eax
0x07fb02d1:  jb     0x7fb02e1

----------------
IN: 
0x07fb02d3:  cmpl   $0x0,0x24(%esp)
0x07fb02d8:  je     0x7fb02e1

----------------
IN: 
0x07fb02e1:  pushl  0x1c(%esp)
0x07fb02e5:  pushl  0x28(%esp)
0x07fb02e9:  push   %edi
0x07fb02ea:  push   %esi
0x07fb02eb:  push   %edi
0x07fb02ec:  push   %esi
0x07fb02ed:  mov    0x2c(%esp),%ecx
0x07fb02f1:  mov    %ebp,%edx
0x07fb02f3:  mov    0x48(%esp),%eax
0x07fb02f7:  call   0x7fae37e

----------------
IN: 
0x07fae37e:  push   %ebp
0x07fae37f:  push   %edi
0x07fae380:  push   %esi
0x07fae381:  push   %ebx
0x07fae382:  sub    $0x10,%esp
0x07fae385:  mov    %eax,%esi
0x07fae387:  mov    %edx,0xc(%esp)
0x07fae38b:  mov    %ecx,%edi
0x07fae38d:  mov    0x24(%esp),%eax
0x07fae391:  mov    %eax,0x4(%esp)
0x07fae395:  mov    0x28(%esp),%eax
0x07fae399:  mov    %eax,0x8(%esp)
0x07fae39d:  mov    0x2c(%esp),%eax
0x07fae3a1:  mov    %eax,(%esp)
0x07fae3a4:  mov    0x30(%esp),%ebp
0x07fae3a8:  mov    $0x28,%eax
0x07fae3ad:  call   0x7fae09f

----------------
IN: 
0x07fae3b2:  mov    %eax,%ebx
0x07fae3b4:  test   %eax,%eax
0x07fae3b6:  jne    0x7fae3c9

----------------
IN: 
0x07fae3c9:  mov    $0x28,%ecx
0x07fae3ce:  xor    %edx,%edx
0x07fae3d0:  call   0xeab7b

----------------
IN: 
0x07fae3d5:  mov    0xc(%esp),%eax
0x07fae3d9:  mov    %eax,(%ebx)
0x07fae3db:  mov    %edi,0x4(%ebx)
0x07fae3de:  mov    0x4(%esp),%eax
0x07fae3e2:  mov    %eax,0x8(%ebx)
0x07fae3e5:  mov    0x8(%esp),%eax
0x07fae3e9:  mov    %eax,0xc(%ebx)
0x07fae3ec:  mov    (%esp),%eax
0x07fae3ef:  mov    %eax,0x10(%ebx)
0x07fae3f2:  mov    %ebp,0x14(%ebx)
0x07fae3f5:  mov    0x38(%esp),%eax
0x07fae3f9:  mov    %eax,0x18(%ebx)
0x07fae3fc:  mov    0x34(%esp),%eax
0x07fae400:  mov    %eax,0x1c(%ebx)
0x07fae403:  imul   $0xc,%eax,%eax
0x07fae406:  lea    0x8(%esi,%eax,1),%edx
0x07fae40a:  mov    0x8(%esi,%eax,1),%eax
0x07fae40e:  test   %eax,%eax
0x07fae410:  je     0x7fae440

----------------
IN: 
0x07fae440:  lea    0x20(%ebx),%eax
0x07fae443:  call   0x7fab66f

----------------
IN: 
0x07fae448:  mov    %ebx,%eax
0x07fae44a:  add    $0x10,%esp
0x07fae44d:  pop    %ebx
0x07fae44e:  pop    %esi
0x07fae44f:  pop    %edi
0x07fae450:  pop    %ebp
0x07fae451:  ret    

----------------
IN: 
0x07fb02fc:  add    $0x18,%esp
0x07fb02ff:  test   %eax,%eax
0x07fb0301:  je     0x7fb0af4

----------------
IN: 
0x07fb0307:  cmpl   $0x1,0x1c(%esp)
0x07fb030c:  sbbl   $0xffffffff,0x14(%esp)
0x07fb0311:  incl   0x14(%esp)
0x07fb0315:  cmpl   $0x6,0x14(%esp)
0x07fb031a:  jle    0x7fb013d

----------------
IN: 
0x07fae412:  mov    -0x10(%eax),%esi
0x07fae415:  mov    -0xc(%eax),%ecx
0x07fae418:  cmp    (%esp),%esi
0x07fae41b:  mov    %ecx,%edi
0x07fae41d:  sbb    %ebp,%edi
0x07fae41f:  jb     0x7fae440

----------------
IN: 
0x07fb032b:  mov    0xf5d0c,%eax
0x07fb0330:  mov    %eax,0x24(%esp)
0x07fb0334:  imul   $0x28,%eax,%eax
0x07fb0337:  mov    0x8(%esp),%edi
0x07fb033b:  lea    (%edi,%eax,1),%ebp
0x07fb033e:  cmpl   $0x0,0x24(%esp)
0x07fb0343:  jle    0x7fb0737

----------------
IN: 
0x07fb0737:  push   $0xf0df4
0x07fb073c:  call   0xec4d8

----------------
IN: 
0x07fb0741:  mov    0xc(%esp),%eax
0x07fb0745:  call   0x7fabdd1

----------------
IN: 
0x07fabdd1:  push   %ebp
0x07fabdd2:  mov    %esp,%ebp
0x07fabdd4:  push   %ebx
0x07fabdd5:  mov    0x8(%eax),%edx
0x07fabdd8:  sub    $0x20,%edx
0x07fabddb:  xor    %ecx,%ecx
0x07fabddd:  xor    %ebx,%ebx
0x07fabddf:  cmp    $0xffffffe0,%edx
0x07fabde2:  je     0x7fabdf2

----------------
IN: 
0x07fabde4:  add    0x8(%edx),%ecx
0x07fabde7:  adc    0xc(%edx),%ebx
0x07fabdea:  mov    0x20(%edx),%edx
0x07fabded:  sub    $0x20,%edx
0x07fabdf0:  jmp    0x7fabddf

----------------
IN: 
0x07fabddf:  cmp    $0xffffffe0,%edx
0x07fabde2:  je     0x7fabdf2

----------------
IN: 
0x07fabdf2:  mov    %ecx,%eax
0x07fabdf4:  mov    %ebx,%edx
0x07fabdf6:  pop    %ebx
0x07fabdf7:  pop    %ebp
0x07fabdf8:  ret    

----------------
IN: 
0x07fb074a:  pop    %ecx
0x07fb074b:  mov    $0x3fff,%ecx
0x07fb0750:  cmp    %eax,%ecx
0x07fb0752:  mov    $0x0,%ecx
0x07fb0757:  sbb    %edx,%ecx
0x07fb0759:  jae    0x7fb077f

----------------
IN: 
0x07fb077f:  mov    $0xc000,%ecx
0x07fb0784:  xor    %ebx,%ebx
0x07fb0786:  mov    0x8(%esp),%edi
0x07fb078a:  mov    %ecx,(%edi)
0x07fb078c:  mov    %ebx,0x4(%edi)
0x07fb078f:  mov    %ecx,%esi
0x07fb0791:  mov    %ebx,%edi
0x07fb0793:  add    $0xffffffff,%esi
0x07fb0796:  adc    $0xffffffff,%edi
0x07fb0799:  add    %eax,%esi
0x07fb079b:  adc    %edx,%edi
0x07fb079d:  push   %edi
0x07fb079e:  push   %esi
0x07fb079f:  push   %ebx
0x07fb07a0:  push   %ecx
0x07fb07a1:  push   $0xf0ca7
0x07fb07a6:  call   0xec4d8

----------------
IN: 
0x07fb07ab:  push   $0x0
0x07fb07ad:  push   $0xfec00000
0x07fb07b2:  pushl  0x7fbfdc4
0x07fb07b8:  pushl  0x7fbfdc0
0x07fb07be:  push   $0xf0cbf
0x07fb07c3:  call   0xec4d8

----------------
IN: 
0x07fb07c8:  add    $0x28,%esp
0x07fb07cb:  mov    0x8(%esp),%eax
0x07fb07cf:  call   0x7fabe43

----------------
IN: 
0x07fabe43:  push   %ebp
0x07fabe44:  push   %edi
0x07fabe45:  push   %esi
0x07fabe46:  push   %ebx
0x07fabe47:  sub    $0x10,%esp
0x07fabe4a:  lea    0x18(%eax),%ebx
0x07fabe4d:  lea    0xc(%eax),%ebp
0x07fabe50:  mov    %ebp,%eax
0x07fabe52:  call   0x7fabdb6

----------------
IN: 
0x07fabdb6:  push   %ebp
0x07fabdb7:  mov    %esp,%ebp
0x07fabdb9:  mov    0x8(%eax),%eax
0x07fabdbc:  test   %eax,%eax
0x07fabdbe:  je     0x7fabdc8

----------------
IN: 
0x07fabdc0:  mov    -0xc(%eax),%edx
0x07fabdc3:  mov    -0x10(%eax),%eax
0x07fabdc6:  jmp    0x7fabdcf

----------------
IN: 
0x07fabdcf:  pop    %ebp
0x07fabdd0:  ret    

----------------
IN: 
0x07fabe57:  mov    %eax,%esi
0x07fabe59:  mov    %edx,%ecx
0x07fabe5b:  mov    %ebx,%eax
0x07fabe5d:  call   0x7fabdb6

----------------
IN: 
0x07fabe62:  cmp    %eax,%esi
0x07fabe64:  sbb    %edx,%ecx
0x07fabe66:  jae    0x7fabe6a

----------------
IN: 
0x07fabe68:  xchg   %ebp,%ebx
0x07fabe6a:  mov    %ebx,%eax
0x07fabe6c:  call   0x7fabdd1

----------------
IN: 
0x07fabe71:  mov    %eax,%esi
0x07fabe73:  mov    %edx,%edi
0x07fabe75:  mov    %ebx,%eax
0x07fabe77:  call   0x7fabdb6

----------------
IN: 
0x07fabe7c:  mov    %eax,0x8(%esp)
0x07fabe80:  mov    %edx,0xc(%esp)
0x07fabe84:  mov    $0xfec00000,%eax
0x07fabe89:  xor    %edx,%edx
0x07fabe8b:  sub    %esi,%eax
0x07fabe8d:  sbb    %edi,%edx
0x07fabe8f:  mov    %eax,(%esp)
0x07fabe92:  mov    %edx,0x4(%esp)
0x07fabe96:  mov    0x8(%esp),%eax
0x07fabe9a:  mov    0xc(%esp),%edx
0x07fabe9e:  neg    %eax
0x07fabea0:  adc    $0x0,%edx
0x07fabea3:  neg    %edx
0x07fabea5:  mov    (%esp),%ecx
0x07fabea8:  and    %eax,%ecx
0x07fabeaa:  mov    %ecx,%esi
0x07fabeac:  mov    0x4(%esp),%ecx
0x07fabeb0:  and    %edx,%ecx
0x07fabeb2:  mov    %ecx,%edi
0x07fabeb4:  mov    %esi,(%ebx)
0x07fabeb6:  mov    %ecx,0x4(%ebx)
0x07fabeb9:  mov    %ebp,%eax
0x07fabebb:  call   0x7fabdd1

----------------
IN: 
0x07fabec0:  mov    %eax,%ecx
0x07fabec2:  mov    %edx,%ebx
0x07fabec4:  mov    %ebp,%eax
0x07fabec6:  call   0x7fabdb6

----------------
IN: 
0x07fabecb:  sub    %ecx,%esi
0x07fabecd:  sbb    %ebx,%edi
0x07fabecf:  neg    %eax
0x07fabed1:  adc    $0x0,%edx
0x07fabed4:  neg    %edx
0x07fabed6:  mov    %esi,%ecx
0x07fabed8:  and    %eax,%ecx
0x07fabeda:  and    %edi,%edx
0x07fabedc:  mov    %ecx,0x0(%ebp)
0x07fabedf:  mov    %edx,0x4(%ebp)
0x07fabee2:  cmp    0x7fbfdc0,%ecx
0x07fabee8:  mov    %edx,%eax
0x07fabeea:  sbb    0x7fbfdc4,%eax
0x07fabef0:  setb   %al
0x07fabef3:  mov    $0xfec00000,%ebx
0x07fabef8:  cmp    %ecx,%ebx
0x07fabefa:  mov    $0x0,%ecx
0x07fabeff:  sbb    %edx,%ecx
0x07fabf01:  setb   %dl
0x07fabf04:  or     %edx,%eax
0x07fabf06:  movzbl %al,%eax
0x07fabf09:  neg    %eax
0x07fabf0b:  add    $0x10,%esp
0x07fabf0e:  pop    %ebx
0x07fabf0f:  pop    %esi
0x07fabf10:  pop    %edi
0x07fabf11:  pop    %ebp
0x07fabf12:  ret    

----------------
IN: 
0x07fb07d4:  test   %eax,%eax
0x07fb07d6:  je     0x7fb099a

----------------
IN: 
0x07fb099a:  movl   $0x0,0x7fbfdb8
0x07fb09a4:  movl   $0x0,0x7fbfdbc
0x07fb09ae:  mov    0x8(%esp),%ebx
0x07fb09b2:  xor    %esi,%esi
0x07fb09b4:  cmp    0xf5d0c,%esi
0x07fb09ba:  jg     0x7fb06eb

----------------
IN: 
0x07fb09c0:  mov    %ebx,%edx
0x07fb09c2:  mov    0x8(%esp),%eax
0x07fb09c6:  call   0x7faf850

----------------
IN: 
0x07faf850:  push   %ebp
0x07faf851:  push   %edi
0x07faf852:  push   %esi
0x07faf853:  push   %ebx
0x07faf854:  sub    $0x20,%esp
0x07faf857:  mov    %eax,0x1c(%esp)
0x07faf85b:  mov    %edx,%ebp
0x07faf85d:  mov    0x8(%edx),%eax
0x07faf860:  lea    -0x20(%eax),%ebx
0x07faf863:  cmp    $0xffffffe0,%ebx
0x07faf866:  je     0x7fafa53

----------------
IN: 
0x07faf86c:  mov    0x20(%ebx),%eax
0x07faf86f:  mov    %eax,0x18(%esp)
0x07faf873:  mov    0x0(%ebp),%esi
0x07faf876:  mov    0x4(%ebp),%edi
0x07faf879:  mov    0x8(%ebx),%eax
0x07faf87c:  mov    0xc(%ebx),%edx
0x07faf87f:  mov    %eax,(%esp)
0x07faf882:  mov    %edx,0x4(%esp)
0x07faf886:  add    %esi,%eax
0x07faf888:  adc    %edi,%edx
0x07faf88a:  mov    %eax,0x10(%esp)
0x07faf88e:  mov    %edx,0x14(%esp)
0x07faf892:  mov    %eax,0x0(%ebp)
0x07faf895:  mov    %edx,0x4(%ebp)
0x07faf898:  mov    0x4(%ebx),%ecx
0x07faf89b:  mov    0x1c(%ebx),%eax
0x07faf89e:  mov    %eax,0x8(%esp)
0x07faf8a2:  mov    (%ebx),%eax
0x07faf8a4:  cmp    $0xffffffff,%ecx
0x07faf8a7:  jne    0x7faf8c4

----------------
IN: 
0x07faf8c4:  test   %ecx,%ecx
0x07faf8c6:  js     0x7faf903

----------------
IN: 
0x07faf8c8:  mov    0x8(%esp),%edx
0x07faf8cc:  pushl  0x7fbfa5c(,%edx,4)
0x07faf8d3:  pushl  0x8(%esp)
0x07faf8d7:  pushl  0x8(%esp)
0x07faf8db:  push   %edi
0x07faf8dc:  push   %esi
0x07faf8dd:  push   %ecx
0x07faf8de:  push   %eax
0x07faf8df:  push   $0xf09c4
0x07faf8e4:  call   0xec4d8

----------------
IN: 
0x000ebe36:  inc    %esi
0x000ebe37:  movzbl 0x1(%ebp),%edx
0x000ebe3b:  push   $0x0
0x000ebe3d:  mov    $0x2,%ecx
0x000ebe42:  mov    %ebx,%eax
0x000ebe44:  call   0xe9872

----------------
IN: 
0x000ebe49:  mov    $0x3a,%edx
0x000ebe4e:  mov    %ebx,%eax
0x000ebe50:  call   0xe9803

----------------
IN: 
0x000ebe55:  mov    0x0(%ebp),%dl
0x000ebe58:  shr    $0x3,%dl
0x000ebe5b:  movzbl %dl,%edx
0x000ebe5e:  push   $0x0
0x000ebe60:  mov    $0x2,%ecx
0x000ebe65:  mov    %ebx,%eax
0x000ebe67:  call   0xe9872

----------------
IN: 
0x000ebe6c:  mov    $0x2e,%edx
0x000ebe71:  mov    %ebx,%eax
0x000ebe73:  call   0xe9803

----------------
IN: 
0x000ebe78:  mov    0x0(%ebp),%edx
0x000ebe7b:  and    $0x7,%edx
0x000ebe7e:  xor    %ecx,%ecx
0x000ebe80:  mov    %ebx,%eax
0x000ebe82:  call   0xe9856

----------------
IN: 
0x000ebe87:  pop    %eax
0x000ebe88:  pop    %edx
0x000ebe89:  jmp    0xebf70

----------------
IN: 
0x07faf8e9:  add    $0x20,%esp
0x07faf8ec:  mov    0x4(%ebx),%edx
0x07faf8ef:  pushl  0x18(%ebx)
0x07faf8f2:  push   %edi
0x07faf8f3:  push   %esi
0x07faf8f4:  mov    (%ebx),%eax
0x07faf8f6:  call   0x7fad084

----------------
IN: 
0x07fad084:  push   %ebp
0x07fad085:  push   %edi
0x07fad086:  push   %esi
0x07fad087:  push   %ebx
0x07fad088:  mov    %eax,%esi
0x07fad08a:  mov    0x14(%esp),%ecx
0x07fad08e:  mov    0x18(%esp),%edi
0x07fad092:  mov    0x1c(%esp),%ebp
0x07fad096:  cmp    $0x6,%edx
0x07fad099:  je     0x7fad0a4

----------------
IN: 
0x07fad09b:  lea    0x10(,%edx,4),%ebx
0x07fad0a2:  jmp    0x7fad0b8

----------------
IN: 
0x07fad0b8:  movzwl (%esi),%eax
0x07fad0bb:  mov    %ebx,%edx
0x07fad0bd:  call   0xea07a

----------------
IN: 
0x07fad0c2:  test   %ebp,%ebp
0x07fad0c4:  je     0x7fad0d7

----------------
IN: 
0x07fad0d7:  pop    %ebx
0x07fad0d8:  pop    %esi
0x07fad0d9:  pop    %edi
0x07fad0da:  pop    %ebp
0x07fad0db:  ret    

----------------
IN: 
0x07faf8fb:  add    $0xc,%esp
0x07faf8fe:  jmp    0x7fafa38

----------------
IN: 
0x07fafa38:  lea    0x20(%ebx),%eax
0x07fafa3b:  call   0x7fab660

----------------
IN: 
0x07fab660:  mov    (%eax),%edx
0x07fab662:  mov    0x4(%eax),%eax
0x07fab665:  mov    %edx,(%eax)
0x07fab667:  test   %edx,%edx
0x07fab669:  je     0x7fab66e

----------------
IN: 
0x07fab66b:  mov    %eax,0x4(%edx)
0x07fab66e:  ret    

----------------
IN: 
0x07fafa40:  mov    %ebx,%eax
0x07fafa42:  call   0x7fadb56

----------------
IN: 
0x07fadb56:  test   %eax,%eax
0x07fadb58:  je     0x7fadb72

----------------
IN: 
0x07fadb5a:  call   0x7fab935

----------------
IN: 
0x07fab935:  push   %esi
0x07fab936:  push   %ebx
0x07fab937:  mov    %eax,%esi
0x07fab939:  call   0x7fab916

----------------
IN: 
0x07fab916:  mov    %eax,%ecx
0x07fab918:  xor    %edx,%edx
0x07fab91a:  mov    0x7fbfe64(,%edx,4),%eax
0x07fab921:  mov    (%eax),%eax
0x07fab923:  test   %eax,%eax
0x07fab925:  je     0x7fab92e

----------------
IN: 
0x07fab927:  cmp    %ecx,0x8(%eax)
0x07fab92a:  jne    0x7fab921

----------------
IN: 
0x07fab921:  mov    (%eax),%eax
0x07fab923:  test   %eax,%eax
0x07fab925:  je     0x7fab92e

----------------
IN: 
0x07fab92e:  inc    %edx
0x07fab92f:  cmp    $0x5,%edx
0x07fab932:  jne    0x7fab91a

----------------
IN: 
0x07fab91a:  mov    0x7fbfe64(,%edx,4),%eax
0x07fab921:  mov    (%eax),%eax
0x07fab923:  test   %eax,%eax
0x07fab925:  je     0x7fab92e

----------------
IN: 
0x07fab92c:  jmp    0x7fab934

----------------
IN: 
0x07fab934:  ret    

----------------
IN: 
0x07fab93e:  test   %eax,%eax
0x07fab940:  je     0x7fab964

----------------
IN: 
0x07fab942:  mov    %eax,%ebx
0x07fab944:  or     $0xffffffff,%eax
0x07fab947:  cmp    %esi,%ebx
0x07fab949:  je     0x7fab967

----------------
IN: 
0x07fab94b:  cmpl   $0x0,0x10(%ebx)
0x07fab94f:  je     0x7fab967

----------------
IN: 
0x07fab951:  mov    %ebx,%eax
0x07fab953:  call   0x7fab8fd

----------------
IN: 
0x07fab8fd:  mov    (%eax),%edx
0x07fab8ff:  test   %edx,%edx
0x07fab901:  je     0x7fab911

----------------
IN: 
0x07fab903:  mov    0x8(%eax),%ecx
0x07fab906:  cmp    %ecx,0xc(%edx)
0x07fab909:  jne    0x7fab911

----------------
IN: 
0x07fab90b:  mov    0xc(%eax),%ecx
0x07fab90e:  mov    %ecx,0xc(%edx)
0x07fab911:  jmp    0x7fab660

----------------
IN: 
0x07fab958:  lea    -0x14(%ebx),%eax
0x07fab95b:  call   0x7fab8fd

----------------
IN: 
0x07fab960:  xor    %eax,%eax
0x07fab962:  jmp    0x7fab967

----------------
IN: 
0x07fab967:  pop    %ebx
0x07fab968:  pop    %esi
0x07fab969:  ret    

----------------
IN: 
0x07fadb5f:  test   %eax,%eax
0x07fadb61:  je     0x7fadb72

----------------
IN: 
0x07fadb72:  ret    

----------------
IN: 
0x07fafa47:  mov    0x18(%esp),%ebx
0x07fafa4b:  sub    $0x20,%ebx
0x07fafa4e:  jmp    0x7faf863

----------------
IN: 
0x07faf863:  cmp    $0xffffffe0,%ebx
0x07faf866:  je     0x7fafa53

----------------
IN: 
0x07fab66e:  ret    

----------------
IN: 
0x07fafa53:  add    $0x20,%esp
0x07fafa56:  pop    %ebx
0x07fafa57:  pop    %esi
0x07fafa58:  pop    %edi
0x07fafa59:  pop    %ebp
0x07fafa5a:  ret    

----------------
IN: 
0x07fb09cb:  lea    0xc(%ebx),%edx
0x07fb09ce:  mov    0x8(%esp),%eax
0x07fb09d2:  call   0x7faf850

----------------
IN: 
0x07fad0a4:  mov    0x18(%eax),%al
0x07fad0a7:  and    $0x7f,%eax
0x07fad0aa:  xor    %ebx,%ebx
0x07fad0ac:  dec    %al
0x07fad0ae:  sete   %bl
0x07fad0b1:  lea    0x30(,%ebx,8),%ebx
0x07fad0b8:  movzwl (%esi),%eax
0x07fad0bb:  mov    %ebx,%edx
0x07fad0bd:  call   0xea07a

----------------
IN: 
0x07fb09d7:  lea    0x18(%ebx),%edx
0x07fb09da:  mov    0x8(%esp),%eax
0x07fb09de:  call   0x7faf850

----------------
IN: 
0x07fb09e3:  inc    %esi
0x07fb09e4:  add    $0x28,%ebx
0x07fb09e7:  jmp    0x7fb09b4

----------------
IN: 
0x07fb09b4:  cmp    0xf5d0c,%esi
0x07fb09ba:  jg     0x7fb06eb

----------------
IN: 
0x07fb06eb:  mov    0x7fbfde8,%eax
0x07fb06f0:  lea    -0x4(%eax),%ebx
0x07fb06f3:  cmp    $0xfffffffc,%ebx
0x07fb06f6:  jne    0x7fb09e9

----------------
IN: 
0x07fb09e9:  movzwl 0x12(%ebx),%eax
0x07fb09ed:  push   %eax
0x07fb09ee:  movzwl 0x10(%ebx),%eax
0x07fb09f2:  push   %eax
0x07fb09f3:  push   %ebx
0x07fb09f4:  push   $0xf0d4f
0x07fb09f9:  call   0xec4d8

----------------
IN: 
0x07fb09fe:  movzwl (%ebx),%esi
0x07fb0a01:  mov    $0x3d,%edx
0x07fb0a06:  mov    %esi,%eax
0x07fb0a08:  call   0xea4cf

----------------
IN: 
0x07fb0a0d:  movzbl %al,%edx
0x07fb0a10:  add    $0x10,%esp
0x07fb0a13:  test   %edx,%edx
0x07fb0a15:  je     0x7fb0a2e

----------------
IN: 
0x07fb0a2e:  xor    %ecx,%ecx
0x07fb0a30:  mov    %ebx,%edx
0x07fb0a32:  mov    $0x7fbf940,%eax
0x07fb0a37:  call   0x7fabc0c

----------------
IN: 
0x07fb0a3c:  mov    $0x103,%ecx
0x07fb0a41:  mov    $0x4,%edx
0x07fb0a46:  mov    %esi,%eax
0x07fb0a48:  call   0x7facf7a

----------------
IN: 
0x07facf7a:  push   %esi
0x07facf7b:  push   %ebx
0x07facf7c:  push   %ebx
0x07facf7d:  mov    %ecx,%esi
0x07facf7f:  movzwl %ax,%ebx
0x07facf82:  mov    %edx,(%esp)
0x07facf85:  mov    %ebx,%eax
0x07facf87:  call   0xea491

----------------
IN: 
0x07facf8c:  or     %esi,%eax
0x07facf8e:  movzwl %ax,%ecx
0x07facf91:  mov    (%esp),%edx
0x07facf94:  mov    %ebx,%eax
0x07facf96:  pop    %esi
0x07facf97:  pop    %ebx
0x07facf98:  pop    %esi
0x07facf99:  jmp    0xea0b9

----------------
IN: 
0x000ea0b9:  push   %esi
0x000ea0ba:  push   %ebx
0x000ea0bb:  mov    %edx,%ebx
0x000ea0bd:  mov    0xf54d8,%edx
0x000ea0c3:  test   %edx,%edx
0x000ea0c5:  movzwl %ax,%eax
0x000ea0c8:  je     0xea0d6

----------------
IN: 
0x000ea0d6:  shl    $0x8,%eax
0x000ea0d9:  mov    %ebx,%edx
0x000ea0db:  and    $0xfc,%edx
0x000ea0e1:  or     %edx,%eax
0x000ea0e3:  or     $0x80000000,%eax
0x000ea0e8:  mov    $0xcf8,%edx
0x000ea0ed:  out    %eax,(%dx)
0x000ea0ee:  and    $0x2,%ebx
0x000ea0f1:  lea    0xcfc(%ebx),%edx
0x000ea0f7:  mov    %ecx,%eax
0x000ea0f9:  out    %ax,(%dx)
0x000ea0fb:  pop    %ebx
0x000ea0fc:  pop    %esi
0x000ea0fd:  ret    

----------------
IN: 
0x07fb0a4d:  testb  $0x1,0x18(%ebx)
0x07fb0a51:  je     0x7fb0a64

----------------
IN: 
0x07fb0a64:  mov    0x4(%ebx),%ebx
0x07fb0a67:  sub    $0x4,%ebx
0x07fb0a6a:  jmp    0x7fb06f3

----------------
IN: 
0x07fb06f3:  cmp    $0xfffffffc,%ebx
0x07fb06f6:  jne    0x7fb09e9

----------------
IN: 
0x07fafa5b:  push   %ebp
0x07fafa5c:  push   %edi
0x07fafa5d:  push   %esi
0x07fafa5e:  push   %ebx
0x07fafa5f:  push   %edx
0x07fafa60:  mov    %eax,%esi
0x07fafa62:  movw   $0x0,0x2(%esp)
0x07fafa69:  mov    $0x60,%ebx
0x07fafa6e:  movzbl 0x7fbf9f8(%ebx),%ebp
0x07fafa75:  mov    %ebp,%ecx
0x07fafa77:  mov    %ebp,%edx
0x07fafa79:  sar    $0x3,%edx
0x07fafa7c:  and    $0x7,%ecx
0x07fafa7f:  mov    $0x1,%edi
0x07fafa84:  shl    %cl,%edi
0x07fafa86:  mov    %edi,%ecx
0x07fafa88:  or     %cl,0x2(%esp,%edx,1)
0x07fafa8c:  movzwl (%esi),%eax
0x07fafa8f:  mov    %ebp,%ecx
0x07fafa91:  mov    %ebx,%edx
0x07fafa93:  call   0xea0fe

----------------
IN: 
0x000ea0fe:  push   %esi
0x000ea0ff:  push   %ebx
0x000ea100:  mov    %edx,%ebx
0x000ea102:  mov    0xf54d8,%edx
0x000ea108:  test   %edx,%edx
0x000ea10a:  movzwl %ax,%eax
0x000ea10d:  je     0xea11a

----------------
IN: 
0x000ea11a:  shl    $0x8,%eax
0x000ea11d:  mov    %ebx,%edx
0x000ea11f:  and    $0xfc,%edx
0x000ea125:  or     %edx,%eax
0x000ea127:  or     $0x80000000,%eax
0x000ea12c:  mov    $0xcf8,%edx
0x000ea131:  out    %eax,(%dx)
0x000ea132:  and    $0x3,%ebx
0x000ea135:  lea    0xcfc(%ebx),%edx
0x000ea13b:  mov    %cl,%al
0x000ea13d:  out    %al,(%dx)
0x000ea13e:  pop    %ebx
0x000ea13f:  pop    %esi
0x000ea140:  ret    

----------------
IN: 
0x07fafa98:  inc    %ebx
0x07fafa99:  cmp    $0x64,%ebx
0x07fafa9c:  jne    0x7fafa6e

----------------
IN: 
0x07fafa6e:  movzbl 0x7fbf9f8(%ebx),%ebp
0x07fafa75:  mov    %ebp,%ecx
0x07fafa77:  mov    %ebp,%edx
0x07fafa79:  sar    $0x3,%edx
0x07fafa7c:  and    $0x7,%ecx
0x07fafa7f:  mov    $0x1,%edi
0x07fafa84:  shl    %cl,%edi
0x07fafa86:  mov    %edi,%ecx
0x07fafa88:  or     %cl,0x2(%esp,%edx,1)
0x07fafa8c:  movzwl (%esi),%eax
0x07fafa8f:  mov    %ebp,%ecx
0x07fafa91:  mov    %ebx,%edx
0x07fafa93:  call   0xea0fe

----------------
IN: 
0x07fafa9e:  mov    $0x4d0,%edx
0x07fafaa3:  mov    0x2(%esp),%al
0x07fafaa7:  out    %al,(%dx)
0x07fafaa8:  movzbl 0x3(%esp),%eax
0x07fafaad:  mov    $0x4d1,%edx
0x07fafab2:  out    %al,(%dx)
0x07fafab3:  push   %eax
0x07fafab4:  movzbl 0x6(%esp),%eax
0x07fafab9:  push   %eax
0x07fafaba:  push   $0xf0a04
0x07fafabf:  call   0xec4d8

----------------
IN: 
0x07fafac4:  add    $0x10,%esp
0x07fafac7:  pop    %ebx
0x07fafac8:  pop    %esi
0x07fafac9:  pop    %edi
0x07fafaca:  pop    %ebp
0x07fafacb:  ret    

----------------
IN: 
0x07fac262:  push   %edx
0x07fac263:  movzwl (%eax),%eax
0x07fac266:  mov    $0x8000,%ecx
0x07fac26b:  mov    $0x40,%edx
0x07fac270:  mov    %eax,(%esp)
0x07fac273:  call   0xea0b9

----------------
IN: 
0x07fac278:  mov    $0x42,%edx
0x07fac27d:  mov    (%esp),%eax
0x07fac280:  add    $0x4,%esp
0x07fac283:  jmp    0xea0b9

----------------
IN: 
0x07fb0a17:  mov    %ebx,%eax
0x07fb0a19:  call   *0x7fbfda4

----------------
IN: 
0x07fabd12:  push   %ebx
0x07fabd13:  xor    %ecx,%ecx
0x07fabd15:  mov    0xc(%eax),%ebx
0x07fabd18:  mov    (%eax),%eax
0x07fabd1a:  shr    $0x3,%al
0x07fabd1d:  movzbl %al,%eax
0x07fabd20:  test   %ebx,%ebx
0x07fabd22:  je     0x7fabd2a

----------------
IN: 
0x07fabd2a:  lea    -0x1(%ecx,%eax,1),%eax
0x07fabd2e:  lea    -0x1(%edx,%eax,1),%eax
0x07fabd32:  and    $0x3,%eax
0x07fabd35:  movzbl 0x7fbfa58(%eax),%eax
0x07fabd3c:  pop    %ebx
0x07fabd3d:  ret    

----------------
IN: 
0x07fb0a1f:  movzbl %al,%ecx
0x07fb0a22:  mov    $0x3c,%edx
0x07fb0a27:  mov    %esi,%eax
0x07fb0a29:  call   0xea0fe

----------------
IN: 
0x07faf21e:  movzwl (%eax),%eax
0x07faf221:  mov    %eax,0xf5150
0x07faf226:  call   0xea186

----------------
IN: 
0x000ea186:  push   %esi
0x000ea187:  push   %ebx
0x000ea188:  movzwl %ax,%esi
0x000ea18b:  mov    $0x9,%ecx
0x000ea190:  mov    $0x3c,%edx
0x000ea195:  mov    %esi,%eax
0x000ea197:  call   0xea0fe

----------------
IN: 
0x000ea19c:  mov    0xf515c,%bx
0x000ea1a3:  mov    %ebx,%ecx
0x000ea1a5:  or     $0x1,%ecx
0x000ea1a8:  movzwl %cx,%ecx
0x000ea1ab:  mov    $0x40,%edx
0x000ea1b0:  mov    %esi,%eax
0x000ea1b2:  call   0xea07a

----------------
IN: 
0x000ea1b7:  mov    $0x1,%ecx
0x000ea1bc:  mov    $0x80,%edx
0x000ea1c1:  mov    %esi,%eax
0x000ea1c3:  call   0xea0fe

----------------
IN: 
0x000ea1c8:  movzwl %bx,%ecx
0x000ea1cb:  add    $0x100,%ecx
0x000ea1d1:  or     $0x1,%ecx
0x000ea1d4:  mov    $0x90,%edx
0x000ea1d9:  mov    %esi,%eax
0x000ea1db:  call   0xea07a

----------------
IN: 
0x000ea1e0:  mov    $0x9,%ecx
0x000ea1e5:  mov    $0xd2,%edx
0x000ea1ea:  mov    %esi,%eax
0x000ea1ec:  pop    %ebx
0x000ea1ed:  pop    %esi
0x000ea1ee:  jmp    0xea0fe

----------------
IN: 
0x07faf22b:  movzwl 0xf515c,%edx
0x07faf232:  mov    %edx,%eax
0x07faf234:  add    $0x4,%edx
0x07faf237:  mov    %edx,0xf5d04
0x07faf23d:  add    $0x8,%eax
0x07faf240:  movzwl %ax,%eax
0x07faf243:  jmp    0x7faf1ed

----------------
IN: 
0x07faf1ed:  cmpw   $0x40,0xf6038
0x07faf1f5:  jne    0x7faf21d

----------------
IN: 
0x07faf1f7:  push   %ebx
0x07faf1f8:  mov    %eax,%ebx
0x07faf1fa:  movzwl %ax,%eax
0x07faf1fd:  push   %eax
0x07faf1fe:  push   $0xf0545
0x07faf203:  call   0xec4d8

----------------
IN: 
0x07faf208:  mov    %bx,0xf6038
0x07faf20f:  movl   $0xdfc,0xf603c
0x07faf219:  pop    %eax
0x07faf21a:  pop    %edx
0x07faf21b:  pop    %ebx
0x07faf21c:  ret    

----------------
IN: 
0x07fb06fc:  mov    0x8(%esp),%eax
0x07fb0700:  call   0x7fadb56

----------------
IN: 
0x07fb0705:  mov    0x7fbfde8,%eax
0x07fb070a:  lea    -0x4(%eax),%ebx
0x07fb070d:  cmp    $0xfffffffc,%ebx
0x07fb0710:  jne    0x7fb0a6f

----------------
IN: 
0x07fb0a6f:  mov    %ebx,%eax
0x07fb0a71:  call   0x7fac46f

----------------
IN: 
0x07fac46f:  cmpw   $0x300,0x14(%eax)
0x07fac475:  jne    0x7fac4b3

----------------
IN: 
0x07fac4b3:  xor    %eax,%eax
0x07fac4b5:  ret    

----------------
IN: 
0x07fb0a76:  test   %eax,%eax
0x07fb0a78:  je     0x7fb0a89

----------------
IN: 
0x07fb0a89:  mov    0x4(%ebx),%ebx
0x07fb0a8c:  sub    $0x4,%ebx
0x07fb0a8f:  jmp    0x7fb070d

----------------
IN: 
0x07fb070d:  cmp    $0xfffffffc,%ebx
0x07fb0710:  jne    0x7fb0a6f

----------------
IN: 
0x07fac477:  push   %ebx
0x07fac478:  mov    %eax,%ebx
0x07fac47a:  movzwl (%eax),%eax
0x07fac47d:  mov    $0x4,%edx
0x07fac482:  call   0xea491

----------------
IN: 
0x07fac487:  and    $0x3,%eax
0x07fac48a:  cmp    $0x3,%ax
0x07fac48e:  je     0x7fac4a5

----------------
IN: 
0x07fac4a5:  mov    0xc(%ebx),%ebx
0x07fac4a8:  test   %ebx,%ebx
0x07fac4aa:  jne    0x7fac494

----------------
IN: 
0x07fac4ac:  mov    $0x1,%eax
0x07fac4b1:  pop    %ebx
0x07fac4b2:  ret    

----------------
IN: 
0x07fb0a7a:  push   %ebx
0x07fb0a7b:  push   $0xf0d6f
0x07fb0a80:  call   0xec4d8

----------------
IN: 
0x07fb0a85:  pop    %eax
0x07fb0a86:  pop    %edx
0x07fb0a87:  jmp    0x7fb0af4

----------------
IN: 
0x07fb0af4:  add    $0x60,%esp
0x07fb0af7:  pop    %ebx
0x07fb0af8:  pop    %esi
0x07fb0af9:  pop    %edi
0x07fb0afa:  pop    %ebp
0x07fb0afb:  ret    

----------------
IN: 
0x07fb5975:  mov    $0x7113,%edx
0x07fb597a:  mov    $0x8086,%eax
0x07fb597f:  call   0x7fabbe4

----------------
IN: 
0x07fabbe4:  push   %ebx
0x07fabbe5:  mov    %eax,%ebx
0x07fabbe7:  mov    0x7fbfde8,%eax
0x07fabbec:  sub    $0x4,%eax
0x07fabbef:  cmp    $0xfffffffc,%eax
0x07fabbf2:  je     0x7fabc08

----------------
IN: 
0x07fabbf4:  cmp    %bx,0x10(%eax)
0x07fabbf8:  jne    0x7fabc00

----------------
IN: 
0x07fabbfa:  cmp    %dx,0x12(%eax)
0x07fabbfe:  je     0x7fabc0a

----------------
IN: 
0x07fabc00:  mov    0x4(%eax),%ecx
0x07fabc03:  lea    -0x4(%ecx),%eax
0x07fabc06:  jmp    0x7fabbef

----------------
IN: 
0x07fabbef:  cmp    $0xfffffffc,%eax
0x07fabbf2:  je     0x7fabc08

----------------
IN: 
0x07fabc0a:  pop    %ebx
0x07fabc0b:  ret    

----------------
IN: 
0x07fb5984:  mov    %eax,%ebx
0x07fb5986:  mov    $0x1237,%edx
0x07fb598b:  mov    $0x8086,%eax
0x07fb5990:  call   0x7fabbe4

----------------
IN: 
0x07fb5995:  test   %ebx,%ebx
0x07fb5997:  je     0x7fb599d

----------------
IN: 
0x07fb5999:  test   %eax,%eax
0x07fb599b:  jne    0x7fb59c5

----------------
IN: 
0x07fb59c5:  movzwl (%ebx),%edx
0x07fb59c8:  mov    %edx,0xf5144
0x07fb59ce:  movzwl (%eax),%eax
0x07fb59d1:  mov    %eax,0xf5140
0x07fb59d6:  call   0xea76a

----------------
IN: 
0x000ea76a:  push   %ebp
0x000ea76b:  push   %edi
0x000ea76c:  push   %esi
0x000ea76d:  push   %ebx
0x000ea76e:  mov    0xf5144,%esi
0x000ea774:  test   %esi,%esi
0x000ea776:  js     0xea866

----------------
IN: 
0x000ea77c:  movzwl %si,%esi
0x000ea77f:  mov    $0x2,%edx
0x000ea784:  mov    %esi,%eax
0x000ea786:  call   0xea491

----------------
IN: 
0x000ea78b:  mov    0xf5140,%ebx
0x000ea791:  cmp    $0x7113,%ax
0x000ea795:  jne    0xea7fb

----------------
IN: 
0x000ea797:  mov    $0x58,%edx
0x000ea79c:  mov    %esi,%eax
0x000ea79e:  call   0xea337

----------------
IN: 
0x000ea7a3:  mov    %eax,%edi
0x000ea7a5:  bt     $0x19,%eax
0x000ea7a9:  jb     0xea866

----------------
IN: 
0x000ea7af:  movzwl %bx,%ebx
0x000ea7b2:  mov    $0x4a,%ecx
0x000ea7b7:  mov    $0x72,%edx
0x000ea7bc:  mov    %ebx,%eax
0x000ea7be:  call   0xea0fe

----------------
IN: 
0x000ea7c3:  call   0xe9b55

----------------
IN: 
0x000e9b55:  push   %edi
0x000e9b56:  push   %esi
0x000e9b57:  mov    $0xafe00,%eax
0x000e9b5c:  mov    $0x3fe00,%esi
0x000e9b61:  mov    $0x80,%ecx
0x000e9b66:  mov    %eax,%edi
0x000e9b68:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000e9b68:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000e9b6a:  mov    0x38000,%eax
0x000e9b6f:  mov    0x38004,%edx
0x000e9b75:  mov    %eax,0xa8000
0x000e9b7a:  mov    %edx,0xa8004
0x000e9b80:  mov    $0xd069,%eax
0x000e9b85:  xor    %edx,%edx
0x000e9b87:  shld   $0x18,%eax,%edx
0x000e9b8b:  shl    $0x18,%eax
0x000e9b8e:  or     $0xeac88c,%eax
0x000e9b93:  mov    %eax,0x38000
0x000e9b98:  mov    %edx,%eax
0x000e9b9a:  or     $0xf00000,%eax
0x000e9b9f:  mov    %eax,0x38004
0x000e9ba4:  pop    %esi
0x000e9ba5:  pop    %edi
0x000e9ba6:  ret    

----------------
IN: 
0x000ea7c8:  or     $0x2000000,%edi
0x000ea7ce:  mov    %edi,%ecx
0x000ea7d0:  mov    $0x58,%edx
0x000ea7d5:  mov    %esi,%eax
0x000ea7d7:  call   0xea07a

----------------
IN: 
0x000ea7dc:  mov    0xf515c,%ax
0x000ea7e2:  lea    0x28(%eax),%edx
0x000ea7e5:  in     (%dx),%eax
0x000ea7e6:  or     $0x1,%eax
0x000ea7e9:  out    %eax,(%dx)
0x000ea7ea:  call   0xe9ba7

----------------
IN: 
0x000e9ba7:  push   %edi
0x000e9ba8:  push   %esi
0x000e9ba9:  mov    $0x1,%al
0x000e9bab:  out    %al,$0xb3
0x000e9bad:  xor    %eax,%eax
0x000e9baf:  out    %al,$0xb2
0x000e9bb1:  in     $0xb3,%al
0x000e9bb3:  test   %al,%al
0x000e9bb5:  jne    0xe9bb1

----------------
IN: 
0x00038000:  mov    %cs,%ax
0x00038002:  ljmp   $0xf000,$0xd069

----------------
IN: 
0x000fd069:  mov    $0xfd072,%edx
0x000fd06f:  jmp    0xfcf43

----------------
IN: 
0x000fcf43:  lidtw  %cs:0x61b8
0x000fcf49:  lgdtw  %cs:0x6178
0x000fcf4f:  mov    %cr0,%ecx
0x000fcf52:  and    $0x1fffffff,%ecx
0x000fcf59:  or     $0x1,%ecx
0x000fcf5d:  mov    %ecx,%cr0

----------------
IN: 
0x000fcf60:  ljmpl  $0x8,$0xfcf68

----------------
IN: 
0x000fcf68:  mov    $0x10,%ecx
0x000fcf6d:  mov    %ecx,%ds

----------------
IN: 
0x000fcf6f:  mov    %ecx,%es

----------------
IN: 
0x000fcf71:  mov    %ecx,%ss

----------------
IN: 
0x000fcf73:  mov    %ecx,%fs

----------------
IN: 
0x000fcf75:  mov    %ecx,%gs
0x000fcf77:  jmp    *%edx

----------------
IN: 
0x000fd072:  mov    $0xa8000,%esp
0x000fd077:  call   0xf00cc

----------------
IN: 
0x000f00cc:  push   %ebp
0x000f00cd:  mov    %esp,%ebp
0x000f00cf:  push   %edi
0x000f00d0:  push   %esi
0x000f00d1:  push   %ebx
0x000f00d2:  and    $0xfffffff8,%esp
0x000f00d5:  sub    $0x48,%esp
0x000f00d8:  mov    %eax,%edx
0x000f00da:  in     $0xb2,%al
0x000f00dc:  movzwl %dx,%edx
0x000f00df:  shl    $0x4,%edx
0x000f00e2:  mov    %edx,%ebx
0x000f00e4:  mov    0xfefc(%edx),%edx
0x000f00ea:  and    $0x2ffff,%edx
0x000f00f0:  cmp    $0x30000,%ebx
0x000f00f6:  jne    0xf0167

----------------
IN: 
0x000f00f8:  cmp    $0x20000,%edx
0x000f00fe:  jne    0xf010c

----------------
IN: 
0x000f0100:  movl   $0xa0000,0x3fef8
0x000f010a:  jmp    0xf0136

----------------
IN: 
0x000f0136:  xor    %eax,%eax
0x000f0138:  out    %al,$0xb3
0x000f013a:  mov    $0xa0000,%ebx
0x000f013f:  mov    $0x3fe00,%eax
0x000f0144:  mov    $0x80,%ecx
0x000f0149:  mov    %ebx,%edi
0x000f014b:  mov    %eax,%esi
0x000f014d:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f014d:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f014f:  mov    $0x80,%ecx
0x000f0154:  mov    %eax,%esi
0x000f0156:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f0156:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f0158:  movl   $0x1,0xf6174
0x000f0162:  jmp    0xf0334

----------------
IN: 
0x000f0334:  lea    -0xc(%ebp),%esp
0x000f0337:  pop    %ebx
0x000f0338:  pop    %esi
0x000f0339:  pop    %edi
0x000f033a:  pop    %ebp
0x000f033b:  ret    

----------------
IN: 
0x000fd07c:  rsm    

----------------
IN: 
0x000e9bb1:  in     $0xb3,%al
0x000e9bb3:  test   %al,%al
0x000e9bb5:  jne    0xe9bb1

----------------
IN: 
0x000e9bb7:  mov    $0x3fe00,%eax
0x000e9bbc:  mov    $0xafe00,%esi
0x000e9bc1:  mov    $0x80,%ecx
0x000e9bc6:  mov    %eax,%edi
0x000e9bc8:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000e9bc8:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000e9bca:  mov    0xa8000,%eax
0x000e9bcf:  mov    0xa8004,%edx
0x000e9bd5:  mov    %eax,0x38000
0x000e9bda:  mov    %edx,0x38004
0x000e9be0:  mov    $0xd069,%eax
0x000e9be5:  xor    %edx,%edx
0x000e9be7:  shld   $0x18,%eax,%edx
0x000e9beb:  shl    $0x18,%eax
0x000e9bee:  or     $0xeac88c,%eax
0x000e9bf3:  mov    %eax,0xa8000
0x000e9bf8:  mov    %edx,%eax
0x000e9bfa:  or     $0xf00000,%eax
0x000e9bff:  mov    %eax,0xa8004
0x000e9c04:  wbinvd 
0x000e9c06:  pop    %esi
0x000e9c07:  pop    %edi
0x000e9c08:  ret    

----------------
IN: 
0x000ea7ef:  mov    $0xa,%ecx
0x000ea7f4:  mov    $0x72,%edx
0x000ea7f9:  jmp    0xea85b

----------------
IN: 
0x000ea85b:  mov    %ebx,%eax
0x000ea85d:  pop    %ebx
0x000ea85e:  pop    %esi
0x000ea85f:  pop    %edi
0x000ea860:  pop    %ebp
0x000ea861:  jmp    0xea0fe

----------------
IN: 
0x07fb59db:  lea    0x60(%esp),%eax
0x07fb59df:  push   %eax
0x07fb59e0:  push   %esi
0x07fb59e1:  lea    0x54(%esp),%ecx
0x07fb59e5:  lea    0x50(%esp),%edx
0x07fb59e9:  mov    $0x1,%eax
0x07fb59ee:  call   0xe99c3

----------------
IN: 
0x07fb59f3:  mov    0x68(%esp),%eax
0x07fb59f7:  and    $0x1020,%eax
0x07fb59fc:  pop    %ebp
0x07fb59fd:  pop    %edx
0x07fb59fe:  cmp    $0x1020,%eax
0x07fb5a03:  jne    0x7fb5c14

----------------
IN: 
0x07fb5c14:  xor    %edx,%edx
0x07fb5c16:  xor    %ecx,%ecx
0x07fb5c18:  mov    $0xf1f60,%eax
0x07fb5c1d:  call   0x7fad81f

----------------
IN: 
0x07fb5c22:  mov    %edx,%ecx
0x07fb5c24:  mov    %edx,%edi
0x07fb5c26:  or     %eax,%edi
0x07fb5c28:  je     0x7fb5c36

----------------
IN: 
0x07fb5c36:  xor    %edx,%edx
0x07fb5c38:  xor    %ecx,%ecx
0x07fb5c3a:  mov    $0xf16bd,%eax
0x07fb5c3f:  call   0x7fad81f

----------------
IN: 
0x07fb5c44:  mov    %eax,%ebx
0x07fb5c46:  mov    %eax,0xf5244
0x07fb5c4b:  call   0xec3bb

----------------
IN: 
0x000ec3bb:  push   %ecx
0x000ec3bc:  movw   $0x0,0x2(%esp)
0x000ec3c3:  cmpl   $0x0,0xf53e4
0x000ec3ca:  je     0xec3df

----------------
IN: 
0x000ec3cc:  mov    $0x2,%ecx
0x000ec3d1:  mov    $0x5,%edx
0x000ec3d6:  lea    0x2(%esp),%eax
0x000ec3da:  call   0xec37e

----------------
IN: 
0x000ec3df:  mov    $0x88,%al
0x000ec3e1:  out    %al,$0x70
0x000ec3e3:  in     $0x71,%al
0x000ec3e5:  inc    %al
0x000ec3e7:  je     0xec3ff

----------------
IN: 
0x000ec3e9:  mov    $0xdf,%al
0x000ec3eb:  out    %al,$0x70
0x000ec3ed:  in     $0x71,%al
0x000ec3ef:  movzbl %al,%eax
0x000ec3f2:  inc    %eax
0x000ec3f3:  cmp    0x2(%esp),%ax
0x000ec3f8:  jbe    0xec3ff

----------------
IN: 
0x000ec3ff:  mov    0x2(%esp),%ax
0x000ec404:  pop    %edx
0x000ec405:  ret    

----------------
IN: 
0x07fb5c50:  movzwl %ax,%eax
0x07fb5c53:  cmp    %eax,%ebx
0x07fb5c55:  jae    0x7fb5c5c

----------------
IN: 
0x07fb5c5c:  call   0xee2db

----------------
IN: 
0x000ee2db:  push   %edi
0x000ee2dc:  push   %esi
0x000ee2dd:  push   %ebx
0x000ee2de:  sub    $0x10,%esp
0x000ee2e1:  lea    0xc(%esp),%eax
0x000ee2e5:  push   %eax
0x000ee2e6:  lea    0xc(%esp),%eax
0x000ee2ea:  push   %eax
0x000ee2eb:  lea    0xc(%esp),%ecx
0x000ee2ef:  lea    0x8(%esp),%edx
0x000ee2f3:  mov    $0x1,%eax
0x000ee2f8:  call   0xe99c3

----------------
IN: 
0x000ee2fd:  pop    %edx
0x000ee2fe:  pop    %ecx
0x000ee2ff:  cmpl   $0x0,(%esp)
0x000ee303:  je     0xee30c

----------------
IN: 
0x000ee305:  testb  $0x2,0xd(%esp)
0x000ee30a:  jne    0xee326

----------------
IN: 
0x000ee326:  movl   $0x1,0xf5240
0x000ee330:  mov    0x10000,%esi
0x000ee336:  mov    0x10004,%edi
0x000ee33c:  mov    $0xd07e,%eax
0x000ee341:  shl    $0x8,%eax
0x000ee344:  or     $0xea,%al
0x000ee346:  mov    %eax,0x10000
0x000ee34b:  movl   $0xf0,0x10004
0x000ee355:  mov    0xfee000f0,%eax
0x000ee35a:  or     $0x1,%ah
0x000ee35d:  mov    %eax,0xfee000f0
0x000ee362:  movl   $0x8700,0xfee00350
0x000ee36c:  movl   $0x8400,0xfee00360
0x000ee376:  movl   $0x1,0xf5210
0x000ee380:  movl   $0xc4500,0xfee00300
0x000ee38a:  movl   $0xc4610,0xfee00300
0x000ee394:  call   0xe9a42

----------------
IN: 
0x000e9a42:  push   %esi
0x000e9a43:  push   %ebx
0x000e9a44:  sub    $0x10,%esp
0x000e9a47:  lea    0xc(%esp),%eax
0x000e9a4b:  push   %eax
0x000e9a4c:  lea    0xc(%esp),%eax
0x000e9a50:  push   %eax
0x000e9a51:  lea    0xc(%esp),%ecx
0x000e9a55:  lea    0x8(%esp),%edx
0x000e9a59:  mov    $0x1,%eax
0x000e9a5e:  call   0xe99c3

----------------
IN: 
0x000e9a63:  pop    %eax
0x000e9a64:  pop    %edx
0x000e9a65:  cmpl   $0xff,0xf5244
0x000e9a6f:  ja     0xe9a8f

----------------
IN: 
0x000e9a71:  mov    0x4(%esp),%edx
0x000e9a75:  mov    %edx,%eax
0x000e9a77:  shr    $0x18,%eax
0x000e9a7a:  shr    $0x1d,%edx
0x000e9a7d:  mov    $0x1,%ebx
0x000e9a82:  mov    %al,%cl
0x000e9a84:  shl    %cl,%ebx
0x000e9a86:  or     %ebx,0xf5220(,%edx,4)
0x000e9a8d:  jmp    0xe9ab3

----------------
IN: 
0x000e9ab3:  add    $0x10,%esp
0x000e9ab6:  pop    %ebx
0x000e9ab7:  pop    %esi
0x000e9ab8:  ret    

----------------
IN: 
0x000ee399:  call   0xec3bb

----------------
IN: 
0x000ee39e:  movzwl %ax,%ebx
0x000ee3a1:  cmp    0xf5240,%ebx
0x000ee3a7:  je     0xee3c8

----------------
IN: 
0x000ee3c8:  call   0xec186

----------------
IN: 
0x000ec186:  push   %ebx
0x000ec187:  mov    %esp,%eax
0x000ec189:  mov    $0xf6168,%ebx
0x000ec18e:  cmp    $0x100000,%eax
0x000ec193:  jbe    0xec19c

----------------
IN: 
0x000ec19c:  mov    %ebx,%eax
0x000ec19e:  call   0xe97e5

----------------
IN: 
0x000e97e5:  mov    0x4(%eax),%edx
0x000e97e8:  lea    -0x4(%edx),%ecx
0x000e97eb:  cmp    %ecx,%eax
0x000e97ed:  je     0xe9802

----------------
IN: 
0x000e9802:  ret    

----------------
IN: 
0x000ec1a3:  cmp    $0xf6168,%ebx
0x000ec1a9:  jne    0xec1b1

----------------
IN: 
0x000ec1ab:  pop    %ebx
0x000ec1ac:  jmp    0xec16c

----------------
IN: 
0x000ec16c:  cmpb   $0x0,0xf54e1
0x000ec173:  jne    0xec178

----------------
IN: 
0x000ec178:  mov    $0xf88d8,%ecx
0x000ec17d:  xor    %edx,%edx
0x000ec17f:  xor    %eax,%eax
0x000ec181:  jmp    0xec0df

----------------
IN: 
0x000ec0df:  push   %ebp
0x000ec0e0:  push   %edi
0x000ec0e1:  push   %esi
0x000ec0e2:  push   %ebx
0x000ec0e3:  mov    %eax,%esi
0x000ec0e5:  mov    %esp,%eax
0x000ec0e7:  cmp    $0x100000,%eax
0x000ec0ec:  jbe    0xec0f8

----------------
IN: 
0x000ec0f8:  mov    %edx,%ebx
0x000ec0fa:  mov    0xe979c,%al
0x000ec0ff:  lea    -0xf0000(%ecx),%ebp
0x000ec105:  cmp    $0x2,%al
0x000ec107:  movzwl 0xe97a0,%edi
0x000ec10e:  jne    0xec12d

----------------
IN: 
0x000ec12d:  mov    $0xfcf8e,%ecx
0x000ec132:  dec    %al
0x000ec134:  je     0xec149

----------------
IN: 
0x000ec149:  mov    %esi,%eax
0x000ec14b:  mov    $0x61f6,%edx
0x000ec150:  jmp    *%ecx

----------------
IN: 
0x000fcf8e:  mov    $0x30,%ecx
0x000fcf93:  mov    %ecx,%ds

----------------
IN: 
0x000fcf95:  mov    %ecx,%es

----------------
IN: 
0x000fcf97:  mov    %ecx,%ss

----------------
IN: 
0x000fcf99:  mov    %ecx,%fs

----------------
IN: 
0x000fcf9b:  mov    %ecx,%gs
0x000fcf9d:  ljmpw  $0x28,$0xcfa3

----------------
IN: 
0x000fcfa3:  mov    %cr0,%ecx
0x000fcfa6:  and    $0xfffffffe,%ecx
0x000fcfaa:  mov    %ecx,%cr0

----------------
IN: 
0x000fcfad:  ljmp   $0xf000,$0xcfb2

----------------
IN: 
0x000fcfb2:  lidtw  %cs:0x61c0
0x000fcfb8:  xor    %cx,%cx
0x000fcfba:  mov    %cx,%fs
0x000fcfbc:  mov    %cx,%gs
0x000fcfbe:  mov    %cx,%es
0x000fcfc0:  mov    %cx,%ds
0x000fcfc2:  mov    %cx,%ss

----------------
IN: 
0x000fcfc4:  jmpl   *%edx

----------------
IN: 
0x000f61f6:  mov    %edi,%ecx
0x000f61f9:  shl    $0x4,%edi
0x000f61fd:  mov    %cx,%ss

----------------
IN: 
0x000f61ff:  sub    %edi,%esp

----------------
IN: 
0x000f6202:  mov    %cx,%ds
0x000f6204:  mov    %ebx,%edx
0x000f6207:  mov    %ebp,%ecx
0x000f620a:  calll  0xf7c9f

----------------
IN: 
0x000f7c9f:  push   %edi
0x000f7ca1:  push   %esi
0x000f7ca3:  push   %ebx
0x000f7ca5:  push   %ebx
0x000f7ca7:  mov    %eax,%edi
0x000f7caa:  addr32 mov %edx,(%esp)
0x000f7caf:  mov    %ecx,%esi
0x000f7cb2:  calll  0xf7188

----------------
IN: 
0x000f7188:  push   %esi
0x000f718a:  push   %ebx
0x000f718c:  sub    $0x8,%esp
0x000f7190:  mov    $0xd980,%esi
0x000f7196:  mov    %si,%es
0x000f7198:  mov    %es:-0x64,%bl
0x000f719d:  xor    %eax,%eax
0x000f71a0:  mov    %al,%es:0xff9c
0x000f71a4:  xor    %eax,%eax
0x000f71a7:  mov    %ax,%es:0xffa0
0x000f71ab:  cmp    $0x2,%bl
0x000f71ae:  je     0xf720b

----------------
IN: 
0x000f71b0:  mov    %es:0xff9e,%al
0x000f71b4:  test   %al,%al
0x000f71b6:  jne    0xf71c1

----------------
IN: 
0x000f71c1:  mov    %si,%es
0x000f71c3:  mov    %es:0xffac,%ax
0x000f71c7:  addr32 mov %ax,0x2(%esp)
0x000f71cc:  mov    %es:0xffae,%eax
0x000f71d1:  addr32 mov %eax,0x4(%esp)
0x000f71d7:  addr32 lgdtl 0x2(%esp)
0x000f71de:  mov    %si,%es
0x000f71e0:  mov    %es:0xffa2,%ax
0x000f71e4:  mov    %ax,%fs
0x000f71e6:  mov    %es:0xffa4,%ax
0x000f71ea:  mov    %ax,%gs
0x000f71ec:  mov    %es:0xffa8,%eax
0x000f71f1:  and    $0x60000000,%eax
0x000f71f7:  mov    %eax,%edx
0x000f71fa:  je     0xf720b

----------------
IN: 
0x000f720b:  mov    %si,%es
0x000f720d:  mov    %es:0xff9d,%al
0x000f7211:  test   %al,%al
0x000f7213:  js     0xf7219

----------------
IN: 
0x000f7215:  out    %al,$0x70
0x000f7217:  in     $0x71,%al
0x000f7219:  mov    %bl,%al
0x000f721b:  add    $0x8,%esp
0x000f721f:  pop    %ebx
0x000f7221:  pop    %esi
0x000f7223:  retl   

----------------
IN: 
0x000f7cb8:  mov    %al,%bl
0x000f7cba:  addr32 mov (%esp),%edx
0x000f7cbf:  mov    %edi,%eax
0x000f7cc2:  calll  *%esi

----------------
IN: 
0x000f88d8:  calll  0xf6da5

----------------
IN: 
0x000f6da5:  mov    %ss,%ax
0x000f6da7:  movzwl %ax,%edx
0x000f6dab:  xor    %eax,%eax
0x000f6dae:  cmp    $0xd980,%edx
0x000f6db5:  jne    0xf6dc7

----------------
IN: 
0x000f6dc7:  retl   

----------------
IN: 
0x000f88de:  test   %eax,%eax
0x000f88e1:  je     0xf88f2

----------------
IN: 
0x000f88f2:  sti    

----------------
IN: 
0x000f88f3:  nop    

----------------
IN: 
0x000f88f4:  pause  

----------------
IN: 
0x000f88f6:  cli    
0x000f88f7:  cld    
0x000f88f8:  retl   

----------------
IN: 
0x000f7cc5:  mov    %eax,%esi
0x000f7cc8:  movzbl %bl,%eax
0x000f7ccc:  calll  0xf6b68

----------------
IN: 
0x000f6b68:  push   %esi
0x000f6b6a:  push   %ebx
0x000f6b6c:  sub    $0x8,%esp
0x000f6b70:  mov    %eax,%ebx
0x000f6b73:  cmp    $0x2,%al
0x000f6b75:  je     0xf6bca

----------------
IN: 
0x000f6b77:  mov    %cr0,%eax
0x000f6b7a:  test   $0x1,%al
0x000f6b7c:  je     0xf6b84

----------------
IN: 
0x000f6b84:  mov    $0xd980,%esi
0x000f6b8a:  mov    %si,%es
0x000f6b8c:  mov    %eax,%es:0xffa8
0x000f6b91:  mov    %fs,%ax
0x000f6b93:  mov    %ax,%es:0xffa2
0x000f6b97:  mov    %gs,%ax
0x000f6b99:  mov    %ax,%es:0xffa4
0x000f6b9d:  addr32 sgdtl 0x2(%esp)
0x000f6ba4:  addr32 mov 0x2(%esp),%ax
0x000f6ba9:  mov    %ax,%es:0xffac
0x000f6bad:  addr32 mov 0x4(%esp),%eax
0x000f6bb3:  mov    %eax,%es:0xffae
0x000f6bb8:  mov    $0x1,%eax
0x000f6bbe:  calll  0xf6b40

----------------
IN: 
0x000f6b40:  mov    %eax,%ecx
0x000f6b43:  in     $0x92,%al
0x000f6b45:  mov    %al,%dl
0x000f6b47:  shr    %dl
0x000f6b49:  and    $0x1,%edx
0x000f6b4d:  test   %cl,%cl
0x000f6b4f:  setne  %cl
0x000f6b52:  cmp    %cl,%dl
0x000f6b54:  je     0xf6b5c

----------------
IN: 
0x000f6b5c:  mov    %dl,%al
0x000f6b5e:  retl   

----------------
IN: 
0x000f6bc4:  mov    %si,%es
0x000f6bc6:  mov    %al,%es:0xff9e
0x000f6bca:  mov    %ss,%ax
0x000f6bcc:  mov    $0xd980,%ecx
0x000f6bd2:  mov    %cx,%es
0x000f6bd4:  mov    %ax,%es:0xffa0
0x000f6bd8:  in     $0x70,%al
0x000f6bda:  mov    %al,%dl
0x000f6bdc:  test   %al,%al
0x000f6bde:  js     0xf6be8

----------------
IN: 
0x000f6be8:  mov    %cx,%es
0x000f6bea:  mov    %dl,%es:-0x63
0x000f6bef:  mov    %bl,%es:-0x64
0x000f6bf4:  xor    %eax,%eax
0x000f6bf7:  add    $0x8,%esp
0x000f6bfb:  pop    %ebx
0x000f6bfd:  pop    %esi
0x000f6bff:  retl   

----------------
IN: 
0x000f7cd2:  mov    %esi,%eax
0x000f7cd5:  pop    %esi
0x000f7cd7:  pop    %ebx
0x000f7cd9:  pop    %esi
0x000f7cdb:  pop    %edi
0x000f7cdd:  retl   

----------------
IN: 
0x000f6210:  mov    $0xec152,%edx
0x000f6216:  jmp    0xfcf43

----------------
IN: 
0x000fcf43:  lidtw  %cs:0x61b8
0x000fcf49:  lgdtw  %cs:0x6178
0x000fcf4f:  mov    %cr0,%ecx
0x000fcf52:  and    $0x1fffffff,%ecx
0x000fcf59:  or     $0x1,%ecx
0x000fcf5d:  mov    %ecx,%cr0

----------------
IN: 
0x000fcf60:  ljmpl  $0x8,$0xfcf68

----------------
IN: 
0x000fcf68:  mov    $0x10,%ecx
0x000fcf6d:  mov    %ecx,%ds

----------------
IN: 
0x000fcf6f:  mov    %ecx,%es

----------------
IN: 
0x000fcf71:  mov    %ecx,%ss

----------------
IN: 
0x000fcf73:  mov    %ecx,%fs

----------------
IN: 
0x000fcf75:  mov    %ecx,%gs
0x000fcf77:  jmp    *%edx

----------------
IN: 
0x000ec152:  add    %edi,%esp
0x000ec154:  pop    %ebx
0x000ec155:  pop    %esi
0x000ec156:  pop    %edi
0x000ec157:  pop    %ebp
0x000ec158:  ret    

----------------
IN: 
0x000ee3cd:  mov    %esi,0x10000
0x000ee3d3:  mov    %edi,0x10004
0x000ee3d9:  pushl  0xf5244
0x000ee3df:  push   %ebx
0x000ee3e0:  push   $0xf129b
0x000ee3e5:  call   0xec4d8

----------------
IN: 
0x000ee3ea:  add    $0xc,%esp
0x000ee3ed:  add    $0x10,%esp
0x000ee3f0:  pop    %ebx
0x000ee3f1:  pop    %esi
0x000ee3f2:  pop    %edi
0x000ee3f3:  ret    

----------------
IN: 
0x07fb5c61:  cmpl   $0xff,0xf5244
0x07fb5c6b:  ja     0x7fb6049

----------------
IN: 
0x07fb5c71:  movl   $0x52495024,0x7fbfc00
0x07fb5c7b:  mov    $0x80,%edx
0x07fb5c80:  mov    $0x7fbfc00,%eax
0x07fb5c85:  call   0xeaaa5

----------------
IN: 
0x07fb5c8a:  sub    %al,0x7fbfc1f
0x07fb5c90:  cmpl   $0x0,0xf5d08
0x07fb5c97:  jne    0x7fb5ca3

----------------
IN: 
0x07fb5c99:  mov    $0x7fbfc00,%eax
0x07fb5c9e:  call   0x7fb1655

----------------
IN: 
0x07fb1655:  push   %edi
0x07fb1656:  push   %esi
0x07fb1657:  push   %ebx
0x07fb1658:  movzwl 0x6(%eax),%ebx
0x07fb165c:  cmp    $0x1f,%bx
0x07fb1660:  jbe    0x7fb16ab

----------------
IN: 
0x07fb1662:  mov    %eax,%esi
0x07fb1664:  mov    %ebx,%edx
0x07fb1666:  call   0xeaaa5

----------------
IN: 
0x07fb166b:  test   %al,%al
0x07fb166d:  jne    0x7fb16ab

----------------
IN: 
0x07fb166f:  mov    %ebx,%eax
0x07fb1671:  call   0x7fae0d4

----------------
IN: 
0x07fae0d4:  mov    %eax,%edx
0x07fae0d6:  mov    $0x10,%ecx
0x07fae0db:  mov    $0x7fbfe80,%eax
0x07fae0e0:  jmp    0x7fadfb2

----------------
IN: 
0x07fb1676:  mov    %eax,%ebx
0x07fb1678:  test   %eax,%eax
0x07fb167a:  jne    0x7fb168e

----------------
IN: 
0x07fb168e:  push   %eax
0x07fb168f:  push   %esi
0x07fb1690:  push   $0xf100f
0x07fb1695:  call   0xec4d8

----------------
IN: 
0x07fb169a:  movzwl 0x6(%esi),%ecx
0x07fb169e:  mov    %ebx,%edi
0x07fb16a0:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fb16a0:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fb16a2:  mov    %ebx,0xf5d08
0x07fb16a8:  add    $0xc,%esp
0x07fb16ab:  pop    %ebx
0x07fb16ac:  pop    %esi
0x07fb16ad:  pop    %edi
0x07fb16ae:  ret    

----------------
IN: 
0x07fb5ca3:  mov    $0x8000,%eax
0x07fb5ca8:  call   0x7fae09f

----------------
IN: 
0x07fb5cad:  mov    %eax,%ebp
0x07fb5caf:  test   %eax,%eax
0x07fb5cb1:  jne    0x7fb5cc7

----------------
IN: 
0x07fb5cc7:  mov    $0x2c,%ecx
0x07fb5ccc:  xor    %edx,%edx
0x07fb5cce:  call   0xeab7b

----------------
IN: 
0x07fb5cd3:  movl   $0x504d4350,(%eax)
0x07fb5cd9:  movb   $0x4,0x6(%eax)
0x07fb5cdd:  movl   $0x48434f42,0x8(%eax)
0x07fb5ce4:  movl   $0x55504353,0xc(%eax)
0x07fb5ceb:  lea    0x10(%eax),%eax
0x07fb5cee:  mov    $0xf1f78,%esi
0x07fb5cf3:  mov    $0x3,%ecx
0x07fb5cf8:  mov    %eax,%edi
0x07fb5cfa:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fb5cfa:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fb5cfc:  movl   $0xfee00000,0x24(%ebp)
0x07fb5d03:  lea    0x60(%esp),%eax
0x07fb5d07:  push   %eax
0x07fb5d08:  lea    0x5c(%esp),%eax
0x07fb5d0c:  push   %eax
0x07fb5d0d:  lea    0x58(%esp),%ecx
0x07fb5d11:  lea    0x54(%esp),%edx
0x07fb5d15:  mov    $0x1,%eax
0x07fb5d1a:  call   0xe99c3

----------------
IN: 
0x07fb5d1f:  pop    %ebx
0x07fb5d20:  pop    %esi
0x07fb5d21:  cmpl   $0x0,0x4c(%esp)
0x07fb5d26:  jne    0x7fb5d3f

----------------
IN: 
0x07fb5d3f:  mov    $0x1,%edi
0x07fb5d44:  testb  $0x10,0x63(%esp)
0x07fb5d49:  je     0x7fb5d57

----------------
IN: 
0x07fb5d57:  mov    0xfee00030,%eax
0x07fb5d5c:  mov    %al,(%esp)
0x07fb5d5f:  lea    0x2c(%ebp),%eax
0x07fb5d62:  mov    %eax,0x4(%esp)
0x07fb5d66:  xor    %esi,%esi
0x07fb5d68:  mov    %eax,%ebx
0x07fb5d6a:  cmp    %esi,0xf5244
0x07fb5d70:  jbe    0x7fb5dc7

----------------
IN: 
0x07fb5d72:  mov    $0x14,%ecx
0x07fb5d77:  xor    %edx,%edx
0x07fb5d79:  mov    %ebx,%eax
0x07fb5d7b:  call   0xeab7b

----------------
IN: 
0x07fb5d80:  movb   $0x0,(%ebx)
0x07fb5d83:  mov    %esi,%eax
0x07fb5d85:  mov    %al,0x1(%ebx)
0x07fb5d88:  mov    (%esp),%al
0x07fb5d8b:  mov    %al,0x2(%ebx)
0x07fb5d8e:  mov    %esi,%eax
0x07fb5d90:  shr    $0x5,%al
0x07fb5d93:  movzbl %al,%eax
0x07fb5d96:  mov    0xf5220(,%eax,4),%eax
0x07fb5d9d:  mov    %esi,%ecx
0x07fb5d9f:  shr    %cl,%eax
0x07fb5da1:  and    $0x1,%eax
0x07fb5da4:  mov    %eax,%edx
0x07fb5da6:  test   %esi,%esi
0x07fb5da8:  sete   %al
0x07fb5dab:  shl    %eax
0x07fb5dad:  or     %edx,%eax
0x07fb5daf:  mov    %al,0x3(%ebx)
0x07fb5db2:  mov    0x4c(%esp),%eax
0x07fb5db6:  mov    %eax,0x4(%ebx)
0x07fb5db9:  mov    0x60(%esp),%eax
0x07fb5dbd:  mov    %eax,0x8(%ebx)
0x07fb5dc0:  add    $0x14,%ebx
0x07fb5dc3:  add    %edi,%esi
0x07fb5dc5:  jmp    0x7fb5d6a

----------------
IN: 
0x07fb5d6a:  cmp    %esi,0xf5244
0x07fb5d70:  jbe    0x7fb5dc7

----------------
IN: 
0x07fb5dc7:  mov    %ebx,%edi
0x07fb5dc9:  sub    0x4(%esp),%edi
0x07fb5dcd:  sar    $0x2,%edi
0x07fb5dd0:  imul   $0xcccccccd,%edi,%edi
0x07fb5dd6:  mov    %ebx,%esi
0x07fb5dd8:  cmpl   $0x0,0x7fbfde8
0x07fb5ddf:  je     0x7fb5e05

----------------
IN: 
0x07fb5de1:  lea    0x8(%ebx),%esi
0x07fb5de4:  mov    $0x8,%ecx
0x07fb5de9:  xor    %edx,%edx
0x07fb5deb:  mov    %ebx,%eax
0x07fb5ded:  call   0xeab7b

----------------
IN: 
0x07fb5df2:  movw   $0x1,(%ebx)
0x07fb5df7:  movl   $0x20494350,0x2(%ebx)
0x07fb5dfe:  movw   $0x2020,0x6(%ebx)
0x07fb5e04:  inc    %edi
0x07fb5e05:  mov    $0x8,%ecx
0x07fb5e0a:  xor    %edx,%edx
0x07fb5e0c:  mov    %esi,%eax
0x07fb5e0e:  call   0xeab7b

----------------
IN: 
0x07fb5e13:  movb   $0x1,(%esi)
0x07fb5e16:  sub    %ebx,%eax
0x07fb5e18:  sar    $0x3,%eax
0x07fb5e1b:  mov    %eax,0x4(%esp)
0x07fb5e1f:  mov    0x4(%esp),%al
0x07fb5e23:  mov    %al,0x1c(%esp)
0x07fb5e27:  mov    %al,0x1(%esi)
0x07fb5e2a:  movl   $0x20415349,0x2(%esi)
0x07fb5e31:  movw   $0x2020,0x6(%esi)
0x07fb5e37:  lea    0x8(%esi),%eax
0x07fb5e3a:  mov    $0x8,%ecx
0x07fb5e3f:  call   0xeab7b

----------------
IN: 
0x07fb5e44:  movl   $0x1110002,0x8(%esi)
0x07fb5e4b:  movl   $0xfec00000,0xc(%esi)
0x07fb5e52:  lea    0x2(%edi),%eax
0x07fb5e55:  mov    %eax,0x24(%esp)
0x07fb5e59:  lea    0x10(%esi),%eax
0x07fb5e5c:  mov    %eax,0x10(%esp)
0x07fb5e60:  mov    0x7fbfde8,%eax
0x07fb5e65:  lea    -0x4(%eax),%edi
0x07fb5e68:  mov    0x10(%esp),%ebx
0x07fb5e6c:  movw   $0x0,0x8(%esp)
0x07fb5e73:  movl   $0xffffffff,0x18(%esp)
0x07fb5e7b:  cmp    $0xfffffffc,%edi
0x07fb5e7e:  je     0x7fb5f44

----------------
IN: 
0x07fb5e84:  movzwl (%edi),%eax
0x07fb5e87:  mov    %eax,%esi
0x07fb5e89:  mov    %eax,(%esp)
0x07fb5e8c:  shr    $0x8,%ax
0x07fb5e90:  jne    0x7fb5f44

----------------
IN: 
0x07fb5e96:  mov    $0x3d,%edx
0x07fb5e9b:  movzwl %si,%eax
0x07fb5e9e:  call   0xea4cf

----------------
IN: 
0x07fb5ea3:  mov    %al,(%esp)
0x07fb5ea6:  movzbl %al,%ecx
0x07fb5ea9:  mov    %ecx,0x30(%esp)
0x07fb5ead:  mov    $0x3c,%edx
0x07fb5eb2:  movzwl %si,%eax
0x07fb5eb5:  call   0xea4cf

----------------
IN: 
0x07fb5eba:  mov    %al,0x2c(%esp)
0x07fb5ebe:  mov    0x30(%esp),%ecx
0x07fb5ec2:  test   %ecx,%ecx
0x07fb5ec4:  je     0x7fb5f39

----------------
IN: 
0x07fb5f39:  mov    0x4(%edi),%eax
0x07fb5f3c:  lea    -0x4(%eax),%edi
0x07fb5f3f:  jmp    0x7fb5e7b

----------------
IN: 
0x07fb5e7b:  cmp    $0xfffffffc,%edi
0x07fb5e7e:  je     0x7fb5f44

----------------
IN: 
0x07fb5ec6:  mov    %esi,%eax
0x07fb5ec8:  and    $0xfff8,%eax
0x07fb5ecd:  cmp    0x18(%esp),%eax
0x07fb5ed1:  jne    0x7fb5ee3

----------------
IN: 
0x07fb5ee3:  mov    %eax,0x18(%esp)
0x07fb5ee7:  movw   $0x0,0x8(%esp)
0x07fb5eee:  mov    $0x1,%eax
0x07fb5ef3:  mov    (%esp),%cl
0x07fb5ef6:  shl    %cl,%eax
0x07fb5ef8:  or     %ax,0x8(%esp)
0x07fb5efd:  mov    $0x8,%ecx
0x07fb5f02:  xor    %edx,%edx
0x07fb5f04:  mov    %ebx,%eax
0x07fb5f06:  call   0xeab7b

----------------
IN: 
0x07fb5f0b:  movl   $0x10003,(%ebx)
0x07fb5f11:  movb   $0x0,0x4(%ebx)
0x07fb5f15:  shr    $0x3,%si
0x07fb5f19:  lea    0x0(,%esi,4),%eax
0x07fb5f20:  mov    (%esp),%esi
0x07fb5f23:  lea    -0x1(%esi),%edx
0x07fb5f26:  or     %edx,%eax
0x07fb5f28:  mov    %al,0x5(%ebx)
0x07fb5f2b:  movb   $0x0,0x6(%ebx)
0x07fb5f2f:  mov    0x2c(%esp),%al
0x07fb5f33:  mov    %al,0x7(%ebx)
0x07fb5f36:  add    $0x8,%ebx
0x07fb5f39:  mov    0x4(%edi),%eax
0x07fb5f3c:  lea    -0x4(%eax),%edi
0x07fb5f3f:  jmp    0x7fb5e7b

----------------
IN: 
0x07fb5f44:  xor    %edx,%edx
0x07fb5f46:  xor    %ecx,%ecx
0x07fb5f48:  mov    $0xf16ab,%eax
0x07fb5f4d:  call   0x7fad81f

----------------
IN: 
0x07fb5f52:  mov    %eax,%edi
0x07fb5f54:  xor    %esi,%esi
0x07fb5f56:  mov    $0x8,%ecx
0x07fb5f5b:  xor    %edx,%edx
0x07fb5f5d:  mov    %ebx,%eax
0x07fb5f5f:  call   0xeab7b

----------------
IN: 
0x07fb5f64:  mov    $0xe20,%eax
0x07fb5f69:  mov    %esi,%ecx
0x07fb5f6b:  sar    %cl,%eax
0x07fb5f6d:  test   $0x1,%al
0x07fb5f6f:  jne    0x7fb5fa1

----------------
IN: 
0x07fb5f71:  movl   $0x3,(%ebx)
0x07fb5f77:  mov    0x1c(%esp),%al
0x07fb5f7b:  mov    %al,0x4(%ebx)
0x07fb5f7e:  mov    %cl,0x5(%ebx)
0x07fb5f81:  movb   $0x0,0x6(%ebx)
0x07fb5f85:  mov    %cl,0x7(%ebx)
0x07fb5f88:  test   %edi,%edi
0x07fb5f8a:  je     0x7fb5f9e

----------------
IN: 
0x07fb5f8c:  test   %esi,%esi
0x07fb5f8e:  jne    0x7fb5f96

----------------
IN: 
0x07fb5f90:  movb   $0x2,0x7(%ebx)
0x07fb5f94:  jmp    0x7fb5f9e

----------------
IN: 
0x07fb5f9e:  add    $0x8,%ebx
0x07fb5fa1:  inc    %esi
0x07fb5fa2:  cmp    $0x10,%esi
0x07fb5fa5:  jne    0x7fb5f56

----------------
IN: 
0x07fb5f56:  mov    $0x8,%ecx
0x07fb5f5b:  xor    %edx,%edx
0x07fb5f5d:  mov    %ebx,%eax
0x07fb5f5f:  call   0xeab7b

----------------
IN: 
0x07fb5f96:  cmp    $0x2,%esi
0x07fb5f99:  jne    0x7fb5f9e

----------------
IN: 
0x07fb5f9b:  sub    $0x8,%ebx
0x07fb5f9e:  add    $0x8,%ebx
0x07fb5fa1:  inc    %esi
0x07fb5fa2:  cmp    $0x10,%esi
0x07fb5fa5:  jne    0x7fb5f56

----------------
IN: 
0x07fb5fa1:  inc    %esi
0x07fb5fa2:  cmp    $0x10,%esi
0x07fb5fa5:  jne    0x7fb5f56

----------------
IN: 
0x07fb5fa7:  movl   $0x304,(%ebx)
0x07fb5fad:  mov    0x4(%esp),%al
0x07fb5fb1:  mov    %al,0x4(%ebx)
0x07fb5fb4:  movl   $0x4000000,0x5(%ebx)
0x07fb5fbb:  movw   $0x1,0x9(%ebx)
0x07fb5fc1:  movb   $0x0,0xb(%ebx)
0x07fb5fc5:  mov    %al,0xc(%ebx)
0x07fb5fc8:  movw   $0xff00,0xd(%ebx)
0x07fb5fce:  movb   $0x1,0xf(%ebx)
0x07fb5fd2:  add    $0x10,%ebx
0x07fb5fd5:  mov    %ebx,%edx
0x07fb5fd7:  sub    %ebp,%edx
0x07fb5fd9:  sub    0x10(%esp),%ebx
0x07fb5fdd:  sar    $0x3,%ebx
0x07fb5fe0:  add    0x24(%esp),%ebx
0x07fb5fe4:  mov    %bx,0x22(%ebp)
0x07fb5fe8:  mov    %dx,0x4(%ebp)
0x07fb5fec:  mov    %ebp,%eax
0x07fb5fee:  call   0xeaaa5

----------------
IN: 
0x07fb5ff3:  sub    %al,0x7(%ebp)
0x07fb5ff6:  mov    $0x10,%ecx
0x07fb5ffb:  xor    %edx,%edx
0x07fb5ffd:  lea    0x84(%esp),%eax
0x07fb6004:  call   0xeab7b

----------------
IN: 
0x07fb6009:  movl   $0x5f504d5f,0x84(%esp)
0x07fb6014:  mov    %ebp,0x88(%esp)
0x07fb601b:  movw   $0x401,0x8c(%esp)
0x07fb6025:  mov    $0x10,%edx
0x07fb602a:  call   0xeaaa5

----------------
IN: 
0x07fb602f:  sub    %al,0x8e(%esp)
0x07fb6036:  lea    0x84(%esp),%eax
0x07fb603d:  call   0x7fb16af

----------------
IN: 
0x07fb16af:  push   %ebp
0x07fb16b0:  push   %edi
0x07fb16b1:  push   %esi
0x07fb16b2:  push   %ebx
0x07fb16b3:  sub    $0x8,%esp
0x07fb16b6:  mov    0x4(%eax),%ebx
0x07fb16b9:  test   %ebx,%ebx
0x07fb16bb:  je     0x7fb175c

----------------
IN: 
0x07fb16c1:  mov    %eax,%ebp
0x07fb16c3:  mov    $0x10,%edx
0x07fb16c8:  call   0xeaaa5

----------------
IN: 
0x07fb16cd:  test   %al,%al
0x07fb16cf:  jne    0x7fb175c

----------------
IN: 
0x07fb16d5:  movzbl 0x8(%ebp),%eax
0x07fb16d9:  shl    $0x4,%eax
0x07fb16dc:  mov    %eax,(%esp)
0x07fb16df:  movzwl 0x4(%ebx),%eax
0x07fb16e3:  mov    %eax,0x4(%esp)
0x07fb16e7:  mov    (%esp),%eax
0x07fb16ea:  add    0x4(%esp),%eax
0x07fb16ee:  cmp    $0x258,%eax
0x07fb16f3:  jbe    0x7fb1704

----------------
IN: 
0x07fb1704:  call   0x7fae0d4

----------------
IN: 
0x07fb1709:  mov    %eax,%ebx
0x07fb170b:  test   %eax,%eax
0x07fb170d:  jne    0x7fb1725

----------------
IN: 
0x07fb1725:  push   %eax
0x07fb1726:  pushl  0x4(%ebp)
0x07fb1729:  push   %ebp
0x07fb172a:  push   $0xf105e
0x07fb172f:  call   0xec4d8

----------------
IN: 
0x07fb1734:  mov    %ebx,%edi
0x07fb1736:  mov    %ebp,%esi
0x07fb1738:  mov    0x10(%esp),%ecx
0x07fb173c:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fb173c:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fb173e:  mov    %edi,0x4(%ebx)
0x07fb1741:  mov    $0x10,%edx
0x07fb1746:  mov    %ebx,%eax
0x07fb1748:  call   0xeaaa5

----------------
IN: 
0x07fb174d:  sub    %al,0xa(%ebx)
0x07fb1750:  mov    0x4(%ebp),%esi
0x07fb1753:  mov    0x14(%esp),%ecx
0x07fb1757:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fb1757:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fb1759:  add    $0x10,%esp
0x07fb175c:  add    $0x8,%esp
0x07fb175f:  pop    %ebx
0x07fb1760:  pop    %esi
0x07fb1761:  pop    %edi
0x07fb1762:  pop    %ebp
0x07fb1763:  ret    

----------------
IN: 
0x07fb6042:  mov    %ebp,%eax
0x07fb6044:  call   0x7fadb56

----------------
IN: 
0x07fb6049:  call   0x7fb1849

----------------
IN: 
0x07fb1849:  push   %ebp
0x07fb184a:  push   %edi
0x07fb184b:  push   %esi
0x07fb184c:  push   %ebx
0x07fb184d:  sub    $0x2c,%esp
0x07fb1850:  mov    $0xf10d1,%eax
0x07fb1855:  call   0x7fad7ee

----------------
IN: 
0x07fb185a:  mov    %eax,%esi
0x07fb185c:  mov    $0xf10ea,%eax
0x07fb1861:  call   0x7fad7ee

----------------
IN: 
0x07fb1866:  test   %esi,%esi
0x07fb1868:  je     0x7fb19af

----------------
IN: 
0x07fb186e:  mov    %eax,%ebx
0x07fb1870:  test   %eax,%eax
0x07fb1872:  je     0x7fb19af

----------------
IN: 
0x07fb1878:  cmpl   $0x1f,0x84(%esi)
0x07fb187f:  jne    0x7fb19af

----------------
IN: 
0x07fb1885:  mov    $0x1f,%ecx
0x07fb188a:  lea    0xd(%esp),%edx
0x07fb188e:  mov    %esi,%eax
0x07fb1890:  call   *0x88(%esi)

----------------
IN: 
0x07fb1896:  mov    0x84(%ebx),%eax
0x07fb189c:  movzwl 0x23(%esp),%edx
0x07fb18a1:  cmp    %edx,%eax
0x07fb18a3:  jne    0x7fb19af

----------------
IN: 
0x07fb18a9:  call   0x7fae08e

----------------
IN: 
0x07fb18ae:  mov    %eax,0x4(%esp)
0x07fb18b2:  test   %eax,%eax
0x07fb18b4:  jne    0x7fb18ca

----------------
IN: 
0x07fb18ca:  mov    0x84(%ebx),%ecx
0x07fb18d0:  mov    0x4(%esp),%edx
0x07fb18d4:  mov    %ebx,%eax
0x07fb18d6:  call   *0x88(%ebx)

----------------
IN: 
0x07fb18dc:  mov    0x4(%esp),%eax
0x07fb18e0:  mov    %eax,0x25(%esp)
0x07fb18e4:  xor    %edx,%edx
0x07fb18e6:  lea    0xd(%esp),%eax
0x07fb18ea:  call   0x7fabcb8

----------------
IN: 
0x07fabcb8:  test   %eax,%eax
0x07fabcba:  je     0x7fabd11

----------------
IN: 
0x07fabcbc:  push   %ebx
0x07fabcbd:  mov    0x18(%eax),%ecx
0x07fabcc0:  movzwl 0x16(%eax),%ebx
0x07fabcc4:  add    %ecx,%ebx
0x07fabcc6:  test   %edx,%edx
0x07fabcc8:  je     0x7fabcf0

----------------
IN: 
0x07fabcf0:  xor    %eax,%eax
0x07fabcf2:  cmp    %ebx,%ecx
0x07fabcf4:  jae    0x7fabd0f

----------------
IN: 
0x07fabcf6:  lea    0x4(%ecx),%edx
0x07fabcf9:  xor    %eax,%eax
0x07fabcfb:  cmp    %edx,%ebx
0x07fabcfd:  jbe    0x7fabd0f

----------------
IN: 
0x07fabcff:  movzbl 0x1(%ecx),%edx
0x07fabd03:  add    %ecx,%edx
0x07fabd05:  cmp    %edx,%ebx
0x07fabd07:  jbe    0x7fabd0f

----------------
IN: 
0x07fabd09:  mov    %ecx,%eax
0x07fabd0b:  jmp    0x7fabd0f

----------------
IN: 
0x07fabd0f:  pop    %ebx
0x07fabd10:  ret    

----------------
IN: 
0x07fb18ef:  mov    %eax,%edx
0x07fb18f1:  test   %eax,%eax
0x07fb18f3:  je     0x7fb18fe

----------------
IN: 
0x07fb18f5:  cmpb   $0x0,(%edx)
0x07fb18f8:  jne    0x7fb18e6

----------------
IN: 
0x07fb18e6:  lea    0xd(%esp),%eax
0x07fb18ea:  call   0x7fabcb8

----------------
IN: 
0x07fabcca:  lea    0x4(%edx),%ecx
0x07fabccd:  xor    %eax,%eax
0x07fabccf:  cmp    %ecx,%ebx
0x07fabcd1:  jb     0x7fabd0f

----------------
IN: 
0x07fabcd3:  movzbl 0x1(%edx),%eax
0x07fabcd7:  lea    0x2(%edx,%eax,1),%ecx
0x07fabcdb:  cmp    %ebx,%ecx
0x07fabcdd:  jae    0x7fabd0d

----------------
IN: 
0x07fabcdf:  cmpb   $0x0,-0x1(%ecx)
0x07fabce3:  je     0x7fabce8

----------------
IN: 
0x07fabce5:  inc    %ecx
0x07fabce6:  jmp    0x7fabcdb

----------------
IN: 
0x07fabcdb:  cmp    %ebx,%ecx
0x07fabcdd:  jae    0x7fabd0d

----------------
IN: 
0x07fabce8:  cmpb   $0x0,-0x2(%ecx)
0x07fabcec:  jne    0x7fabce5

----------------
IN: 
0x07fabcee:  jmp    0x7fabcf6

----------------
IN: 
0x07fabd0d:  xor    %eax,%eax
0x07fabd0f:  pop    %ebx
0x07fabd10:  ret    

----------------
IN: 
0x07fb18fe:  mov    $0x1,%esi
0x07fb1903:  mov    0x23(%esp),%ax
0x07fb1908:  mov    %ax,0xa(%esp)
0x07fb190d:  test   %si,%si
0x07fb1910:  je     0x7fb197a

----------------
IN: 
0x07fb1912:  mov    $0xf1103,%eax
0x07fb1917:  call   0xe9960

----------------
IN: 
0x07fb191c:  mov    %eax,%ebx
0x07fb191e:  mov    $0xf51d0,%eax
0x07fb1923:  call   0xe9960

----------------
IN: 
0x07fb1928:  add    %eax,%ebx
0x07fb192a:  mov    $0xf110b,%eax
0x07fb192f:  call   0xe9960

----------------
IN: 
0x07fb1934:  lea    0x1c(%ebx,%eax,1),%eax
0x07fb1938:  movzwl %ax,%ecx
0x07fb193b:  mov    0xa(%esp),%dx
0x07fb1940:  not    %edx
0x07fb1942:  movzwl %dx,%edx
0x07fb1945:  cmp    %edx,%ecx
0x07fb1947:  jle    0x7fb195c

----------------
IN: 
0x07fb195c:  mov    0xa(%esp),%di
0x07fb1961:  lea    (%edi,%eax,1),%edx
0x07fb1964:  mov    %dx,0x23(%esp)
0x07fb1969:  cmp    %ax,0x15(%esp)
0x07fb196e:  jae    0x7fb1975

----------------
IN: 
0x07fb1975:  incw   0x29(%esp)
0x07fb197a:  movzwl 0x23(%esp),%eax
0x07fb197f:  cmp    $0x258,%ax
0x07fb1983:  jbe    0x7fb198c

----------------
IN: 
0x07fb198c:  call   0x7fae0d4

----------------
IN: 
0x07fb1991:  mov    %eax,%ebx
0x07fb1993:  test   %eax,%eax
0x07fb1995:  jne    0x7fb19b6

----------------
IN: 
0x07fb19b6:  mov    %eax,0x25(%esp)
0x07fb19ba:  test   %si,%si
0x07fb19bd:  je     0x7fb1a92

----------------
IN: 
0x07fb19c3:  lea    0x18(%eax),%eax
0x07fb19c6:  mov    %eax,(%esp)
0x07fb19c9:  movl   $0x1800,(%ebx)
0x07fb19cf:  mov    $0xf1103,%eax
0x07fb19d4:  call   0xe9960

----------------
IN: 
0x07fb19d9:  lea    0x1(%eax),%ecx
0x07fb19dc:  cmp    $0x1,%ecx
0x07fb19df:  jle    0x7fb19f7

----------------
IN: 
0x07fb19e1:  mov    $0xf1103,%esi
0x07fb19e6:  mov    (%esp),%edi
0x07fb19e9:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fb19e9:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fb19eb:  mov    %edi,(%esp)
0x07fb19ee:  mov    $0x1,%al
0x07fb19f0:  mov    $0x1,%ebp
0x07fb19f5:  jmp    0x7fb19fb

----------------
IN: 
0x07fb19fb:  mov    %al,0x4(%ebx)
0x07fb19fe:  mov    $0xf51d0,%esi
0x07fb1a03:  xor    %edi,%edi
0x07fb1a05:  test   %esi,%esi
0x07fb1a07:  je     0x7fb1a23

----------------
IN: 
0x07fb1a09:  mov    %esi,%eax
0x07fb1a0b:  call   0xe9960

----------------
IN: 
0x07fb1a10:  lea    0x1(%eax),%ecx
0x07fb1a13:  cmp    $0x1,%ecx
0x07fb1a16:  jle    0x7fb1a23

----------------
IN: 
0x07fb1a18:  mov    (%esp),%edi
0x07fb1a1b:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fb1a1b:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fb1a1d:  mov    %edi,(%esp)
0x07fb1a20:  inc    %ebp
0x07fb1a21:  mov    %ebp,%edi
0x07fb1a23:  mov    %edi,%eax
0x07fb1a25:  mov    %al,0x5(%ebx)
0x07fb1a28:  movw   $0xe800,0x6(%ebx)
0x07fb1a2e:  mov    $0xf110b,%eax
0x07fb1a33:  call   0xe9960

----------------
IN: 
0x07fb1a38:  lea    0x1(%eax),%ecx
0x07fb1a3b:  xor    %eax,%eax
0x07fb1a3d:  cmp    $0x1,%ecx
0x07fb1a40:  jle    0x7fb1a52

----------------
IN: 
0x07fb1a42:  mov    $0xf110b,%esi
0x07fb1a47:  mov    (%esp),%edi
0x07fb1a4a:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fb1a4a:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fb1a4c:  mov    %edi,(%esp)
0x07fb1a4f:  inc    %ebp
0x07fb1a50:  mov    %ebp,%eax
0x07fb1a52:  mov    %al,0x8(%ebx)
0x07fb1a55:  movb   $0x0,0x9(%ebx)
0x07fb1a59:  lea    0xa(%ebx),%eax
0x07fb1a5c:  mov    $0x8,%ecx
0x07fb1a61:  xor    %edx,%edx
0x07fb1a63:  call   0xeab7b

----------------
IN: 
0x07fb1a68:  movb   $0x8,0xa(%ebx)
0x07fb1a6c:  movl   $0x400,0x12(%ebx)
0x07fb1a73:  movw   $0xffff,0x16(%ebx)
0x07fb1a79:  mov    (%esp),%eax
0x07fb1a7c:  movb   $0x0,(%eax)
0x07fb1a7f:  test   %ebp,%ebp
0x07fb1a81:  je     0x7fb1a88

----------------
IN: 
0x07fb1a83:  mov    %eax,%ebx
0x07fb1a85:  inc    %ebx
0x07fb1a86:  jmp    0x7fb1a92

----------------
IN: 
0x07fb1a92:  movzwl 0xa(%esp),%ecx
0x07fb1a97:  mov    %ebx,%edi
0x07fb1a99:  mov    0x4(%esp),%esi
0x07fb1a9d:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fb1a9d:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fb1a9f:  mov    0x4(%esp),%eax
0x07fb1aa3:  call   0x7fadb56

----------------
IN: 
0x07fb1aa8:  mov    $0x10,%edx
0x07fb1aad:  lea    0xd(%esp),%eax
0x07fb1ab1:  call   0xeaaa5

----------------
IN: 
0x07fb1ab6:  sub    %al,0x11(%esp)
0x07fb1aba:  movzbl 0x12(%esp),%edx
0x07fb1abf:  sub    $0x10,%edx
0x07fb1ac2:  lea    0x1d(%esp),%eax
0x07fb1ac6:  call   0xeaaa5

----------------
IN: 
0x07fb1acb:  sub    %al,0x22(%esp)
0x07fb1acf:  lea    0xd(%esp),%eax
0x07fb1ad3:  call   0x7fb17b6

----------------
IN: 
0x07fb17b6:  cmpl   $0x0,0x7fbff1c
0x07fb17bd:  jne    0x7fb1848

----------------
IN: 
0x07fb17c3:  push   %edi
0x07fb17c4:  push   %esi
0x07fb17c5:  push   %ebx
0x07fb17c6:  mov    %eax,%esi
0x07fb17c8:  cmpl   $0x5f4d535f,(%eax)
0x07fb17ce:  jne    0x7fb1844

----------------
IN: 
0x07fb17d0:  mov    $0x10,%edx
0x07fb17d5:  call   0xeaaa5

----------------
IN: 
0x07fb17da:  test   %al,%al
0x07fb17dc:  jne    0x7fb1844

----------------
IN: 
0x07fb17de:  lea    0x10(%esi),%edi
0x07fb17e1:  mov    $0x5,%ecx
0x07fb17e6:  mov    $0xf10a1,%edx
0x07fb17eb:  mov    %edi,%eax
0x07fb17ed:  call   0x7fab68e

----------------
IN: 
0x07fb17f2:  test   %eax,%eax
0x07fb17f4:  jne    0x7fb1844

----------------
IN: 
0x07fb17f6:  movzbl 0x5(%esi),%ebx
0x07fb17fa:  lea    -0x10(%ebx),%edx
0x07fb17fd:  mov    %edi,%eax
0x07fb17ff:  call   0xeaaa5

----------------
IN: 
0x07fb1804:  test   %al,%al
0x07fb1806:  jne    0x7fb1844

----------------
IN: 
0x07fb1808:  mov    %ebx,%eax
0x07fb180a:  call   0x7fae0d4

----------------
IN: 
0x07fb180f:  mov    %eax,%ebx
0x07fb1811:  test   %eax,%eax
0x07fb1813:  jne    0x7fb1827

----------------
IN: 
0x07fb1827:  push   %eax
0x07fb1828:  push   %esi
0x07fb1829:  push   $0xf10a7
0x07fb182e:  call   0xec4d8

----------------
IN: 
0x07fb1833:  movzbl 0x5(%esi),%ecx
0x07fb1837:  mov    %ebx,%edi
0x07fb1839:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fb1839:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fb183b:  mov    %ebx,0x7fbff1c
0x07fb1841:  add    $0xc,%esp
0x07fb1844:  pop    %ebx
0x07fb1845:  pop    %esi
0x07fb1846:  pop    %edi
0x07fb1847:  ret    

----------------
IN: 
0x07fb1ad8:  mov    $0x1,%eax
0x07fb1add:  add    $0x2c,%esp
0x07fb1ae0:  pop    %ebx
0x07fb1ae1:  pop    %esi
0x07fb1ae2:  pop    %edi
0x07fb1ae3:  pop    %ebp
0x07fb1ae4:  ret    

----------------
IN: 
0x07fb604e:  mov    %eax,0x10(%esp)
0x07fb6052:  test   %eax,%eax
0x07fb6054:  jne    0x7fb6b66

----------------
IN: 
0x07fb6b66:  lea    0x60(%esp),%edx
0x07fb6b6a:  mov    $0xf1733,%eax
0x07fb6b6f:  call   0x7fae1dd

----------------
IN: 
0x07fae1fa:  lea    0x1(%edi),%eax
0x07fae1fd:  call   0x7fae08e

----------------
IN: 
0x07fae202:  mov    %eax,%ebx
0x07fae204:  test   %eax,%eax
0x07fae206:  jne    0x7fae219

----------------
IN: 
0x07fae219:  mov    %edi,%ecx
0x07fae21b:  mov    %eax,%edx
0x07fae21d:  mov    %esi,%eax
0x07fae21f:  call   *0x88(%esi)

----------------
IN: 
0x07fae225:  test   %eax,%eax
0x07fae227:  jns    0x7fae232

----------------
IN: 
0x07fae232:  test   %ebp,%ebp
0x07fae234:  je     0x7fae239

----------------
IN: 
0x07fae236:  mov    %edi,0x0(%ebp)
0x07fae239:  movb   $0x0,(%ebx,%edi,1)
0x07fae23d:  jmp    0x7fae241

----------------
IN: 
0x07fb6b74:  mov    %eax,0x4(%esp)
0x07fb6b78:  test   %eax,%eax
0x07fb6b7a:  je     0x7fb6fb7

----------------
IN: 
0x07fb6b80:  mov    0x60(%esp),%eax
0x07fb6b84:  test   $0x7f,%al
0x07fb6b86:  je     0x7fb6b9c

----------------
IN: 
0x07fb6b9c:  shr    $0x7,%eax
0x07fb6b9f:  lea    0x4(,%eax,8),%eax
0x07fb6ba6:  call   0x7fae09f

----------------
IN: 
0x07fb6bab:  mov    %eax,(%esp)
0x07fb6bae:  test   %eax,%eax
0x07fb6bb0:  jne    0x7fb6bc6

----------------
IN: 
0x07fb6bc6:  mov    (%esp),%eax
0x07fb6bc9:  movl   $0x0,(%eax)
0x07fb6bcf:  mov    0x4(%esp),%eax
0x07fb6bd3:  lea    0x4(%eax),%ebp
0x07fb6bd6:  mov    $0xfffffffc,%eax
0x07fb6bdb:  sub    0x4(%esp),%eax
0x07fb6bdf:  mov    %eax,0x18(%esp)
0x07fb6be3:  mov    0x18(%esp),%eax
0x07fb6be7:  add    %ebp,%eax
0x07fb6be9:  cmp    %eax,0x60(%esp)
0x07fb6bed:  jle    0x7fb6f9b

----------------
IN: 
0x07fb6bf3:  mov    -0x4(%ebp),%eax
0x07fb6bf6:  cmp    $0x3,%eax
0x07fb6bf9:  je     0x7fb6d98

----------------
IN: 
0x07fb6bff:  ja     0x7fb6c14

----------------
IN: 
0x07fb6c01:  cmp    $0x1,%eax
0x07fb6c04:  je     0x7fb6c22

----------------
IN: 
0x07fb6c22:  mov    (%esp),%eax
0x07fb6c25:  mov    (%eax),%ebx
0x07fb6c27:  mov    0x38(%ebp),%edi
0x07fb6c2a:  lea    -0x1(%edi),%eax
0x07fb6c2d:  test   %edi,%eax
0x07fb6c2f:  jne    0x7fb6cd9

----------------
IN: 
0x07fb6c35:  mov    0x3c(%ebp),%al
0x07fb6c38:  cmp    $0x1,%al
0x07fb6c3a:  je     0x7fb6c4a

----------------
IN: 
0x07fb6c3c:  mov    $0x7fbfe80,%esi
0x07fb6c41:  cmp    $0x2,%al
0x07fb6c43:  je     0x7fb6c4f

----------------
IN: 
0x07fb6c4f:  cmpb   $0x0,0x37(%ebp)
0x07fb6c53:  jne    0x7fb6cd9

----------------
IN: 
0x07fb6c59:  mov    %ebp,%eax
0x07fb6c5b:  call   0x7fad7ee

----------------
IN: 
0x07fb6c60:  mov    (%esp),%ecx
0x07fb6c63:  lea    (%ecx,%ebx,8),%ebx
0x07fb6c66:  mov    %eax,0x4(%ebx)
0x07fb6c69:  test   %eax,%eax
0x07fb6c6b:  je     0x7fb6f93

----------------
IN: 
0x07fb6c71:  mov    0x84(%eax),%edx
0x07fb6c77:  test   %edx,%edx
0x07fb6c79:  je     0x7fb6f93

----------------
IN: 
0x07fb6c7f:  mov    %edi,%ecx
0x07fb6c81:  cmp    $0x10,%edi
0x07fb6c84:  jae    0x7fb6c8b

----------------
IN: 
0x07fb6c8b:  mov    %esi,%eax
0x07fb6c8d:  call   0x7fadfb2

----------------
IN: 
0x07fb6c92:  mov    %eax,%esi
0x07fb6c94:  test   %eax,%eax
0x07fb6c96:  jne    0x7fb6ca7

----------------
IN: 
0x07fb6ca7:  mov    0x4(%ebx),%eax
0x07fb6caa:  mov    0x84(%eax),%ecx
0x07fb6cb0:  mov    %esi,%edx
0x07fb6cb2:  call   *0x88(%eax)

----------------
IN: 
0x07fb6cb8:  mov    0x4(%ebx),%edx
0x07fb6cbb:  cmp    %eax,0x84(%edx)
0x07fb6cc1:  je     0x7fb6ccc

----------------
IN: 
0x07fb6ccc:  mov    %esi,0x8(%ebx)
0x07fb6ccf:  mov    (%esp),%eax
0x07fb6cd2:  incl   (%eax)
0x07fb6cd4:  jmp    0x7fb6f93

----------------
IN: 
0x07fb6f93:  sub    $0xffffff80,%ebp
0x07fb6f96:  jmp    0x7fb6be3

----------------
IN: 
0x07fb6be3:  mov    0x18(%esp),%eax
0x07fb6be7:  add    %ebp,%eax
0x07fb6be9:  cmp    %eax,0x60(%esp)
0x07fb6bed:  jle    0x7fb6f9b

----------------
IN: 
0x07fb6c4a:  mov    $0x7fbfe84,%esi
0x07fb6c4f:  cmpb   $0x0,0x37(%ebp)
0x07fb6c53:  jne    0x7fb6cd9

----------------
IN: 
0x07fb6d98:  mov    0x38(%ebp),%ebx
0x07fb6d9b:  mov    0x3c(%ebp),%edi
0x07fb6d9e:  mov    0x40(%ebp),%esi
0x07fb6da1:  mov    (%esp),%edx
0x07fb6da4:  mov    %ebp,%eax
0x07fb6da6:  call   0x7fac98d

----------------
IN: 
0x07fac98d:  cmpb   $0x0,0x37(%eax)
0x07fac991:  jne    0x7fac9c2

----------------
IN: 
0x07fac993:  push   %ebp
0x07fac994:  push   %edi
0x07fac995:  push   %esi
0x07fac996:  push   %ebx
0x07fac997:  mov    %eax,%edi
0x07fac999:  mov    %edx,%esi
0x07fac99b:  mov    (%edx),%ebp
0x07fac99d:  xor    %ebx,%ebx
0x07fac99f:  cmp    %ebp,%ebx
0x07fac9a1:  jge    0x7fac9be

----------------
IN: 
0x07fac9a3:  mov    0x4(%esi,%ebx,8),%eax
0x07fac9a7:  add    $0x4,%eax
0x07fac9aa:  mov    %edi,%edx
0x07fac9ac:  call   0xe9971

----------------
IN: 
0x000e9988:  inc    %ecx
0x000e9989:  test   %bl,%bl
0x000e998b:  jne    0xe9974

----------------
IN: 
0x000e9974:  mov    (%eax,%ecx,1),%bl
0x000e9977:  cmp    (%edx,%ecx,1),%bl
0x000e997a:  je     0xe9988

----------------
IN: 
0x07fac9b1:  test   %eax,%eax
0x07fac9b3:  jne    0x7fac9bb

----------------
IN: 
0x07fac9bb:  inc    %ebx
0x07fac9bc:  jmp    0x7fac99f

----------------
IN: 
0x07fac99f:  cmp    %ebp,%ebx
0x07fac9a1:  jge    0x7fac9be

----------------
IN: 
0x000e998d:  xor    %eax,%eax
0x000e998f:  pop    %ebx
0x000e9990:  ret    

----------------
IN: 
0x07fac9b5:  lea    0x4(%esi,%ebx,8),%eax
0x07fac9b9:  jmp    0x7fac9c5

----------------
IN: 
0x07fac9c5:  pop    %ebx
0x07fac9c6:  pop    %esi
0x07fac9c7:  pop    %edi
0x07fac9c8:  pop    %ebp
0x07fac9c9:  ret    

----------------
IN: 
0x07fb6dab:  test   %eax,%eax
0x07fb6dad:  je     0x7fb6dcc

----------------
IN: 
0x07fb6daf:  mov    0x4(%eax),%edx
0x07fb6db2:  test   %edx,%edx
0x07fb6db4:  je     0x7fb6dcc

----------------
IN: 
0x07fb6db6:  mov    (%eax),%eax
0x07fb6db8:  mov    0x84(%eax),%eax
0x07fb6dbe:  cmp    %eax,%ebx
0x07fb6dc0:  jae    0x7fb6dcc

----------------
IN: 
0x07fb6dc2:  mov    %edi,%ecx
0x07fb6dc4:  add    %esi,%ecx
0x07fb6dc6:  jb     0x7fb6dcc

----------------
IN: 
0x07fb6dc8:  cmp    %ecx,%eax
0x07fb6dca:  jae    0x7fb6ddb

----------------
IN: 
0x07fb6ddb:  add    %edx,%ebx
0x07fb6ddd:  lea    (%edx,%edi,1),%eax
0x07fb6de0:  mov    %esi,%edx
0x07fb6de2:  call   0xeaaa5

----------------
IN: 
0x07fb6de7:  sub    %al,(%ebx)
0x07fb6de9:  jmp    0x7fb6f93

----------------
IN: 
0x07fb6c06:  cmp    $0x2,%eax
0x07fb6c09:  je     0x7fb6ce8

----------------
IN: 
0x07fb6ce8:  mov    0x70(%ebp),%edi
0x07fb6ceb:  movl   $0x0,0x84(%esp)
0x07fb6cf6:  movl   $0x0,0x88(%esp)
0x07fb6d01:  mov    (%esp),%edx
0x07fb6d04:  mov    %ebp,%eax
0x07fb6d06:  call   0x7fac98d

----------------
IN: 
0x07fb6d0b:  mov    %eax,%esi
0x07fb6d0d:  lea    0x38(%ebp),%eax
0x07fb6d10:  mov    (%esp),%edx
0x07fb6d13:  call   0x7fac98d

----------------
IN: 
0x07fb6d18:  test   %eax,%eax
0x07fb6d1a:  je     0x7fb6d54

----------------
IN: 
0x07fb6d1c:  test   %esi,%esi
0x07fb6d1e:  je     0x7fb6d54

----------------
IN: 
0x07fb6d20:  mov    0x4(%esi),%ecx
0x07fb6d23:  test   %ecx,%ecx
0x07fb6d25:  je     0x7fb6d54

----------------
IN: 
0x07fb6d27:  mov    0x4(%eax),%ebx
0x07fb6d2a:  test   %ebx,%ebx
0x07fb6d2c:  je     0x7fb6d54

----------------
IN: 
0x07fb6d2e:  movzbl 0x74(%ebp),%eax
0x07fb6d32:  mov    %eax,%edx
0x07fb6d34:  mov    %eax,0x8(%esp)
0x07fb6d38:  add    %edi,%eax
0x07fb6d3a:  jb     0x7fb6d54

----------------
IN: 
0x07fb6d3c:  mov    (%esi),%esi
0x07fb6d3e:  cmp    0x84(%esi),%eax
0x07fb6d44:  ja     0x7fb6d54

----------------
IN: 
0x07fb6d46:  lea    -0x1(%edx),%eax
0x07fb6d49:  cmp    $0x7,%al
0x07fb6d4b:  ja     0x7fb6d54

----------------
IN: 
0x07fb6d4d:  lea    -0x1(%edx),%eax
0x07fb6d50:  test   %edx,%eax
0x07fb6d52:  je     0x7fb6d63

----------------
IN: 
0x07fb6d63:  lea    (%ecx,%edi,1),%eax
0x07fb6d66:  lea    0x84(%esp),%edx
0x07fb6d6d:  mov    %edx,%edi
0x07fb6d6f:  mov    %eax,%esi
0x07fb6d71:  mov    0x8(%esp),%ecx
0x07fb6d75:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fb6d75:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fb6d77:  mov    %ebx,%ecx
0x07fb6d79:  xor    %ebx,%ebx
0x07fb6d7b:  add    %ecx,0x84(%esp)
0x07fb6d82:  adc    %ebx,0x88(%esp)
0x07fb6d89:  mov    %eax,%edi
0x07fb6d8b:  mov    %edx,%esi
0x07fb6d8d:  mov    0x8(%esp),%ecx
0x07fb6d91:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fb6d91:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fb6d93:  jmp    0x7fb6f93

----------------
IN: 
0x07fb6c0f:  jmp    0x7fb6f93

----------------
IN: 
0x07fb6f9b:  mov    (%esp),%eax
0x07fb6f9e:  call   0x7fadb56

----------------
IN: 
0x07fb6fa3:  mov    0x4(%esp),%eax
0x07fb6fa7:  call   0x7fadb56

----------------
IN: 
0x07fb6fac:  jmp    0x7fb6fbf

----------------
IN: 
0x07fb6fbf:  mov    $0xf5d00,%edi
0x07fb6fc4:  mov    $0xf550f,%ebx
0x07fb6fc9:  and    $0xfffffff0,%ebx
0x07fb6fcc:  mov    %edi,%esi
0x07fb6fce:  and    $0xfffffff0,%esi
0x07fb6fd1:  cmp    %esi,%ebx
0x07fb6fd3:  ja     0x7fb6fed

----------------
IN: 
0x07fb6fd5:  mov    %ebx,0x8(%esp)
0x07fb6fd9:  mov    %edi,%edx
0x07fb6fdb:  sub    %ebx,%edx
0x07fb6fdd:  mov    %ebx,%eax
0x07fb6fdf:  call   0x7facf9e

----------------
IN: 
0x07facf9e:  push   %edi
0x07facf9f:  push   %esi
0x07facfa0:  push   %ebx
0x07facfa1:  mov    %eax,%ebx
0x07facfa3:  mov    %edx,%edi
0x07facfa5:  mov    (%eax),%eax
0x07facfa7:  xor    $0x20445352,%eax
0x07facfac:  mov    0x4(%ebx),%edx
0x07facfaf:  xor    $0x20525450,%edx
0x07facfb5:  or     %edx,%eax
0x07facfb7:  jne    0x7facffd

----------------
IN: 
0x07facffd:  or     $0xffffffff,%eax
0x07fad000:  pop    %ebx
0x07fad001:  pop    %esi
0x07fad002:  pop    %edi
0x07fad003:  ret    

----------------
IN: 
0x07fb6fe4:  test   %eax,%eax
0x07fb6fe6:  jns    0x7fb6ff5

----------------
IN: 
0x07fb6fe8:  add    $0x10,%ebx
0x07fb6feb:  jmp    0x7fb6fd1

----------------
IN: 
0x07fb6fd1:  cmp    %esi,%ebx
0x07fb6fd3:  ja     0x7fb6fed

----------------
IN: 
0x07facfb9:  cmp    $0x13,%edi
0x07facfbc:  jbe    0x7facffd

----------------
IN: 
0x07facfbe:  mov    $0x14,%edx
0x07facfc3:  mov    %ebx,%eax
0x07facfc5:  call   0xeaaa5

----------------
IN: 
0x07facfca:  mov    %al,%dl
0x07facfcc:  or     $0xffffffff,%eax
0x07facfcf:  test   %dl,%dl
0x07facfd1:  jne    0x7fad000

----------------
IN: 
0x07facfd3:  cmpb   $0x1,0xf(%ebx)
0x07facfd7:  jbe    0x7facff4

----------------
IN: 
0x07facff4:  mov    $0x14,%esi
0x07facff9:  mov    %esi,%eax
0x07facffb:  jmp    0x7fad000

----------------
IN: 
0x07fad000:  pop    %ebx
0x07fad001:  pop    %esi
0x07fad002:  pop    %edi
0x07fad003:  ret    

----------------
IN: 
0x07fb6ff5:  mov    0x8(%esp),%eax
0x07fb6ff9:  mov    %eax,0xf53f8
0x07fb6ffe:  test   %eax,%eax
0x07fb7000:  je     0x7fb7155

----------------
IN: 
0x07fb7006:  call   0x7fb2aeb

----------------
IN: 
0x07fb2aeb:  push   %esi
0x07fb2aec:  push   %ebx
0x07fb2aed:  sub    $0x2c,%esp
0x07fb2af0:  mov    $0x50434146,%eax
0x07fb2af5:  call   0xedace

----------------
IN: 
0x000edace:  push   %esi
0x000edacf:  push   %ebx
0x000edad0:  mov    0xf53f8,%ebx
0x000edad6:  test   %ebx,%ebx
0x000edad8:  je     0xedb73

----------------
IN: 
0x000edade:  cmpl   $0x20525450,0x4(%ebx)
0x000edae5:  jne    0xedb71

----------------
IN: 
0x000edaeb:  cmpl   $0x20445352,(%ebx)
0x000edaf1:  jne    0xedb71

----------------
IN: 
0x000edaf3:  mov    %eax,%edx
0x000edaf5:  mov    0x10(%ebx),%ecx
0x000edaf8:  mov    0x18(%ebx),%eax
0x000edafb:  cmpl   $0x0,0x1c(%ebx)
0x000edaff:  jne    0xedb37

----------------
IN: 
0x000edb01:  test   %eax,%eax
0x000edb03:  je     0xedb37

----------------
IN: 
0x000edb37:  xor    %ebx,%ebx
0x000edb39:  test   %ecx,%ecx
0x000edb3b:  je     0xedb73

----------------
IN: 
0x000edb3d:  cmpl   $0x54445352,(%ecx)
0x000edb43:  jne    0xedb73

----------------
IN: 
0x000edb45:  mov    0x4(%ecx),%esi
0x000edb48:  add    %ecx,%esi
0x000edb4a:  lea    0x24(%ecx),%eax
0x000edb4d:  jmp    0xedb52

----------------
IN: 
0x000edb52:  cmp    %eax,%esi
0x000edb54:  jbe    0xedb71

----------------
IN: 
0x000edb56:  mov    (%eax),%ebx
0x000edb58:  test   %ebx,%ebx
0x000edb5a:  je     0xedb4f

----------------
IN: 
0x000edb5c:  cmp    %edx,(%ebx)
0x000edb5e:  jne    0xedb4f

----------------
IN: 
0x000edb60:  push   %ebx
0x000edb61:  push   %edx
0x000edb62:  push   $0xf078c
0x000edb67:  call   0xec4d8

----------------
IN: 
0x000edb6c:  add    $0xc,%esp
0x000edb6f:  jmp    0xedb73

----------------
IN: 
0x000edb73:  mov    %ebx,%eax
0x000edb75:  pop    %ebx
0x000edb76:  pop    %esi
0x000edb77:  ret    

----------------
IN: 
0x07fb2afa:  test   %eax,%eax
0x07fb2afc:  je     0x7fb2b34

----------------
IN: 
0x07fb2afe:  mov    0x28(%eax),%ebx
0x07fb2b01:  test   %ebx,%ebx
0x07fb2b03:  je     0x7fb2b34

----------------
IN: 
0x07fb2b05:  mov    0x4(%ebx),%esi
0x07fb2b08:  push   %esi
0x07fb2b09:  push   %ebx
0x07fb2b0a:  push   $0xf164f
0x07fb2b0f:  call   0xec4d8

----------------
IN: 
0x07fb2b14:  mov    $0x2c,%ecx
0x07fb2b19:  xor    %edx,%edx
0x07fb2b1b:  lea    0xc(%esp),%eax
0x07fb2b1f:  call   0xeab7b

----------------
IN: 
0x07fb2b24:  push   %esi
0x07fb2b25:  mov    $0x24,%ecx
0x07fb2b2a:  mov    %ebx,%edx
0x07fb2b2c:  call   0x7fb2a8a

----------------
IN: 
0x07fb2a8a:  push   %ebp
0x07fb2a8b:  push   %edi
0x07fb2a8c:  push   %esi
0x07fb2a8d:  push   %ebx
0x07fb2a8e:  mov    %eax,%esi
0x07fb2a90:  mov    %edx,%ebp
0x07fb2a92:  mov    %ecx,%ebx
0x07fb2a94:  mov    0x14(%esp),%edi
0x07fb2a98:  lea    0x0(%ebp,%ebx,1),%edx
0x07fb2a9c:  mov    %esi,%eax
0x07fb2a9e:  call   0x7fb27be

----------------
IN: 
0x07fb27be:  push   %ebp
0x07fb27bf:  push   %edi
0x07fb27c0:  push   %esi
0x07fb27c1:  push   %ebx
0x07fb27c2:  sub    $0x10,%esp
0x07fb27c5:  mov    %eax,%edi
0x07fb27c7:  mov    0x28(%eax),%eax
0x07fb27ca:  cmp    $0x10,%eax
0x07fb27cd:  jne    0x7fb27f1

----------------
IN: 
0x07fb27f1:  mov    %edx,%esi
0x07fb27f3:  inc    %eax
0x07fb27f4:  mov    %eax,0x28(%edi)
0x07fb27f7:  movzbl (%edx),%ecx
0x07fb27fa:  cmp    $0x14,%cl
0x07fb27fd:  ja     0x7fb2806

----------------
IN: 
0x07fb27ff:  jmp    *0x7fbeeb4(,%ecx,4)

----------------
IN: 
0x07fb287a:  inc    %esi
0x07fb287b:  lea    0x8(%esp),%edx
0x07fb287f:  mov    %esi,%eax
0x07fb2881:  call   0x7fac0a4

----------------
IN: 
0x07fac0a4:  push   %esi
0x07fac0a5:  push   %ebx
0x07fac0a6:  mov    %eax,%ecx
0x07fac0a8:  mov    %edx,%eax
0x07fac0aa:  movl   $0x0,(%edx)
0x07fac0b0:  movzbl (%ecx),%edx
0x07fac0b3:  mov    %dl,%bl
0x07fac0b5:  shr    $0x6,%bl
0x07fac0b8:  cmp    $0x2,%bl
0x07fac0bb:  je     0x7fac0e2

----------------
IN: 
0x07fac0bd:  cmp    $0x3,%bl
0x07fac0c0:  je     0x7fac0d2

----------------
IN: 
0x07fac0c2:  dec    %bl
0x07fac0c4:  mov    $0x1,%ebx
0x07fac0c9:  jne    0x7fac103

----------------
IN: 
0x07fac0cb:  mov    $0x2,%ebx
0x07fac0d0:  jmp    0x7fac0f1

----------------
IN: 
0x07fac0f1:  movzbl 0x1(%ecx),%esi
0x07fac0f5:  shl    $0x4,%esi
0x07fac0f8:  or     (%eax),%esi
0x07fac0fa:  mov    %esi,(%eax)
0x07fac0fc:  mov    (%ecx),%dl
0x07fac0fe:  and    $0xf,%edx
0x07fac101:  or     %esi,%edx
0x07fac103:  mov    %edx,(%eax)
0x07fac105:  mov    %ebx,%eax
0x07fac107:  pop    %ebx
0x07fac108:  pop    %esi
0x07fac109:  ret    

----------------
IN: 
0x07fb2886:  mov    %eax,%ebx
0x07fb2888:  lea    (%esi,%eax,1),%edx
0x07fb288b:  mov    %edi,%eax
0x07fb288d:  call   0x7facdc0

----------------
IN: 
0x07facdc0:  push   %ebp
0x07facdc1:  push   %edi
0x07facdc2:  push   %esi
0x07facdc3:  push   %ebx
0x07facdc4:  sub    $0x8,%esp
0x07facdc7:  mov    %eax,(%esp)
0x07facdca:  mov    %edx,%esi
0x07facdcc:  mov    %eax,0x4(%esp)
0x07facdd0:  lea    0x1(%eax),%ebp
0x07facdd3:  mov    $0x1,%edi
0x07facdd8:  xor    %edx,%edx
0x07facdda:  lea    -0x1(%ebp),%ecx
0x07facddd:  lea    -0x1(%edi),%ebx
0x07facde0:  mov    -0x1(%esi,%edi,1),%al
0x07facde4:  cmp    $0x5a,%al
0x07facde6:  ja     0x7face01

----------------
IN: 
0x07face01:  cmp    $0x5e,%al
0x07face03:  je     0x7facea0

----------------
IN: 
0x07face09:  cmp    $0x5f,%al
0x07face0b:  je     0x7facea7

----------------
IN: 
0x07face11:  cmp    $0x5c,%al
0x07face13:  jne    0x7facebe

----------------
IN: 
0x07face19:  mov    $0x5c,%al
0x07face1b:  mov    %al,-0x1(%ebp)
0x07face1e:  inc    %edi
0x07face1f:  inc    %ebp
0x07face20:  mov    $0x1,%dl
0x07face22:  jmp    0x7facdda

----------------
IN: 
0x07facdda:  lea    -0x1(%ebp),%ecx
0x07facddd:  lea    -0x1(%edi),%ebx
0x07facde0:  mov    -0x1(%esi,%edi,1),%al
0x07facde4:  cmp    $0x5a,%al
0x07facde6:  ja     0x7face01

----------------
IN: 
0x07facde8:  cmp    $0x40,%al
0x07facdea:  ja     0x7facea7

----------------
IN: 
0x07facdf0:  cmp    $0x2e,%al
0x07facdf2:  je     0x7face3a

----------------
IN: 
0x07facdf4:  cmp    $0x2f,%al
0x07facdf6:  je     0x7face68

----------------
IN: 
0x07facdf8:  test   %al,%al
0x07facdfa:  je     0x7face24

----------------
IN: 
0x07face24:  test   %dl,%dl
0x07face26:  je     0x7face2c

----------------
IN: 
0x07face28:  mov    %ecx,0x4(%esp)
0x07face2c:  mov    %edi,%ebx
0x07face2e:  mov    0x4(%esp),%eax
0x07face32:  movb   $0x0,(%eax)
0x07face35:  jmp    0x7facec8

----------------
IN: 
0x07facec8:  mov    %ebx,%eax
0x07faceca:  add    $0x8,%esp
0x07facecd:  pop    %ebx
0x07facece:  pop    %esi
0x07facecf:  pop    %edi
0x07faced0:  pop    %ebp
0x07faced1:  ret    

----------------
IN: 
0x07fb2892:  lea    (%ebx,%eax,1),%ecx
0x07fb2895:  pushl  0x8(%esp)
0x07fb2899:  mov    %esi,%edx
0x07fb289b:  mov    %edi,%eax
0x07fb289d:  call   0x7fb2a8a

----------------
IN: 
0x07fb2806:  cmp    $0x5b,%cl
0x07fb2809:  je     0x7fb294a

----------------
IN: 
0x07fb294a:  movzbl 0x1(%edx),%ecx
0x07fb294e:  cmp    $0x81,%cl
0x07fb2951:  je     0x7fb29ba

----------------
IN: 
0x07fb2953:  ja     0x7fb2996

----------------
IN: 
0x07fb2955:  cmp    $0x1,%cl
0x07fb2958:  je     0x7fb29a8

----------------
IN: 
0x07fb295a:  cmp    $0x80,%cl
0x07fb295d:  jne    0x7fb2a63

----------------
IN: 
0x07fb2963:  lea    0x2(%edx),%edx
0x07fb2966:  mov    %edi,%eax
0x07fb2968:  call   0x7facdc0

----------------
IN: 
0x07facea7:  test   %dl,%dl
0x07facea9:  je     0x7faceaf

----------------
IN: 
0x07faceaf:  lea    0x4(%esp),%edx
0x07faceb3:  mov    %esi,%eax
0x07faceb5:  call   0x7fac9ca

----------------
IN: 
0x07fac9ca:  mov    %eax,%ecx
0x07fac9cc:  mov    %edx,%eax
0x07fac9ce:  mov    (%edx),%edx
0x07fac9d0:  test   %edx,%edx
0x07fac9d2:  je     0x7faca1f

----------------
IN: 
0x07fac9d4:  push   %esi
0x07fac9d5:  push   %ebx
0x07fac9d6:  mov    (%ecx),%bl
0x07fac9d8:  lea    0x1(%edx),%esi
0x07fac9db:  mov    %esi,(%eax)
0x07fac9dd:  mov    %bl,(%edx)
0x07fac9df:  mov    0x1(%ecx),%bl
0x07fac9e2:  cmp    $0x5f,%bl
0x07fac9e5:  je     0x7fac9f0

----------------
IN: 
0x07fac9e7:  mov    (%eax),%edx
0x07fac9e9:  lea    0x1(%edx),%esi
0x07fac9ec:  mov    %esi,(%eax)
0x07fac9ee:  mov    %bl,(%edx)
0x07fac9f0:  mov    0x2(%ecx),%bl
0x07fac9f3:  cmp    $0x5f,%bl
0x07fac9f6:  je     0x7faca01

----------------
IN: 
0x07fac9f8:  mov    (%eax),%edx
0x07fac9fa:  lea    0x1(%edx),%esi
0x07fac9fd:  mov    %esi,(%eax)
0x07fac9ff:  mov    %bl,(%edx)
0x07faca01:  mov    0x3(%ecx),%cl
0x07faca04:  cmp    $0x5f,%cl
0x07faca07:  je     0x7faca12

----------------
IN: 
0x07faca12:  mov    (%eax),%eax
0x07faca14:  movb   $0x0,(%eax)
0x07faca17:  mov    $0x4,%eax
0x07faca1c:  pop    %ebx
0x07faca1d:  pop    %esi
0x07faca1e:  ret    

----------------
IN: 
0x07faceba:  add    %eax,%ebx
0x07facebc:  jmp    0x7facec8

----------------
IN: 
0x07fb296d:  lea    0x3(%eax),%ebx
0x07fb2970:  lea    0x24(%edi),%edx
0x07fb2973:  lea    (%esi,%ebx,1),%eax
0x07fb2976:  xor    %ecx,%ecx
0x07fb2978:  mov    %edx,(%esp)
0x07fb297b:  call   0x7faced2

----------------
IN: 
0x07faced2:  push   %ebx
0x07faced3:  mov    %ecx,%ebx
0x07faced5:  cmpb   $0xc,(%eax)
0x07faced8:  ja     0x7facf16

----------------
IN: 
0x07faceda:  movzbl (%eax),%ecx
0x07facedd:  jmp    *0x7fbee6c(,%ecx,4)

----------------
IN: 
0x07facefd:  movzwl 0x1(%eax),%eax
0x07facf01:  xor    %edx,%edx
0x07facf03:  mov    $0x3,%ecx
0x07facf08:  jmp    0x7facf29

----------------
IN: 
0x07facf29:  test   %ebx,%ebx
0x07facf2b:  je     0x7facf32

----------------
IN: 
0x07facf32:  mov    %ecx,%eax
0x07facf34:  pop    %ebx
0x07facf35:  ret    

----------------
IN: 
0x07fb2980:  add    %eax,%ebx
0x07fb2982:  lea    (%esi,%ebx,1),%eax
0x07fb2985:  xor    %ecx,%ecx
0x07fb2987:  mov    (%esp),%edx
0x07fb298a:  call   0x7faced2

----------------
IN: 
0x07facee4:  mov    $0x1,%ecx
0x07facee9:  mov    $0x1,%eax
0x07faceee:  jmp    0x7facf27

----------------
IN: 
0x07facf27:  xor    %edx,%edx
0x07facf29:  test   %ebx,%ebx
0x07facf2b:  je     0x7facf32

----------------
IN: 
0x07fb298f:  add    %eax,%ebx
0x07fb2991:  jmp    0x7fb2a7d

----------------
IN: 
0x07fb2a7d:  decl   0x28(%edi)
0x07fb2a80:  mov    %ebx,%eax
0x07fb2a82:  add    $0x10,%esp
0x07fb2a85:  pop    %ebx
0x07fb2a86:  pop    %esi
0x07fb2a87:  pop    %edi
0x07fb2a88:  pop    %ebp
0x07fb2a89:  ret    

----------------
IN: 
0x07fb2aa3:  add    %eax,%ebx
0x07fb2aa5:  cmp    %edi,%ebx
0x07fb2aa7:  je     0x7fb2ae6

----------------
IN: 
0x07fb2aa9:  jle    0x7fb2ac5

----------------
IN: 
0x07fb2ac5:  cmpl   $0x0,0x24(%esi)
0x07fb2ac9:  je     0x7fb2a98

----------------
IN: 
0x07fb2a98:  lea    0x0(%ebp,%ebx,1),%edx
0x07fb2a9c:  mov    %esi,%eax
0x07fb2a9e:  call   0x7fb27be

----------------
IN: 
0x07fb29ba:  or     $0x5b,%ch
0x07fb29bd:  lea    0x2(%esi),%edx
0x07fb29c0:  push   $0x1
0x07fb29c2:  mov    %edi,%eax
0x07fb29c4:  call   0x7fb277b

----------------
IN: 
0x07fb277b:  push   %esi
0x07fb277c:  push   %ebx
0x07fb277d:  sub    $0xc,%esp
0x07fb2780:  mov    %eax,%esi
0x07fb2782:  mov    %edx,%ebx
0x07fb2784:  push   %ecx
0x07fb2785:  push   $0xf15f0
0x07fb278a:  push   $0x8
0x07fb278c:  lea    0x10(%esp),%eax
0x07fb2790:  push   %eax
0x07fb2791:  call   0x7fb244c

----------------
IN: 
0x07fb244c:  push   %ebx
0x07fb244d:  sub    $0xc,%esp
0x07fb2450:  mov    0x14(%esp),%ebx
0x07fb2454:  mov    0x18(%esp),%edx
0x07fb2458:  xor    %eax,%eax
0x07fb245a:  test   %edx,%edx
0x07fb245c:  je     0x7fb2492

----------------
IN: 
0x07fb245e:  movl   $0x7fab680,(%esp)
0x07fb2465:  mov    %ebx,0x4(%esp)
0x07fb2469:  add    %ebx,%edx
0x07fb246b:  mov    %edx,0x8(%esp)
0x07fb246f:  lea    0x20(%esp),%ecx
0x07fb2473:  mov    0x1c(%esp),%edx
0x07fb2477:  mov    %esp,%eax
0x07fb2479:  call   0xebd11

----------------
IN: 
0x07fab680:  mov    0x4(%eax),%ecx
0x07fab683:  cmp    0x8(%eax),%ecx
0x07fab686:  jae    0x7fab68d

----------------
IN: 
0x07fab688:  mov    %dl,(%ecx)
0x07fab68a:  incl   0x4(%eax)
0x07fab68d:  ret    

----------------
IN: 
0x07fb247e:  mov    0x4(%esp),%eax
0x07fb2482:  mov    0x8(%esp),%edx
0x07fb2486:  cmp    %eax,%edx
0x07fb2488:  ja     0x7fb248d

----------------
IN: 
0x07fb248d:  movb   $0x0,(%eax)
0x07fb2490:  sub    %ebx,%eax
0x07fb2492:  add    $0xc,%esp
0x07fb2495:  pop    %ebx
0x07fb2496:  ret    

----------------
IN: 
0x07fb2796:  lea    0x10(%esp),%edx
0x07fb279a:  mov    %ebx,%eax
0x07fb279c:  call   0x7fac0a4

----------------
IN: 
0x07fac103:  mov    %edx,(%eax)
0x07fac105:  mov    %ebx,%eax
0x07fac107:  pop    %ebx
0x07fac108:  pop    %esi
0x07fac109:  ret    

----------------
IN: 
0x07fb27a1:  add    $0x10,%esp
0x07fb27a4:  cmpl   $0x0,0x18(%esp)
0x07fb27a9:  je     0x7fb27b5

----------------
IN: 
0x07fb27ab:  lea    (%ebx,%eax,1),%edx
0x07fb27ae:  mov    %esi,%eax
0x07fb27b0:  call   0x7facdc0

----------------
IN: 
0x07fb27b5:  mov    (%esp),%eax
0x07fb27b8:  add    $0xc,%esp
0x07fb27bb:  pop    %ebx
0x07fb27bc:  pop    %esi
0x07fb27bd:  ret    

----------------
IN: 
0x07fb29c9:  lea    0x2(%eax),%ebx
0x07fb29cc:  pop    %edx
0x07fb29cd:  jmp    0x7fb2a7d

----------------
IN: 
0x07fb290e:  lea    0x1(%edx),%edx
0x07fb2911:  push   $0x1
0x07fb2913:  mov    $0x14,%ecx
0x07fb2918:  mov    %edi,%eax
0x07fb291a:  call   0x7fb277b

----------------
IN: 
0x07faca09:  mov    (%eax),%edx
0x07faca0b:  lea    0x1(%edx),%ebx
0x07faca0e:  mov    %ebx,(%eax)
0x07faca10:  mov    %cl,(%edx)
0x07faca12:  mov    (%eax),%eax
0x07faca14:  movb   $0x0,(%eax)
0x07faca17:  mov    $0x4,%eax
0x07faca1c:  pop    %ebx
0x07faca1d:  pop    %esi
0x07faca1e:  ret    

----------------
IN: 
0x07fb291f:  lea    0x1(%eax),%ebx
0x07fb2922:  mov    0x20(%edi),%ebp
0x07fb2925:  pop    %ecx
0x07fb2926:  test   %ebp,%ebp
0x07fb2928:  je     0x7fb2a7d

----------------
IN: 
0x07fb2ae6:  pop    %ebx
0x07fb2ae7:  pop    %esi
0x07fb2ae8:  pop    %edi
0x07fb2ae9:  pop    %ebp
0x07fb2aea:  ret    

----------------
IN: 
0x07fb28a2:  mov    0xc(%esp),%eax
0x07fb28a6:  jmp    0x7fb2906

----------------
IN: 
0x07fb2906:  lea    0x1(%eax),%ebx
0x07fb2909:  jmp    0x7fb29cc

----------------
IN: 
0x07fb29cc:  pop    %edx
0x07fb29cd:  jmp    0x7fb2a7d

----------------
IN: 
0x07fb2996:  cmp    $0x82,%cl
0x07fb2999:  je     0x7fb29d2

----------------
IN: 
0x07fb29d2:  add    $0x2,%esi
0x07fb29d5:  lea    0x8(%esp),%edx
0x07fb29d9:  mov    %esi,%eax
0x07fb29db:  call   0x7fac0a4

----------------
IN: 
0x07fb29e0:  mov    %eax,%ebx
0x07fb29e2:  lea    (%esi,%eax,1),%edx
0x07fb29e5:  mov    %edi,%eax
0x07fb29e7:  call   0x7facdc0

----------------
IN: 
0x07fb29ec:  add    %eax,%ebx
0x07fb29ee:  mov    $0x28,%eax
0x07fb29f3:  call   0x7fae09f

----------------
IN: 
0x07fb29f8:  mov    %eax,0x20(%edi)
0x07fb29fb:  test   %eax,%eax
0x07fb29fd:  jne    0x7fb2a1b

----------------
IN: 
0x07fb2a1b:  mov    $0x28,%ecx
0x07fb2a20:  xor    %edx,%edx
0x07fb2a22:  call   0xeab7b

----------------
IN: 
0x07fb2a27:  mov    0x20(%edi),%eax
0x07fb2a2a:  mov    $0x7fbfbf0,%edx
0x07fb2a2f:  call   0x7fab66f

----------------
IN: 
0x07fb2a34:  add    $0x8,%eax
0x07fb2a37:  mov    $0x20,%ecx
0x07fb2a3c:  mov    %edi,%edx
0x07fb2a3e:  call   0x7fab6af

----------------
IN: 
0x07fb2a43:  pushl  0x8(%esp)
0x07fb2a47:  mov    %ebx,%ecx
0x07fb2a49:  mov    %esi,%edx
0x07fb2a4b:  mov    %edi,%eax
0x07fb2a4d:  call   0x7fb2a8a

----------------
IN: 
0x07fb2814:  lea    0x1(%edx),%edx
0x07fb2817:  mov    %edi,%eax
0x07fb2819:  call   0x7facdc0

----------------
IN: 
0x07fb281e:  lea    0x1(%eax),%ebx
0x07fb2821:  lea    (%esi,%ebx,1),%edx
0x07fb2824:  mov    %edi,%eax
0x07fb2826:  call   0x7fb27be

----------------
IN: 
0x07fb285e:  mov    $0x5,%ebx
0x07fb2863:  jmp    0x7fb2a7d

----------------
IN: 
0x07fb282b:  add    %eax,%ebx
0x07fb282d:  mov    0x20(%edi),%ebp
0x07fb2830:  test   %ebp,%ebp
0x07fb2832:  je     0x7fb2a7d

----------------
IN: 
0x07fb2838:  mov    $0xf160a,%edx
0x07fb283d:  mov    %edi,%eax
0x07fb283f:  call   0xe9971

----------------
IN: 
0x07fb2844:  test   %eax,%eax
0x07fb2846:  jne    0x7fb292e

----------------
IN: 
0x07fb284c:  mov    %esi,0x18(%ebp)
0x07fb284f:  jmp    0x7fb292e

----------------
IN: 
0x07fb292e:  mov    $0xf1614,%edx
0x07fb2933:  mov    %edi,%eax
0x07fb2935:  call   0xe9971

----------------
IN: 
0x07fb293a:  test   %eax,%eax
0x07fb293c:  jne    0x7fb2a7d

----------------
IN: 
0x07fb2a78:  mov    $0x1,%ebx
0x07fb2a7d:  decl   0x28(%edi)
0x07fb2a80:  mov    %ebx,%eax
0x07fb2a82:  add    $0x10,%esp
0x07fb2a85:  pop    %ebx
0x07fb2a86:  pop    %esi
0x07fb2a87:  pop    %edi
0x07fb2a88:  pop    %ebp
0x07fb2a89:  ret    

----------------
IN: 
0x07fb2a52:  movl   $0x0,0x20(%edi)
0x07fb2a59:  mov    0xc(%esp),%ebx
0x07fb2a5d:  pop    %eax
0x07fb2a5e:  add    $0x2,%ebx
0x07fb2a61:  jmp    0x7fb2a7d

----------------
IN: 
0x07facf0a:  mov    0x1(%eax),%eax
0x07facf0d:  xor    %edx,%edx
0x07facf0f:  mov    $0x5,%ecx
0x07facf14:  jmp    0x7facf29

----------------
IN: 
0x07fb2942:  mov    %esi,0x1c(%ebp)
0x07fb2945:  jmp    0x7fb2a7d

----------------
IN: 
0x07fb28a8:  inc    %esi
0x07fb28a9:  lea    0x4(%esp),%edx
0x07fb28ad:  mov    %esi,%eax
0x07fb28af:  call   0x7fac0a4

----------------
IN: 
0x07fb28b4:  mov    %eax,%ebx
0x07fb28b6:  lea    0x24(%edi),%edx
0x07fb28b9:  lea    (%esi,%eax,1),%eax
0x07fb28bc:  lea    0x8(%esp),%ecx
0x07fb28c0:  call   0x7faced2

----------------
IN: 
0x07facef0:  movzbl 0x1(%eax),%eax
0x07facef4:  xor    %edx,%edx
0x07facef6:  mov    $0x2,%ecx
0x07facefb:  jmp    0x7facf29

----------------
IN: 
0x07facf2d:  mov    %eax,(%ebx)
0x07facf2f:  mov    %edx,0x4(%ebx)
0x07facf32:  mov    %ecx,%eax
0x07facf34:  pop    %ebx
0x07facf35:  ret    

----------------
IN: 
0x07fb28c5:  mov    %eax,(%esp)
0x07fb28c8:  mov    0x20(%edi),%ebp
0x07fb28cb:  test   %ebp,%ebp
0x07fb28cd:  je     0x7fb28ee

----------------
IN: 
0x07fb28cf:  mov    $0xf160f,%edx
0x07fb28d4:  mov    %edi,%eax
0x07fb28d6:  call   0xe9971

----------------
IN: 
0x07fb28db:  test   %eax,%eax
0x07fb28dd:  jne    0x7fb28ee

----------------
IN: 
0x07fb28df:  add    (%esp),%ebx
0x07fb28e2:  add    %ebx,%esi
0x07fb28e4:  mov    %esi,0x20(%ebp)
0x07fb28e7:  mov    0x8(%esp),%eax
0x07fb28eb:  mov    %eax,0x24(%ebp)
0x07fb28ee:  mov    0x4(%esp),%eax
0x07fb28f2:  lea    0x1(%eax),%ebx
0x07fb28f5:  jmp    0x7fb2a7d

----------------
IN: 
0x07face3a:  test   %dl,%dl
0x07face3c:  je     0x7face42

----------------
IN: 
0x07face42:  lea    (%esi,%edi,1),%eax
0x07face45:  lea    0x4(%esp),%edx
0x07face49:  call   0x7fac9ca

----------------
IN: 
0x07face4e:  lea    (%edi,%eax,1),%ebx
0x07face51:  mov    0x4(%esp),%eax
0x07face55:  lea    0x1(%eax),%edx
0x07face58:  mov    %edx,0x4(%esp)
0x07face5c:  movb   $0x2e,(%eax)
0x07face5f:  lea    (%esi,%ebx,1),%eax
0x07face62:  lea    0x4(%esp),%edx
0x07face66:  jmp    0x7faceb5

----------------
IN: 
0x07faceb5:  call   0x7fac9ca

----------------
IN: 
0x07face68:  test   %dl,%dl
0x07face6a:  je     0x7face70

----------------
IN: 
0x07face70:  movzbl (%esi,%edi,1),%ebp
0x07face74:  lea    0x1(%edi),%ebx
0x07face77:  xor    %edi,%edi
0x07face79:  cmp    %edi,%ebp
0x07face7b:  jle    0x7facec8

----------------
IN: 
0x07face7d:  test   %edi,%edi
0x07face7f:  je     0x7face8f

----------------
IN: 
0x07face8f:  lea    (%esi,%ebx,1),%eax
0x07face92:  lea    0x4(%esp),%edx
0x07face96:  call   0x7fac9ca

----------------
IN: 
0x07face9b:  add    %eax,%ebx
0x07face9d:  inc    %edi
0x07face9e:  jmp    0x7face79

----------------
IN: 
0x07face79:  cmp    %edi,%ebp
0x07face7b:  jle    0x7facec8

----------------
IN: 
0x07face81:  mov    0x4(%esp),%eax
0x07face85:  lea    0x1(%eax),%edx
0x07face88:  mov    %edx,0x4(%esp)
0x07face8c:  movb   $0x2e,(%eax)
0x07face8f:  lea    (%esi,%ebx,1),%eax
0x07face92:  lea    0x4(%esp),%edx
0x07face96:  call   0x7fac9ca

----------------
IN: 
0x07fb2a6a:  mov    $0x2,%ebx
0x07fb2a6f:  jmp    0x7fb2a7d

----------------
IN: 
0x07fb28fa:  lea    0x1(%edx),%edx
0x07fb28fd:  push   $0x0
0x07fb28ff:  mov    %edi,%eax
0x07fb2901:  call   0x7fb277b

----------------
IN: 
0x07fb28ee:  mov    0x4(%esp),%eax
0x07fb28f2:  lea    0x1(%eax),%ebx
0x07fb28f5:  jmp    0x7fb2a7d

----------------
IN: 
0x07fb29a8:  lea    0x2(%edx),%edx
0x07fb29ab:  mov    %edi,%eax
0x07fb29ad:  call   0x7facdc0

----------------
IN: 
0x07fb29b2:  lea    0x3(%eax),%ebx
0x07fb29b5:  jmp    0x7fb2a7d

----------------
IN: 
0x07face6c:  mov    %ecx,0x4(%esp)
0x07face70:  movzbl (%esi,%edi,1),%ebp
0x07face74:  lea    0x1(%edi),%ebx
0x07face77:  xor    %edi,%edi
0x07face79:  cmp    %edi,%ebp
0x07face7b:  jle    0x7facec8

----------------
IN: 
0x07fb2868:  mov    $0x1,%ebx
0x07fb286d:  mov    (%esi,%ebx,1),%al
0x07fb2870:  inc    %ebx
0x07fb2871:  test   %al,%al
0x07fb2873:  jne    0x7fb286d

----------------
IN: 
0x07fb286d:  mov    (%esi,%ebx,1),%al
0x07fb2870:  inc    %ebx
0x07fb2871:  test   %al,%al
0x07fb2873:  jne    0x7fb286d

----------------
IN: 
0x07fb2875:  jmp    0x7fb2a7d

----------------
IN: 
0x07face3e:  mov    %ecx,0x4(%esp)
0x07face42:  lea    (%esi,%edi,1),%eax
0x07face45:  lea    0x4(%esp),%edx
0x07face49:  call   0x7fac9ca

----------------
IN: 
0x07fb299b:  lea    0x7d(%ecx),%eax
0x07fb299e:  cmp    $0x2,%al
0x07fb29a0:  ja     0x7fb2a63

----------------
IN: 
0x07fb29a6:  jmp    0x7fb29ba

----------------
IN: 
0x07faceab:  mov    %ecx,0x4(%esp)
0x07faceaf:  lea    0x4(%esp),%edx
0x07faceb3:  mov    %esi,%eax
0x07faceb5:  call   0x7fac9ca

----------------
IN: 
0x07fac9f0:  mov    0x2(%ecx),%bl
0x07fac9f3:  cmp    $0x5f,%bl
0x07fac9f6:  je     0x7faca01

----------------
IN: 
0x07fb2b31:  add    $0x10,%esp
0x07fb2b34:  add    $0x2c,%esp
0x07fb2b37:  pop    %ebx
0x07fb2b38:  pop    %esi
0x07fb2b39:  ret    

----------------
IN: 
0x07fb700b:  mov    $0xf1f90,%edx
0x07fb7010:  xor    %eax,%eax
0x07fb7012:  call   0x7fb26a9

----------------
IN: 
0x07fb26a9:  push   %edi
0x07fb26aa:  push   %esi
0x07fb26ab:  push   %ebx
0x07fb26ac:  sub    $0xc,%esp
0x07fb26af:  mov    %eax,%ebx
0x07fb26b1:  push   %edx
0x07fb26b2:  push   $0xf15e3
0x07fb26b7:  push   $0xa
0x07fb26b9:  lea    0xe(%esp),%esi
0x07fb26bd:  push   %esi
0x07fb26be:  call   0x7fb244c

----------------
IN: 
0x07fb26c3:  mov    %eax,%edi
0x07fb26c5:  add    $0x10,%esp
0x07fb26c8:  test   %ebx,%ebx
0x07fb26ca:  jne    0x7fb26dd

----------------
IN: 
0x07fb26cc:  mov    0x7fbfbf0,%ebx
0x07fb26d2:  test   %ebx,%ebx
0x07fb26d4:  je     0x7fb26f1

----------------
IN: 
0x07fb26d6:  mov    0x18(%ebx),%eax
0x07fb26d9:  test   %eax,%eax
0x07fb26db:  jne    0x7fb26e1

----------------
IN: 
0x07fb26dd:  mov    (%ebx),%ebx
0x07fb26df:  jmp    0x7fb26d2

----------------
IN: 
0x07fb26d2:  test   %ebx,%ebx
0x07fb26d4:  je     0x7fb26f1

----------------
IN: 
0x07fb26e1:  add    $0x5,%eax
0x07fb26e4:  mov    %edi,%ecx
0x07fb26e6:  mov    %esi,%edx
0x07fb26e8:  call   0x7fab68e

----------------
IN: 
0x07fb26ed:  test   %eax,%eax
0x07fb26ef:  jne    0x7fb26dd

----------------
IN: 
0x07fb26f1:  mov    %ebx,%eax
0x07fb26f3:  add    $0xc,%esp
0x07fb26f6:  pop    %ebx
0x07fb26f7:  pop    %esi
0x07fb26f8:  pop    %edi
0x07fb26f9:  ret    

----------------
IN: 
0x07fb7017:  mov    %eax,%ebx
0x07fb7019:  test   %eax,%eax
0x07fb701b:  je     0x7fb7cbc

----------------
IN: 
0x07fb7cbc:  add    $0xd4,%esp
0x07fb7cc2:  pop    %ebx
0x07fb7cc3:  pop    %esi
0x07fb7cc4:  pop    %edi
0x07fb7cc5:  pop    %ebp
0x07fb7cc6:  ret    

----------------
IN: 
0x07fb93b6:  cmpw   $0x40,0xf6038
0x07fb93be:  je     0x7fb940d

----------------
IN: 
0x07fb93c0:  mov    $0x34,%al
0x07fb93c2:  out    %al,$0x43
0x07fb93c4:  xor    %eax,%eax
0x07fb93c6:  out    %al,$0x40
0x07fb93c8:  out    %al,$0x40
0x07fb93ca:  mov    $0x8a,%dl
0x07fb93cc:  mov    %dl,%al
0x07fb93ce:  out    %al,$0x70
0x07fb93d0:  mov    $0x26,%al
0x07fb93d2:  out    %al,$0x71
0x07fb93d4:  mov    $0x8b,%al
0x07fb93d6:  out    %al,$0x70
0x07fb93d8:  in     $0x71,%al
0x07fb93da:  and    $0x1,%eax
0x07fb93dd:  or     $0x2,%eax
0x07fb93e0:  out    %al,$0x71
0x07fb93e2:  mov    $0x8c,%al
0x07fb93e4:  out    %al,$0x70
0x07fb93e6:  in     $0x71,%al
0x07fb93e8:  mov    $0x8d,%al
0x07fb93ea:  out    %al,$0x70
0x07fb93ec:  in     $0x71,%al
0x07fb93ee:  mov    %dl,%al
0x07fb93f0:  out    %al,$0x70
0x07fb93f2:  in     $0x71,%al
0x07fb93f4:  test   %al,%al
0x07fb93f6:  jns    0x7fb953b

----------------
IN: 
0x07fb953b:  mov    $0x80,%al
0x07fb953d:  out    %al,$0x70
0x07fb953f:  in     $0x71,%al
0x07fb9541:  mov    %al,%cl
0x07fb9543:  mov    $0x82,%al
0x07fb9545:  out    %al,$0x70
0x07fb9547:  in     $0x71,%al
0x07fb9549:  mov    %al,%bl
0x07fb954b:  mov    $0x84,%al
0x07fb954d:  out    %al,$0x70
0x07fb954f:  in     $0x71,%al
0x07fb9551:  mov    %al,%dl
0x07fb9553:  shr    $0x4,%dl
0x07fb9556:  movzbl %dl,%edx
0x07fb9559:  imul   $0xa,%edx,%edx
0x07fb955c:  and    $0xf,%eax
0x07fb955f:  add    %edx,%eax
0x07fb9561:  imul   $0x3c,%eax,%eax
0x07fb9564:  mov    %bl,%dl
0x07fb9566:  shr    $0x4,%dl
0x07fb9569:  movzbl %dl,%edx
0x07fb956c:  imul   $0xa,%edx,%edx
0x07fb956f:  and    $0xf,%ebx
0x07fb9572:  add    %ebx,%edx
0x07fb9574:  add    %edx,%eax
0x07fb9576:  imul   $0x3c,%eax,%eax
0x07fb9579:  mov    %cl,%dl
0x07fb957b:  shr    $0x4,%dl
0x07fb957e:  movzbl %dl,%edx
0x07fb9581:  imul   $0xa,%edx,%edx
0x07fb9584:  and    $0xf,%ecx
0x07fb9587:  add    %ecx,%edx
0x07fb9589:  add    %edx,%eax
0x07fb958b:  imul   $0x3e8,%eax,%eax
0x07fb9591:  mov    $0x369e99,%edx
0x07fb9596:  mul    %edx
0x07fb9598:  add    $0xffff,%eax
0x07fb959d:  adc    $0x0,%edx
0x07fb95a0:  shrd   $0x10,%edx,%eax
0x07fb95a4:  shr    $0x10,%edx
0x07fb95a7:  add    $0xbb7,%eax
0x07fb95ac:  mov    $0xbb8,%ecx
0x07fb95b1:  xor    %edx,%edx
0x07fb95b3:  div    %ecx
0x07fb95b5:  mov    %eax,0x46c
0x07fb95ba:  mov    $0xb2,%al
0x07fb95bc:  out    %al,$0x70
0x07fb95be:  in     $0x71,%al
0x07fb95c0:  mov    %al,0xe8f38
0x07fb95c5:  mov    $0xffea5,%edx
0x07fb95ca:  movzwl %dx,%edx
0x07fb95cd:  or     $0xf0000000,%edx
0x07fb95d3:  xor    %eax,%eax
0x07fb95d5:  call   0x7fad04c

----------------
IN: 
0x07fad07a:  mov    %ebx,0x0(,%eax,4)
0x07fad081:  pop    %ebx
0x07fad082:  pop    %esi
0x07fad083:  ret    

----------------
IN: 
0x07fb95da:  mov    $0xfd425,%edx
0x07fb95df:  movzwl %dx,%edx
0x07fb95e2:  or     $0xf0000000,%edx
0x07fb95e8:  mov    $0x8,%eax
0x07fb95ed:  call   0x7fad04c

----------------
IN: 
0x07fb95f2:  mov    $0x324d5054,%eax
0x07fb95f7:  call   0xedace

----------------
IN: 
0x000edb4f:  add    $0x4,%eax
0x000edb52:  cmp    %eax,%esi
0x000edb54:  jbe    0xedb71

----------------
IN: 
0x000edb71:  xor    %ebx,%ebx
0x000edb73:  mov    %ebx,%eax
0x000edb75:  pop    %ebx
0x000edb76:  pop    %esi
0x000edb77:  ret    

----------------
IN: 
0x07fb95fc:  test   %eax,%eax
0x07fb95fe:  jne    0x7fb9613

----------------
IN: 
0x07fb9600:  mov    $0x41504354,%eax
0x07fb9605:  call   0xedace

----------------
IN: 
0x07fb960a:  test   %eax,%eax
0x07fb960c:  jne    0x7fb9634

----------------
IN: 
0x07fb960e:  jmp    0x7fb99d2

----------------
IN: 
0x07fb99d2:  add    $0xa8,%esp
0x07fb99d8:  pop    %ebx
0x07fb99d9:  pop    %esi
0x07fb99da:  pop    %edi
0x07fb99db:  pop    %ebp
0x07fb99dc:  ret    

----------------
IN: 
0x07fbbac6:  call   0xea062

----------------
IN: 
0x000ea062:  xor    %eax,%eax
0x000ea064:  cmpb   $0x2,0xf54e0
0x000ea06b:  jne    0xea079

----------------
IN: 
0x000ea079:  ret    

----------------
IN: 
0x07fbbacb:  test   %eax,%eax
0x07fbbacd:  je     0x7fbbad4

----------------
IN: 
0x07fbbad4:  push   $0xf3ed1
0x07fbbad9:  call   0xec4d8

----------------
IN: 
0x07fbbade:  mov    $0x1,%edx
0x07fbbae3:  xor    %ecx,%ecx
0x07fbbae5:  mov    $0xf3eea,%eax
0x07fbbaea:  call   0x7fad81f

----------------
IN: 
0x07fbbaef:  mov    %eax,0xf54d0
0x07fbbaf4:  mov    $0x1,%edx
0x07fbbaf9:  xor    %ecx,%ecx
0x07fbbafb:  mov    $0xf3f02,%eax
0x07fbbb00:  call   0x7fad81f

----------------
IN: 
0x07fbbb05:  mov    %eax,0xf54cc
0x07fbbb0a:  mov    $0x2,%edx
0x07fbbb0f:  xor    %ecx,%ecx
0x07fbbb11:  mov    $0xf3f19,%eax
0x07fbbb16:  call   0x7fad81f

----------------
IN: 
0x07fbbb1b:  mov    %eax,0x7fbff38
0x07fbbb20:  mov    $0x1,%edx
0x07fbbb25:  xor    %ecx,%ecx
0x07fbbb27:  mov    $0xf3f30,%eax
0x07fbbb2c:  call   0x7fad81f

----------------
IN: 
0x07fbbb31:  mov    %eax,0xf54c8
0x07fbbb36:  call   0xe99b2

----------------
IN: 
0x000e99b2:  mov    0xf54d4,%eax
0x000e99b7:  mov    0xc(%eax),%eax
0x000e99ba:  sub    $0x10,%eax
0x000e99bd:  and    $0xfffff800,%eax
0x000e99c2:  ret    

----------------
IN: 
0x07fbbb3b:  lea    -0xc0000(%eax),%ecx
0x07fbbb41:  xor    %edx,%edx
0x07fbbb43:  mov    $0xc0000,%eax
0x07fbbb48:  call   0xeab7b

----------------
IN: 
0x07fbbb4d:  mov    0x7fbfde8,%eax
0x07fbbb52:  lea    -0x4(%eax),%ebx
0x07fbbb55:  pop    %edi
0x07fbbb56:  cmp    $0xfffffffc,%ebx
0x07fbbb59:  je     0x7fbbd43

----------------
IN: 
0x07fbbb5f:  mov    %ebx,%eax
0x07fbbb61:  call   0x7fac46f

----------------
IN: 
0x07fbbb66:  test   %eax,%eax
0x07fbbb68:  jne    0x7fbbb72

----------------
IN: 
0x07fbbb6a:  mov    0x4(%ebx),%ebx
0x07fbbb6d:  sub    $0x4,%ebx
0x07fbbb70:  jmp    0x7fbbb56

----------------
IN: 
0x07fbbb56:  cmp    $0xfffffffc,%ebx
0x07fbbb59:  je     0x7fbbd43

----------------
IN: 
0x07fbbb72:  mov    $0xf3f45,%edx
0x07fbbb77:  mov    $0xf12ce,%eax
0x07fbbb7c:  call   0xe9971

----------------
IN: 
0x07fbbb81:  test   %eax,%eax
0x07fbbb83:  jne    0x7fbbbae

----------------
IN: 
0x07fbbbae:  mov    $0xf3f56,%edx
0x07fbbbb3:  mov    $0xf12ce,%eax
0x07fbbbb8:  call   0xe9971

----------------
IN: 
0x07fbbbbd:  test   %eax,%eax
0x07fbbbbf:  jne    0x7fbbbd8

----------------
IN: 
0x07fbbbd8:  mov    $0xf3f61,%edx
0x07fbbbdd:  mov    $0xf12ce,%eax
0x07fbbbe2:  call   0xe9971

----------------
IN: 
0x07fbbbe7:  test   %eax,%eax
0x07fbbbe9:  jne    0x7fbbc14

----------------
IN: 
0x07fbbc14:  mov    $0xf3f6e,%edx
0x07fbbc19:  mov    $0xf12ce,%eax
0x07fbbc1e:  call   0xe9971

----------------
IN: 
0x07fbbc23:  test   %eax,%eax
0x07fbbc25:  jne    0x7fbbc50

----------------
IN: 
0x07fbbc50:  mov    0x10(%ebx),%eax
0x07fbbc53:  cmp    $0x1106,%ax
0x07fbbc57:  jne    0x7fbbd15

----------------
IN: 
0x07fbbd15:  cmp    $0x8086,%ax
0x07fbbd19:  jne    0x7fbbd33

----------------
IN: 
0x07fbbd33:  xor    %ecx,%ecx
0x07fbbd35:  mov    $0x1,%edx
0x07fbbd3a:  mov    %ebx,%eax
0x07fbbd3c:  call   0x7fb515d

----------------
IN: 
0x07fb515d:  push   %ebp
0x07fb515e:  push   %edi
0x07fb515f:  push   %esi
0x07fb5160:  push   %ebx
0x07fb5161:  sub    $0x28,%esp
0x07fb5164:  mov    %eax,%ebx
0x07fb5166:  mov    %edx,(%esp)
0x07fb5169:  mov    %ecx,%ebp
0x07fb516b:  movzwl 0x12(%eax),%eax
0x07fb516f:  push   %eax
0x07fb5170:  movzwl 0x10(%ebx),%eax
0x07fb5174:  push   %eax
0x07fb5175:  push   $0xf1cba
0x07fb517a:  push   $0x11
0x07fb517c:  lea    0x27(%esp),%esi
0x07fb5180:  push   %esi
0x07fb5181:  call   0x7fb244c

----------------
IN: 
0x07fb5186:  mov    %esi,%eax
0x07fb5188:  call   0x7fad7ee

----------------
IN: 
0x07fb518d:  mov    %eax,%edi
0x07fb518f:  add    $0x14,%esp
0x07fb5192:  test   %eax,%eax
0x07fb5194:  je     0x7fb519d

----------------
IN: 
0x07fb519d:  cmpl   $0x1,0x7fbff38
0x07fb51a4:  jg     0x7fb51b6

----------------
IN: 
0x07fb51b6:  mov    %ebx,%eax
0x07fb51b8:  call   0x7faf248

----------------
IN: 
0x07faf248:  push   %ebp
0x07faf249:  push   %edi
0x07faf24a:  push   %esi
0x07faf24b:  push   %ebx
0x07faf24c:  sub    $0x8,%esp
0x07faf24f:  testb  $0x7f,0x18(%eax)
0x07faf253:  jne    0x7faf384

----------------
IN: 
0x07faf259:  mov    %eax,%ebp
0x07faf25b:  movzwl (%eax),%eax
0x07faf25e:  mov    %eax,(%esp)
0x07faf261:  mov    $0x30,%edx
0x07faf266:  call   0xea337

----------------
IN: 
0x07faf26b:  mov    %eax,%esi
0x07faf26d:  mov    $0xfffffffe,%ecx
0x07faf272:  mov    $0x30,%edx
0x07faf277:  mov    (%esp),%eax
0x07faf27a:  call   0xea07a

----------------
IN: 
0x07faf27f:  mov    $0x30,%edx
0x07faf284:  mov    (%esp),%eax
0x07faf287:  call   0xea337

----------------
IN: 
0x07faf28c:  and    $0xfffffffe,%esi
0x07faf28f:  lea    -0x1(%eax),%edx
0x07faf292:  cmp    $0xfffffffd,%edx
0x07faf295:  ja     0x7faf375

----------------
IN: 
0x07faf29b:  cmp    %esi,%eax
0x07faf29d:  je     0x7faf375

----------------
IN: 
0x07faf2a3:  lea    0x400000(%esi),%eax
0x07faf2a9:  cmp    $0x13fffff,%eax
0x07faf2ae:  jbe    0x7faf375

----------------
IN: 
0x07faf2b4:  mov    %esi,%ecx
0x07faf2b6:  or     $0x1,%ecx
0x07faf2b9:  mov    $0x30,%edx
0x07faf2be:  mov    (%esp),%eax
0x07faf2c1:  call   0xea07a

----------------
IN: 
0x07faf2c6:  mov    %esi,%edi
0x07faf2c8:  cmpw   $0xaa55,(%edi)
0x07faf2cd:  jne    0x7faf375

----------------
IN: 
0x07faf2d3:  movzwl 0x18(%edi),%ebx
0x07faf2d7:  mov    %ebx,%eax
0x07faf2d9:  add    %edi,%ebx
0x07faf2db:  cmpl   $0x52494350,(%ebx)
0x07faf2e1:  jne    0x7faf375

----------------
IN: 
0x07faf2e7:  test   $0x3,%al
0x07faf2e9:  je     0x7faf302

----------------
IN: 
0x07faf302:  test   %ebx,%ebx
0x07faf304:  je     0x7faf375

----------------
IN: 
0x07faf306:  mov    0x10(%ebp),%eax
0x07faf309:  cmp    %ax,0x4(%ebx)
0x07faf30d:  jne    0x7faf31f

----------------
IN: 
0x07faf30f:  mov    0x12(%ebp),%ax
0x07faf313:  cmp    %ax,0x6(%ebx)
0x07faf317:  jne    0x7faf31f

----------------
IN: 
0x07faf319:  cmpb   $0x0,0x14(%ebx)
0x07faf31d:  je     0x7faf330

----------------
IN: 
0x07faf330:  movzbl 0x2(%edi),%ecx
0x07faf334:  shl    $0x9,%ecx
0x07faf337:  mov    %ecx,%eax
0x07faf339:  mov    %ecx,0x4(%esp)
0x07faf33d:  call   0x7fab9c9

----------------
IN: 
0x07fab9c9:  push   %ebx
0x07fab9ca:  mov    0x7fbfe60,%edx
0x07fab9d0:  lea    0x7ff(%edx,%eax,1),%ecx
0x07fab9d7:  and    $0xfffff800,%ecx
0x07fab9dd:  call   0xe99b2

----------------
IN: 
0x07fab9e2:  cmp    %ecx,%eax
0x07fab9e4:  jb     0x7faba01

----------------
IN: 
0x07fab9e6:  mov    0xf54d4,%ebx
0x07fab9ec:  mov    $0xd9800,%eax
0x07fab9f1:  cmp    %ecx,%eax
0x07fab9f3:  jae    0x7fab9f7

----------------
IN: 
0x07fab9f7:  add    $0x10,%eax
0x07fab9fa:  mov    %eax,0x8(%ebx)
0x07fab9fd:  mov    %edx,%eax
0x07fab9ff:  jmp    0x7faba03

----------------
IN: 
0x07faba03:  pop    %ebx
0x07faba04:  ret    

----------------
IN: 
0x07faf342:  mov    %eax,%ebx
0x07faf344:  test   %eax,%eax
0x07faf346:  mov    0x4(%esp),%ecx
0x07faf34a:  jne    0x7faf35d

----------------
IN: 
0x07faf35d:  mov    %edi,%edx
0x07faf35f:  call   0x7fad8e2

----------------
IN: 
0x07fad8e2:  push   %ebp
0x07fad8e3:  push   %edi
0x07fad8e4:  push   %esi
0x07fad8e5:  push   %ebx
0x07fad8e6:  mov    %eax,%ebx
0x07fad8e8:  mov    %edx,%esi
0x07fad8ea:  mov    %ecx,%ebp
0x07fad8ec:  call   0xec186

----------------
IN: 
0x000f7219:  mov    %bl,%al
0x000f721b:  add    $0x8,%esp
0x000f721f:  pop    %ebx
0x000f7221:  pop    %esi
0x000f7223:  retl   

Servicing hardware INT=0x08
----------------
IN: 
0x000ffea5:  pushl  $0xf0fc
0x000ffeab:  jmp    0xfd2e4

----------------
IN: 
0x000fd2e4:  cli    
0x000fd2e5:  cld    
0x000fd2e6:  push   %ds
0x000fd2e7:  push   %eax
0x000fd2e9:  mov    $0xd980,%eax
0x000fd2ef:  mov    %ax,%ds
0x000fd2f1:  mov    0xf790,%eax
0x000fd2f5:  sub    $0x28,%eax
0x000fd2f9:  addr32 popl 0x1c(%eax)
0x000fd2fe:  addr32 popw (%eax)
0x000fd301:  addr32 mov %edi,0x4(%eax)
0x000fd306:  addr32 mov %esi,0x8(%eax)
0x000fd30b:  addr32 mov %ebp,0xc(%eax)
0x000fd310:  addr32 mov %ebx,0x10(%eax)
0x000fd315:  addr32 mov %edx,0x14(%eax)
0x000fd31a:  addr32 mov %ecx,0x18(%eax)
0x000fd31f:  addr32 mov %es,0x2(%eax)
0x000fd323:  pop    %ecx
0x000fd325:  addr32 mov %esp,0x20(%eax)
0x000fd32a:  addr32 mov %ss,0x24(%eax)
0x000fd32e:  mov    %ds,%dx
0x000fd330:  mov    %dx,%ss

----------------
IN: 
0x000fd332:  mov    %eax,%esp

----------------
IN: 
0x000fd335:  calll  *%ecx

----------------
IN: 
0x000ff0fc:  push   %ebp
0x000ff0fe:  push   %edi
0x000ff100:  push   %esi
0x000ff102:  push   %ebx
0x000ff104:  sub    $0x38,%esp
0x000ff108:  mov    $0x40,%eax
0x000ff10e:  mov    %ax,%es
0x000ff110:  mov    %es:0x6c,%eax
0x000ff115:  inc    %eax
0x000ff117:  cmp    $0x1800af,%eax
0x000ff11d:  jbe    0xff12c

----------------
IN: 
0x000ff12c:  mov    $0x40,%edx
0x000ff132:  mov    %dx,%es
0x000ff134:  mov    %eax,%es:0x6c
0x000ff139:  mov    %dx,%es
0x000ff13b:  mov    %es:0x40,%al
0x000ff13f:  test   %al,%al
0x000ff141:  je     0xff15c

----------------
IN: 
0x000ff15c:  mov    %cs:0x6030,%eax
0x000ff161:  addr32 mov %eax,(%esp)
0x000ff166:  test   %eax,%eax
0x000ff169:  je     0xff2e6

----------------
IN: 
0x000ff2e6:  mov    %cs:0x602c,%esi
0x000ff2ec:  test   %esi,%esi
0x000ff2ef:  je     0xff35f

----------------
IN: 
0x000ff35f:  mov    $0xd980,%eax
0x000ff365:  mov    %eax,%ebx
0x000ff368:  mov    %ax,%es
0x000ff36a:  mov    %es:-0x8ac,%bp
0x000ff36f:  test   %bp,%bp
0x000ff371:  je     0xff4c7

----------------
IN: 
0x000ff4c7:  mov    $0x26,%ecx
0x000ff4cd:  xor    %edx,%edx
0x000ff4d0:  addr32 lea 0x12(%esp),%eax
0x000ff4d6:  calll  0xf7245

----------------
IN: 
0x000f7245:  test   %ecx,%ecx
0x000f7248:  je     0xf7252

----------------
IN: 
0x000f724a:  dec    %ecx
0x000f724c:  addr32 mov %dl,(%eax,%ecx,1)
0x000f7250:  jmp    0xf7245

----------------
IN: 
0x000f7252:  retl   

----------------
IN: 
0x000ff4dc:  addr32 movw $0x200,0x36(%esp)
0x000ff4e3:  mov    $0xe829,%edx
0x000ff4e9:  movzwl %dx,%edx
0x000ff4ed:  calll  0xf8193

----------------
IN: 
0x000f8193:  addr32 mov %dx,0x20(%eax)
0x000f8197:  mov    %cs,%dx
0x000f8199:  addr32 mov %dx,0x22(%eax)
0x000f819d:  mov    %ss,%dx
0x000f819f:  movzwl %dx,%edx
0x000f81a3:  jmp    0xf8148

----------------
IN: 
0x000f8148:  push   %edi
0x000f814a:  push   %esi
0x000f814c:  push   %ebx
0x000f814e:  push   %esi
0x000f8150:  mov    %eax,%ebx
0x000f8153:  addr32 mov %edx,(%esp)
0x000f8158:  calll  0xf6da5

----------------
IN: 
0x000f6db7:  mov    %esp,%eax
0x000f6dba:  cmp    $0xf798,%eax
0x000f6dc0:  seta   %al
0x000f6dc3:  movzbl %al,%eax
0x000f6dc7:  retl   

----------------
IN: 
0x000f815e:  test   %eax,%eax
0x000f8161:  addr32 mov (%esp),%edx
0x000f8166:  je     0xf8180

----------------
IN: 
0x000f8168:  movzwl %dx,%edx
0x000f816c:  mov    $0x8148,%ecx
0x000f8172:  mov    %ebx,%eax
0x000f8175:  pop    %ebx
0x000f8177:  pop    %ebx
0x000f8179:  pop    %esi
0x000f817b:  pop    %edi
0x000f817d:  jmp    0xf7bd2

----------------
IN: 
0x000f7bd2:  push   %edi
0x000f7bd4:  push   %esi
0x000f7bd6:  push   %ebx
0x000f7bd8:  mov    %ss,%bx
0x000f7bda:  movzwl %bx,%ebx
0x000f7bde:  cmp    $0xd980,%ebx
0x000f7be5:  jne    0xf7c25

----------------
IN: 
0x000f7be7:  mov    %esp,%ebx
0x000f7bea:  cmp    $0xf798,%ebx
0x000f7bf1:  jbe    0xf7c25

----------------
IN: 
0x000f7bf3:  mov    -0x870,%esi
0x000f7bf8:  mov    %ss,%bx
0x000f7bfa:  mov    %esp,-0x870
0x000f7bff:  addr32 mov -0x4(%esi),%edi
0x000f7c04:  mov    %di,%ss

----------------
IN: 
0x000f7c06:  addr32 mov -0x8(%esi),%sp

----------------
IN: 
0x000f7c0a:  mov    %di,%ds
0x000f7c0c:  calll  *%ecx

----------------
IN: 
0x000f8180:  mov    %ebx,%eax
0x000f8183:  calll  0xfcfc7

----------------
IN: 
0x000fcfc7:  push   %ebp
0x000fcfc9:  push   %eax
0x000fcfcb:  push   %edx
0x000fcfcd:  mov    %dx,%ds
0x000fcfcf:  push   %cs
0x000fcfd0:  push   $0xd009
0x000fcfd3:  addr32 pushw 0x24(%eax)
0x000fcfd7:  addr32 pushl 0x20(%eax)
0x000fcfdc:  addr32 mov 0x4(%eax),%edi
0x000fcfe1:  addr32 mov 0x8(%eax),%esi
0x000fcfe6:  addr32 mov 0xc(%eax),%ebp
0x000fcfeb:  addr32 mov 0x10(%eax),%ebx
0x000fcff0:  addr32 mov 0x14(%eax),%edx
0x000fcff5:  addr32 mov 0x18(%eax),%ecx
0x000fcffa:  addr32 mov 0x2(%eax),%es
0x000fcffe:  addr32 pushl 0x1c(%eax)
0x000fd003:  addr32 mov (%eax),%ds
0x000fd006:  pop    %eax
0x000fd008:  iret   

----------------
IN: 
0x000fe829:  int    $0x1c

----------------
IN: 
0x000fff53:  iret   

----------------
IN: 
0x000fe82b:  lret   

----------------
IN: 
0x000fd009:  pushf  
0x000fd00a:  cli    
0x000fd00b:  cld    
0x000fd00c:  push   %ds
0x000fd00d:  push   %eax
0x000fd00f:  addr32 mov 0x8(%esp),%ds
0x000fd014:  addr32 mov 0xc(%esp),%eax
0x000fd01a:  addr32 popl 0x1c(%eax)
0x000fd01f:  addr32 popw (%eax)
0x000fd022:  addr32 mov %edi,0x4(%eax)
0x000fd027:  addr32 mov %esi,0x8(%eax)
0x000fd02c:  addr32 mov %ebp,0xc(%eax)
0x000fd031:  addr32 mov %ebx,0x10(%eax)
0x000fd036:  addr32 mov %edx,0x14(%eax)
0x000fd03b:  addr32 mov %ecx,0x18(%eax)
0x000fd040:  addr32 mov %es,0x2(%eax)
0x000fd044:  addr32 popw 0x24(%eax)
0x000fd048:  mov    %ss,%cx
0x000fd04a:  mov    %cx,%ds
0x000fd04c:  pop    %edx
0x000fd04e:  pop    %eax
0x000fd050:  pop    %ebp
0x000fd052:  retl   

----------------
IN: 
0x000f8189:  pop    %eax
0x000f818b:  pop    %ebx
0x000f818d:  pop    %esi
0x000f818f:  pop    %edi
0x000f8191:  retl   

----------------
IN: 
0x000f7c0f:  mov    %bx,%ds
0x000f7c11:  mov    %bx,%ss

----------------
IN: 
0x000f7c13:  mov    -0x870,%esp

----------------
IN: 
0x000f7c18:  mov    %esi,-0x870
0x000f7c1d:  pop    %ebx
0x000f7c1f:  pop    %esi
0x000f7c21:  pop    %edi
0x000f7c23:  retl   

----------------
IN: 
0x000ff4f3:  mov    $0x20,%al
0x000ff4f5:  out    %al,$0x20
0x000ff4f7:  add    $0x38,%esp
0x000ff4fb:  pop    %ebx
0x000ff4fd:  pop    %esi
0x000ff4ff:  pop    %edi
0x000ff501:  pop    %ebp
0x000ff503:  retl   

----------------
IN: 
0x000fd338:  mov    %esp,%eax
0x000fd33b:  addr32 mov 0x24(%eax),%ss

----------------
IN: 
0x000fd33f:  addr32 mov 0x20(%eax),%esp

----------------
IN: 
0x000fd344:  addr32 mov 0x4(%eax),%edi
0x000fd349:  addr32 mov 0x8(%eax),%esi
0x000fd34e:  addr32 mov 0xc(%eax),%ebp
0x000fd353:  addr32 mov 0x10(%eax),%ebx
0x000fd358:  addr32 mov 0x14(%eax),%edx
0x000fd35d:  addr32 mov 0x18(%eax),%ecx
0x000fd362:  addr32 mov 0x2(%eax),%es
0x000fd366:  addr32 pushl 0x1c(%eax)
0x000fd36b:  addr32 mov (%eax),%ds
0x000fd36e:  pop    %eax
0x000fd370:  iret   

----------------
IN: 
0x07fad8f1:  cmp    $0x3,%ebp
0x07fad8f4:  jbe    0x7fad917

----------------
IN: 
0x07fad8f6:  mov    %ebp,%eax
0x07fad8f8:  cmp    $0x800,%ebp
0x07fad8fe:  jbe    0x7fad905

----------------
IN: 
0x07fad900:  mov    $0x800,%eax
0x07fad905:  mov    %eax,%ecx
0x07fad907:  shr    $0x2,%ecx
0x07fad90a:  and    $0xfffffffc,%eax
0x07fad90d:  sub    %eax,%ebp
0x07fad90f:  mov    %ebx,%edi
0x07fad911:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fad911:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fad913:  mov    %edi,%ebx
0x07fad915:  jmp    0x7fad8ec

----------------
IN: 
0x07fad8ec:  call   0xec186

Servicing hardware INT=0x08
----------------
IN: 
0x07fad905:  mov    %eax,%ecx
0x07fad907:  shr    $0x2,%ecx
0x07fad90a:  and    $0xfffffffc,%eax
0x07fad90d:  sub    %eax,%ebp
0x07fad90f:  mov    %ebx,%edi
0x07fad911:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fad917:  test   %ebp,%ebp
0x07fad919:  je     0x7fad921

----------------
IN: 
0x07fad921:  pop    %ebx
0x07fad922:  pop    %esi
0x07fad923:  pop    %edi
0x07fad924:  pop    %ebp
0x07fad925:  ret    

----------------
IN: 
0x07faf364:  mov    %esi,%ecx
0x07faf366:  mov    $0x30,%edx
0x07faf36b:  mov    (%esp),%eax
0x07faf36e:  call   0xea07a

----------------
IN: 
0x07faf373:  jmp    0x7faf386

----------------
IN: 
0x07faf386:  mov    %ebx,%eax
0x07faf388:  add    $0x8,%esp
0x07faf38b:  pop    %ebx
0x07faf38c:  pop    %esi
0x07faf38d:  pop    %edi
0x07faf38e:  pop    %ebp
0x07faf38f:  ret    

----------------
IN: 
0x07fb51bd:  test   %eax,%eax
0x07fb51bf:  je     0x7fb5284

----------------
IN: 
0x07fb51c5:  mov    0x64,%ecx
0x07fb51cb:  mov    %ecx,0x8(%esp)
0x07fb51cf:  movl   $0xfe6f2,0x4(%esp)
0x07fb51d7:  movzwl 0x4(%esp),%edx
0x07fb51dc:  or     $0xf0000000,%edx
0x07fb51e2:  mov    %edx,0xc(%esp)
0x07fb51e6:  movzwl 0x1a(%eax),%esi
0x07fb51ea:  add    %eax,%esi
0x07fb51ec:  cmpl   $0x506e5024,(%esi)
0x07fb51f2:  je     0x7fb51f6

----------------
IN: 
0x07fb51f4:  xor    %esi,%esi
0x07fb51f6:  test   %ebp,%ebp
0x07fb51f8:  je     0x7fb520f

----------------
IN: 
0x07fb520f:  movzwl (%ebx),%edx
0x07fb5212:  mov    (%esp),%ecx
0x07fb5215:  mov    %eax,0x10(%esp)
0x07fb5219:  call   0x7fb5004

----------------
IN: 
0x07fb5004:  push   %ebp
0x07fb5005:  push   %edi
0x07fb5006:  push   %esi
0x07fb5007:  push   %ebx
0x07fb5008:  sub    $0x28,%esp
0x07fb500b:  mov    %eax,%esi
0x07fb500d:  mov    %edx,(%esp)
0x07fb5010:  mov    %ecx,%ebp
0x07fb5012:  call   0xeda0e

----------------
IN: 
0x000eda0e:  cmpw   $0xaa55,(%eax)
0x000eda13:  jne    0xeda5b

----------------
IN: 
0x000eda15:  push   %esi
0x000eda16:  push   %ebx
0x000eda17:  mov    %eax,%esi
0x000eda19:  mov    0x2(%eax),%al
0x000eda1c:  xor    %edx,%edx
0x000eda1e:  test   %al,%al
0x000eda20:  je     0xeda5e

----------------
IN: 
0x000eda22:  movzbl %al,%ebx
0x000eda25:  shl    $0x9,%ebx
0x000eda28:  mov    %ebx,%edx
0x000eda2a:  mov    %esi,%eax
0x000eda2c:  call   0xeaaa5

----------------
IN: 
0x000eda31:  mov    $0x1,%edx
0x000eda36:  test   %al,%al
0x000eda38:  je     0xeda5e

----------------
IN: 
0x000eda5e:  mov    %edx,%eax
0x000eda60:  pop    %ebx
0x000eda61:  pop    %esi
0x000eda62:  ret    

----------------
IN: 
0x07fb5017:  test   %eax,%eax
0x07fb5019:  je     0x7fb5109

----------------
IN: 
0x07fb501f:  movzbl 0x2(%esi),%ecx
0x07fb5023:  shl    $0x9,%ecx
0x07fb5026:  mov    %ecx,%eax
0x07fb5028:  mov    %ecx,0x4(%esp)
0x07fb502c:  call   0x7fab9c9

----------------
IN: 
0x07fb5031:  mov    %eax,%ebx
0x07fb5033:  test   %eax,%eax
0x07fb5035:  mov    0x4(%esp),%ecx
0x07fb5039:  jne    0x7fb504a

----------------
IN: 
0x07fb504a:  cmp    %eax,%esi
0x07fb504c:  je     0x7fb5055

----------------
IN: 
0x07fb5055:  cmpb   $0x0,0xe8f01
0x07fb505c:  je     0x7fb50aa

----------------
IN: 
0x07fb50aa:  test   %ebp,%ebp
0x07fb50ac:  jne    0x7fb50bb

----------------
IN: 
0x07fb50bb:  movzwl (%esp),%ecx
0x07fb50bf:  mov    $0x3,%edx
0x07fb50c4:  mov    %ebx,%eax
0x07fb50c6:  call   0xee4d2

----------------
IN: 
0x000ee4d2:  push   %edi
0x000ee4d3:  push   %esi
0x000ee4d4:  push   %ebx
0x000ee4d5:  sub    $0x28,%esp
0x000ee4d8:  mov    %edx,%esi
0x000ee4da:  mov    %ecx,%edi
0x000ee4dc:  shr    $0x4,%eax
0x000ee4df:  mov    %eax,%ebx
0x000ee4e1:  movzwl %dx,%eax
0x000ee4e4:  push   %eax
0x000ee4e5:  movzwl %bx,%eax
0x000ee4e8:  push   %eax
0x000ee4e9:  push   $0xf1c99
0x000ee4ee:  call   0xec4d8

----------------
IN: 
0x000ee4f3:  mov    $0x26,%ecx
0x000ee4f8:  xor    %edx,%edx
0x000ee4fa:  lea    0xe(%esp),%eax
0x000ee4fe:  call   0xeab7b

----------------
IN: 
0x000ee503:  movw   $0x200,0x32(%esp)
0x000ee50a:  mov    %di,0x2a(%esp)
0x000ee50f:  movw   $0xffff,0x1e(%esp)
0x000ee516:  movw   $0xffff,0x22(%esp)
0x000ee51d:  movw   $0xf000,0x10(%esp)
0x000ee524:  mov    $0xf6060,%eax
0x000ee529:  mov    %ax,0x12(%esp)
0x000ee52e:  mov    %si,0x2e(%esp)
0x000ee533:  mov    %bx,0x30(%esp)
0x000ee538:  call   0xeb1c7

----------------
IN: 
0x000eb1c7:  call   0xea062

----------------
IN: 
0x000eb1cc:  test   %eax,%eax
0x000eb1ce:  je     0xeb201

----------------
IN: 
0x000eb201:  ret    

----------------
IN: 
0x000ee53d:  mov    $0x1,%eax
0x000ee542:  call   0xebf98

----------------
IN: 
0x000ee547:  mov    $0xf8148,%ecx
0x000ee54c:  xor    %edx,%edx
0x000ee54e:  lea    0xe(%esp),%eax
0x000ee552:  call   0xec0df

----------------
IN: 
0x000c0003:  jmp    0xc55f3

----------------
IN: 
0x000c55f3:  cli    
0x000c55f4:  cld    
0x000c55f5:  push   %eax
0x000c55f7:  push   %ecx
0x000c55f9:  push   %edx
0x000c55fb:  push   %ebx
0x000c55fd:  push   %ebp
0x000c55ff:  push   %esi
0x000c5601:  push   %edi
0x000c5603:  push   %es
0x000c5604:  push   %ds
0x000c5605:  mov    %ss,%ax
0x000c5607:  mov    %ax,%ds
0x000c5609:  mov    %esp,%ebx
0x000c560c:  movzwl %sp,%esp
0x000c5610:  mov    %esp,%eax
0x000c5613:  push   %ax
0x000c5614:  call   0xc3633

----------------
IN: 
0x000c3633:  push   %ebp
0x000c3635:  mov    %esp,%ebp
0x000c3638:  push   %edi
0x000c363a:  push   %esi
0x000c363c:  push   %ebx
0x000c363e:  sub    $0x18,%esp
0x000c3642:  mov    %eax,%ebx
0x000c3645:  pushl  $0x98f0
0x000c364b:  pushl  $0x57dc
0x000c3651:  push   %ax
0x000c3652:  call   0xc250d

----------------
IN: 
0x000c250d:  push   %ebp
0x000c250f:  mov    %esp,%ebp
0x000c2512:  push   %edi
0x000c2514:  push   %esi
0x000c2516:  push   %ebx
0x000c2518:  sub    $0x10,%esp
0x000c251c:  mov    %ebp,%ebx
0x000c251f:  pushf  
0x000c2520:  add    $0xc,%ebx
0x000c2524:  popf   

----------------
IN: 
0x000c2525:  addr32 mov 0x8(%ebp),%eax
0x000c252a:  addr32 mov %cs:(%eax),%al
0x000c252e:  test   %al,%al
0x000c2530:  je     0xc2812

----------------
IN: 
0x000c2534:  cmp    $0x25,%al
0x000c2536:  jne    0xc2550

----------------
IN: 
0x000c2550:  movsbl %al,%eax
0x000c2554:  jmp    0xc27f3

----------------
IN: 
0x000c27f3:  push   %ax
0x000c27f4:  call   0xc0022

----------------
IN: 
0x000c0022:  mov    %cs:-0x6706,%dx
0x000c0027:  test   %dx,%dx
0x000c0029:  je     0xc002c

----------------
IN: 
0x000c002b:  out    %al,(%dx)
0x000c002c:  ret    $0x2

----------------
IN: 
0x000c27f7:  addr32 mov 0x8(%ebp),%esi
0x000c27fc:  jmp    0xc2801

----------------
IN: 
0x000c2801:  mov    %esi,%eax
0x000c2804:  pushf  
0x000c2805:  add    $0x1,%eax
0x000c2809:  popf   

----------------
IN: 
0x000c280a:  addr32 mov %eax,0x8(%ebp)
0x000c280f:  jmp    0xc2525

----------------
IN: 
0x000c2538:  addr32 mov 0x8(%ebp),%eax
0x000c253d:  mov    %eax,%esi
0x000c2540:  pushf  
0x000c2541:  add    $0x1,%esi
0x000c2545:  popf   

----------------
IN: 
0x000c2546:  addr32 movb $0x20,-0x18(%ebp)
0x000c254b:  xor    %eax,%eax
0x000c254e:  jmp    0xc2571

----------------
IN: 
0x000c2571:  addr32 mov %cs:(%esi),%cl
0x000c2575:  addr32 mov %cl,-0x10(%ebp)
0x000c2579:  mov    %cl,%dl
0x000c257b:  mov    %ecx,%edi
0x000c257e:  sub    $0x30,%edi
0x000c2582:  mov    %edi,%ecx
0x000c2585:  cmp    $0x9,%cl
0x000c2588:  jbe    0xc2557

----------------
IN: 
0x000c258a:  jmp    0xc259b

----------------
IN: 
0x000c259b:  xor    %edi,%edi
0x000c259e:  cmp    $0x6c,%dl
0x000c25a1:  jne    0xc25c9

----------------
IN: 
0x000c25c9:  cmp    $0x64,%dl
0x000c25cc:  je     0xc2666

----------------
IN: 
0x000c25d0:  jg     0xc2612

----------------
IN: 
0x000c2612:  cmp    $0x73,%dl
0x000c2615:  je     0xc27cc

----------------
IN: 
0x000c27cc:  mov    %ebx,%ecx
0x000c27cf:  pushf  
0x000c27d0:  add    $0x4,%ecx
0x000c27d4:  popf   

----------------
IN: 
0x000c27d5:  addr32 mov (%ebx),%ebx
0x000c27d9:  addr32 mov %cs:(%ebx),%al
0x000c27dd:  test   %al,%al
0x000c27df:  je     0xc27fe

----------------
IN: 
0x000c27e1:  movsbl %al,%eax
0x000c27e5:  push   %ax
0x000c27e6:  call   0xc0022

----------------
IN: 
0x000c27e9:  inc    %ebx
0x000c27eb:  jmp    0xc27d9

----------------
IN: 
0x000c27d9:  addr32 mov %cs:(%ebx),%al
0x000c27dd:  test   %al,%al
0x000c27df:  je     0xc27fe

----------------
IN: 
0x000c27fe:  mov    %ecx,%ebx
0x000c2801:  mov    %esi,%eax
0x000c2804:  pushf  
0x000c2805:  add    $0x1,%eax
0x000c2809:  popf   

----------------
IN: 
0x000c2812:  add    $0x10,%esp
0x000c2816:  pop    %ebx
0x000c2818:  pop    %esi
0x000c281a:  pop    %edi
0x000c281c:  pop    %ebp
0x000c281e:  ret    $0x2

----------------
IN: 
0x000c3655:  pop    %edi
0x000c3657:  pop    %eax
0x000c3659:  pushl  $0x98a0
0x000c365f:  pushl  $0x57fb
0x000c3665:  push   %ax
0x000c3666:  call   0xc250d

----------------
IN: 
0x000c3669:  pop    %eax
0x000c366b:  pop    %edx
0x000c366d:  pushl  $0x5af0
0x000c3673:  pushl  $0x5809
0x000c3679:  push   %ax
0x000c367a:  call   0xc250d

----------------
IN: 
0x000c367d:  pop    %ecx
0x000c367f:  pop    %esi
0x000c3681:  mov    %ebx,%eax
0x000c3684:  push   %ax
0x000c3685:  call   0xc2821

----------------
IN: 
0x000c2821:  push   %ebp
0x000c2823:  mov    %esp,%ebp
0x000c2826:  push   %ebx
0x000c2828:  test   %eax,%eax
0x000c282b:  jne    0xc283b

----------------
IN: 
0x000c283b:  mov    %eax,%ebx
0x000c283e:  mov    %ss,%ax
0x000c2840:  movzwl %ax,%eax
0x000c2844:  push   %eax
0x000c2846:  addr32 movzwl 0x2(%ebx),%eax
0x000c284c:  push   %eax
0x000c284e:  addr32 movzwl (%ebx),%eax
0x000c2853:  push   %eax
0x000c2855:  addr32 pushl 0x14(%ebx)
0x000c285a:  addr32 pushl 0x18(%ebx)
0x000c285f:  addr32 pushl 0x10(%ebx)
0x000c2864:  addr32 pushl 0x1c(%ebx)
0x000c2869:  pushl  $0x571b
0x000c286f:  push   %ax
0x000c2870:  call   0xc250d

----------------
IN: 
0x000c2557:  cmp    $0x30,%dl
0x000c255a:  je     0xc258c

----------------
IN: 
0x000c258c:  test   %eax,%eax
0x000c258f:  jne    0xc255c

----------------
IN: 
0x000c2591:  addr32 movb $0x30,-0x18(%ebp)
0x000c2596:  xor    %eax,%eax
0x000c2599:  jmp    0xc256f

----------------
IN: 
0x000c256f:  inc    %esi
0x000c2571:  addr32 mov %cs:(%esi),%cl
0x000c2575:  addr32 mov %cl,-0x10(%ebp)
0x000c2579:  mov    %cl,%dl
0x000c257b:  mov    %ecx,%edi
0x000c257e:  sub    $0x30,%edi
0x000c2582:  mov    %edi,%ecx
0x000c2585:  cmp    $0x9,%cl
0x000c2588:  jbe    0xc2557

----------------
IN: 
0x000c255c:  imul   $0xa,%eax,%eax
0x000c2560:  addr32 movsbl -0x10(%ebp),%ecx
0x000c2566:  pushf  
0x000c2567:  add    %ecx,%eax
0x000c256a:  add    $0xffffffd0,%eax
0x000c256e:  popf   

----------------
IN: 
0x000c2619:  jg     0xc2659

----------------
IN: 
0x000c2659:  cmp    $0x75,%dl
0x000c265c:  je     0xc2692

----------------
IN: 
0x000c265e:  cmp    $0x78,%dl
0x000c2661:  je     0xc26ae

----------------
IN: 
0x000c26ae:  xor    %ecx,%ecx
0x000c26b1:  cmp    $0x58,%dl
0x000c26b4:  sete   %cl
0x000c26b7:  addr32 mov %ecx,-0x10(%ebp)
0x000c26bc:  addr32 mov (%ebx),%ecx
0x000c26c0:  addr32 mov %ecx,-0x14(%ebp)
0x000c26c5:  addr32 movsbl -0x18(%ebp),%ecx
0x000c26cb:  mov    %edi,%edx
0x000c26ce:  test   %dl,%dl
0x000c26d0:  je     0xc273c

----------------
IN: 
0x000c273c:  mov    %ebx,%edi
0x000c273f:  pushf  
0x000c2740:  add    $0x4,%edi
0x000c2744:  popf   

----------------
IN: 
0x000c2745:  addr32 mov %edi,-0x18(%ebp)
0x000c274a:  addr32 mov -0x14(%ebp),%ebx
0x000c274f:  mov    $0x1,%edx
0x000c2755:  shr    $0x4,%ebx
0x000c2759:  je     0xc275f

----------------
IN: 
0x000c275b:  inc    %edx
0x000c275d:  jmp    0xc2755

----------------
IN: 
0x000c2755:  shr    $0x4,%ebx
0x000c2759:  je     0xc275f

----------------
IN: 
0x000c275f:  sub    %edx,%eax
0x000c2762:  mov    %eax,%ebx
0x000c2765:  test   %ebx,%ebx
0x000c2768:  jle    0xc277f

----------------
IN: 
0x000c276a:  addr32 mov %edx,-0x1c(%ebp)
0x000c276f:  mov    %ecx,%eax
0x000c2772:  push   %ax
0x000c2773:  call   0xc0022

----------------
IN: 
0x000c2776:  dec    %ebx
0x000c2778:  addr32 mov -0x1c(%ebp),%edx
0x000c277d:  jmp    0xc2765

----------------
IN: 
0x000c2765:  test   %ebx,%ebx
0x000c2768:  jle    0xc277f

----------------
IN: 
0x000c277f:  addr32 mov -0x10(%ebp),%ecx
0x000c2784:  addr32 mov -0x14(%ebp),%eax
0x000c2789:  push   %ax
0x000c278a:  call   0xc0fef

----------------
IN: 
0x000c0fef:  push   %ebp
0x000c0ff1:  mov    %esp,%ebp
0x000c0ff4:  push   %esi
0x000c0ff6:  push   %ebx
0x000c0ff8:  mov    %eax,%ebx
0x000c0ffb:  mov    %ecx,%esi
0x000c0ffe:  cmp    $0x4,%edx
0x000c1002:  je     0xc1072

----------------
IN: 
0x000c1004:  jg     0xc101c

----------------
IN: 
0x000c1006:  cmp    $0x2,%edx
0x000c100a:  je     0xc1096

----------------
IN: 
0x000c1096:  mov    %ebx,%eax
0x000c1099:  shr    $0x4,%eax
0x000c109d:  and    $0xf,%eax
0x000c10a1:  mov    %esi,%edx
0x000c10a4:  push   %ax
0x000c10a5:  call   0xc0fc2

----------------
IN: 
0x000c0fc2:  mov    %eax,%ecx
0x000c0fc5:  pushf  
0x000c0fc6:  add    $0x30,%ecx
0x000c0fca:  popf   

----------------
IN: 
0x000c0fcb:  cmp    $0x9,%eax
0x000c0fcf:  jbe    0xc0fe8

----------------
IN: 
0x000c0fe8:  movsbl %cl,%eax
0x000c0fec:  jmp    0xc0022

----------------
IN: 
0x000c10a8:  mov    %ebx,%eax
0x000c10ab:  and    $0xf,%eax
0x000c10af:  mov    %esi,%edx
0x000c10b2:  pop    %ebx
0x000c10b4:  pop    %esi
0x000c10b6:  pop    %ebp
0x000c10b8:  jmp    0xc0fc2

----------------
IN: 
0x000c278d:  addr32 mov -0x18(%ebp),%ebx
0x000c2792:  jmp    0xc2801

----------------
IN: 
0x000c1072:  mov    %ebx,%eax
0x000c1075:  shr    $0xc,%eax
0x000c1079:  and    $0xf,%eax
0x000c107d:  mov    %esi,%edx
0x000c1080:  push   %ax
0x000c1081:  call   0xc0fc2

----------------
IN: 
0x000c0fd1:  mov    %eax,%ecx
0x000c0fd4:  pushf  
0x000c0fd5:  add    $0x57,%ecx
0x000c0fd9:  popf   

----------------
IN: 
0x000c0fda:  test   %edx,%edx
0x000c0fdd:  je     0xc0fe8

----------------
IN: 
0x000c1084:  mov    %ebx,%eax
0x000c1087:  shr    $0x8,%eax
0x000c108b:  and    $0xf,%eax
0x000c108f:  mov    %esi,%edx
0x000c1092:  push   %ax
0x000c1093:  call   0xc0fc2

----------------
IN: 
0x000c100e:  cmp    $0x3,%edx
0x000c1012:  je     0xc1084

----------------
IN: 
0x000c1014:  dec    %edx
0x000c1016:  je     0xc10a8

----------------
IN: 
0x000c2873:  add    $0x20,%esp
0x000c2877:  addr32 movzwl 0x24(%ebx),%eax
0x000c287d:  push   %eax
0x000c287f:  addr32 movzwl 0x20(%ebx),%eax
0x000c2885:  push   %eax
0x000c2887:  addr32 movzwl 0x22(%ebx),%eax
0x000c288d:  push   %eax
0x000c288f:  mov    %ebx,%eax
0x000c2892:  pushf  
0x000c2893:  add    $0x26,%eax
0x000c2897:  popf   

----------------
IN: 
0x000c2898:  push   %eax
0x000c289a:  addr32 pushl 0xc(%ebx)
0x000c289f:  addr32 pushl 0x4(%ebx)
0x000c28a4:  addr32 pushl 0x8(%ebx)
0x000c28a9:  pushl  $0x5756
0x000c28af:  push   %ax
0x000c28b0:  call   0xc250d

----------------
IN: 
0x000c28b3:  add    $0x20,%esp
0x000c28b7:  addr32 mov -0x4(%ebp),%ebx
0x000c28bc:  mov    %ebp,%esp
0x000c28bf:  pop    %ebp
0x000c28c1:  ret    $0x2

----------------
IN: 
0x000c3688:  mov    %cs:0x9870,%eax
0x000c368d:  test   %eax,%eax
0x000c3690:  jne    0xc36e6

----------------
IN: 
0x000c3692:  addr32 movzwl 0x1c(%ebx),%ebx
0x000c3698:  mov    %ebx,%ecx
0x000c369b:  shl    $0x8,%ecx
0x000c369f:  or     $0x80000000,%ecx
0x000c36a6:  mov    $0xcf8,%esi
0x000c36ac:  mov    %ecx,%eax
0x000c36af:  mov    %esi,%edx
0x000c36b2:  out    %eax,(%dx)
0x000c36b4:  mov    $0xcfc,%edx
0x000c36ba:  in     (%dx),%ax
0x000c36bb:  mov    %cs:-0x6780,%dx
0x000c36c0:  cmp    %ax,%dx
0x000c36c2:  jne    0xc36e6

----------------
IN: 
0x000c36c4:  mov    %ecx,%eax
0x000c36c7:  mov    %esi,%edx
0x000c36ca:  out    %eax,(%dx)
0x000c36cc:  mov    $0xcfe,%edx
0x000c36d2:  in     (%dx),%ax
0x000c36d3:  mov    %cs:-0x677e,%dx
0x000c36d8:  cmp    %ax,%dx
0x000c36da:  jne    0xc36e6

----------------
IN: 
0x000c36dc:  mov    %cs,%ax
0x000c36de:  mov    %ax,%es
0x000c36e0:  mov    %ebx,%es:-0x678c
0x000c36e6:  mov    $0xc3,%al
0x000c36e8:  mov    $0x3c2,%edx
0x000c36ee:  out    %al,(%dx)
0x000c36ef:  mov    $0x204,%eax
0x000c36f5:  mov    $0x3c4,%edx
0x000c36fb:  out    %ax,(%dx)
0x000c36fc:  xor    %ebx,%ebx
0x000c36ff:  mov    $0x1ce,%esi
0x000c3705:  mov    %ebx,%eax
0x000c3708:  mov    %esi,%edx
0x000c370b:  out    %ax,(%dx)
0x000c370c:  mov    $0x1cf,%ecx
0x000c3712:  mov    $0xffffb0c0,%eax
0x000c3718:  mov    %ecx,%edx
0x000c371b:  out    %ax,(%dx)
0x000c371c:  mov    %ebx,%eax
0x000c371f:  mov    %esi,%edx
0x000c3722:  out    %ax,(%dx)
0x000c3723:  mov    %ecx,%edx
0x000c3726:  in     (%dx),%ax
0x000c3727:  cmp    $0xb0c0,%ax
0x000c372a:  je     0xc373b

----------------
IN: 
0x000c373b:  mov    %ebx,%eax
0x000c373e:  mov    %esi,%edx
0x000c3741:  out    %ax,(%dx)
0x000c3742:  mov    $0xffffb0c5,%eax
0x000c3748:  mov    %ecx,%edx
0x000c374b:  out    %ax,(%dx)
0x000c374c:  mov    %cs,%ax
0x000c374e:  mov    %ax,%es
0x000c3750:  mov    $0x1,%eax
0x000c3756:  mov    %eax,%es:0x5afc
0x000c375b:  mov    %cs:0x9870,%eax
0x000c3760:  mov    %eax,%edi
0x000c3763:  test   %eax,%eax
0x000c3766:  jne    0xc39ff

----------------
IN: 
0x000c376a:  mov    %cs:-0x678c,%ecx
0x000c3770:  test   %ecx,%ecx
0x000c3773:  js     0xc3839

----------------
IN: 
0x000c3777:  mov    %ecx,%ebx
0x000c377a:  shl    $0x8,%ebx
0x000c377e:  and    $0xffff00,%ebx
0x000c3785:  mov    %ebx,%eax
0x000c3788:  or     $0x80000000,%eax
0x000c378e:  mov    $0xcf8,%edx
0x000c3794:  out    %eax,(%dx)
0x000c3796:  mov    $0xcfc,%esi
0x000c379c:  mov    %esi,%edx
0x000c379f:  in     (%dx),%ax
0x000c37a0:  cmp    $0x1234,%ax
0x000c37a3:  je     0xc37bd

----------------
IN: 
0x000c37bd:  mov    %ebx,%eax
0x000c37c0:  or     $0x80000018,%eax
0x000c37c6:  mov    $0xcf8,%edx
0x000c37cc:  out    %eax,(%dx)
0x000c37ce:  mov    %esi,%edx
0x000c37d1:  in     (%dx),%eax
0x000c37d3:  and    $0xfffffffc,%eax
0x000c37d7:  addr32 mov %eax,-0x10(%ebp)
0x000c37dc:  xor    %esi,%esi
0x000c37df:  mov    %esi,%eax
0x000c37e2:  pushf  
0x000c37e3:  shl    $0x2,%eax
0x000c37e7:  add    $0x10,%eax
0x000c37eb:  popf   

----------------
IN: 
0x000c37ec:  or     %ebx,%eax
0x000c37ef:  or     $0x80000000,%eax
0x000c37f5:  mov    $0xcf8,%edx
0x000c37fb:  out    %eax,(%dx)
0x000c37fd:  mov    $0xcfc,%edx
0x000c3803:  in     (%dx),%eax
0x000c3805:  and    $0xfffffff0,%eax
0x000c3809:  mov    %eax,%ebx
0x000c380c:  push   %esi
0x000c380e:  mov    %ecx,%eax
0x000c3811:  and    $0x7,%eax
0x000c3815:  push   %eax
0x000c3817:  mov    %ecx,%eax
0x000c381a:  shr    $0x3,%ax
0x000c381d:  and    $0x1f,%eax
0x000c3821:  push   %eax
0x000c3823:  movzbl %ch,%ecx
0x000c3827:  push   %ecx
0x000c3829:  pushl  $0x584d
0x000c382f:  push   %ax
0x000c3830:  call   0xc250d

----------------
IN: 
0x000c2666:  addr32 mov (%ebx),%ecx
0x000c266a:  mov    %edi,%eax
0x000c266d:  test   %al,%al
0x000c266f:  jne    0xc2677

----------------
IN: 
0x000c2671:  add    $0x4,%ebx
0x000c2675:  jmp    0xc267b

----------------
IN: 
0x000c267b:  test   %ecx,%ecx
0x000c267e:  jns    0xc268d

----------------
IN: 
0x000c268d:  mov    %ecx,%eax
0x000c2690:  jmp    0xc26a7

----------------
IN: 
0x000c26a7:  push   %ax
0x000c26a8:  call   0xc22e4

----------------
IN: 
0x000c22e4:  push   %ebp
0x000c22e6:  mov    %esp,%ebp
0x000c22e9:  push   %esi
0x000c22eb:  push   %ebx
0x000c22ed:  sub    $0xc,%esp
0x000c22f1:  mov    %eax,%ebx
0x000c22f4:  addr32 movb $0x0,-0x9(%ebp)
0x000c22f9:  mov    %ebp,%ecx
0x000c22fc:  pushf  
0x000c22fd:  add    $0xfffffff6,%ecx
0x000c2301:  popf   

----------------
IN: 
0x000c2302:  mov    $0xa,%esi
0x000c2308:  mov    %ebx,%eax
0x000c230b:  xor    %edx,%edx
0x000c230e:  div    %esi
0x000c2311:  add    $0x30,%edx
0x000c2315:  addr32 mov %dl,(%ecx)
0x000c2318:  cmp    $0x9,%ebx
0x000c231c:  jbe    0xc2325

----------------
IN: 
0x000c2325:  addr32 movsbl (%ecx),%eax
0x000c232a:  test   %al,%al
0x000c232c:  je     0xc2336

----------------
IN: 
0x000c232e:  push   %ax
0x000c232f:  call   0xc0022

----------------
IN: 
0x000c2332:  inc    %ecx
0x000c2334:  jmp    0xc2325

----------------
IN: 
0x000c2336:  add    $0xc,%esp
0x000c233a:  pop    %ebx
0x000c233c:  pop    %esi
0x000c233e:  pop    %ebp
0x000c2340:  ret    $0x2

----------------
IN: 
0x000c26ab:  jmp    0xc2801

----------------
IN: 
0x000c3833:  add    $0x14,%esp
0x000c3837:  jmp    0xc3848

----------------
IN: 
0x000c3848:  mov    %cs,%ax
0x000c384a:  mov    %ax,%es
0x000c384c:  mov    %ebx,%es:0x7244
0x000c3852:  mov    $0x1ce,%esi
0x000c3858:  mov    $0xa,%eax
0x000c385e:  mov    %esi,%edx
0x000c3861:  out    %ax,(%dx)
0x000c3862:  mov    $0x1cf,%edx
0x000c3868:  in     (%dx),%ax
0x000c3869:  shl    $0x10,%eax
0x000c386d:  addr32 mov %eax,-0x14(%ebp)
0x000c3872:  mov    %eax,%es:0x724c
0x000c3877:  mov    $0x40,%eax
0x000c387d:  mov    %ax,%es:0x7240
0x000c3881:  mov    $0x1,%eax
0x000c3887:  mov    %eax,%es:0x7248
0x000c388c:  addr32 mov -0x14(%ebp),%eax
0x000c3891:  shr    $0x14,%eax
0x000c3895:  push   %eax
0x000c3897:  push   %ebx
0x000c3899:  pushl  $0x5872
0x000c389f:  push   %ax
0x000c38a0:  call   0xc250d

----------------
IN: 
0x000c101c:  cmp    $0x6,%edx
0x000c1020:  je     0xc104e

----------------
IN: 
0x000c1022:  cmp    $0x7,%edx
0x000c1026:  je     0xc103c

----------------
IN: 
0x000c1028:  cmp    $0x5,%edx
0x000c102c:  je     0xc1060

----------------
IN: 
0x000c102e:  mov    %ebx,%eax
0x000c1031:  shr    $0x1c,%eax
0x000c1035:  mov    %esi,%edx
0x000c1038:  push   %ax
0x000c1039:  call   0xc0fc2

----------------
IN: 
0x000c103c:  mov    %ebx,%eax
0x000c103f:  shr    $0x18,%eax
0x000c1043:  and    $0xf,%eax
0x000c1047:  mov    %esi,%edx
0x000c104a:  push   %ax
0x000c104b:  call   0xc0fc2

----------------
IN: 
0x000c104e:  mov    %ebx,%eax
0x000c1051:  shr    $0x14,%eax
0x000c1055:  and    $0xf,%eax
0x000c1059:  mov    %esi,%edx
0x000c105c:  push   %ax
0x000c105d:  call   0xc0fc2

----------------
IN: 
0x000c1060:  mov    %ebx,%eax
0x000c1063:  shr    $0x10,%eax
0x000c1067:  and    $0xf,%eax
0x000c106b:  mov    %esi,%edx
0x000c106e:  push   %ax
0x000c106f:  call   0xc0fc2

----------------
IN: 
0x000c231e:  dec    %ecx
0x000c2320:  mov    %eax,%ebx
0x000c2323:  jmp    0xc2308

----------------
IN: 
0x000c2308:  mov    %ebx,%eax
0x000c230b:  xor    %edx,%edx
0x000c230e:  div    %esi
0x000c2311:  add    $0x30,%edx
0x000c2315:  addr32 mov %dl,(%ecx)
0x000c2318:  cmp    $0x9,%ebx
0x000c231c:  jbe    0xc2325

----------------
IN: 
0x000c38a3:  add    $0xc,%esp
0x000c38a7:  mov    $0x4,%ecx
0x000c38ad:  mov    %ecx,%eax
0x000c38b0:  mov    %esi,%edx
0x000c38b3:  out    %ax,(%dx)
0x000c38b4:  mov    $0x1cf,%edx
0x000c38ba:  in     (%dx),%ax
0x000c38bb:  mov    %eax,%ebx
0x000c38be:  mov    %ecx,%eax
0x000c38c1:  mov    %esi,%edx
0x000c38c4:  out    %ax,(%dx)
0x000c38c5:  mov    %ebx,%eax
0x000c38c8:  or     $0x2,%eax
0x000c38cc:  mov    $0x1cf,%edx
0x000c38d2:  out    %ax,(%dx)
0x000c38d3:  mov    $0x1,%eax
0x000c38d9:  mov    %esi,%edx
0x000c38dc:  out    %ax,(%dx)
0x000c38dd:  mov    $0x1cf,%edx
0x000c38e3:  in     (%dx),%ax
0x000c38e4:  addr32 mov %ax,-0x1e(%ebp)
0x000c38e8:  mov    $0x3,%eax
0x000c38ee:  mov    %esi,%edx
0x000c38f1:  out    %ax,(%dx)
0x000c38f2:  mov    $0x1cf,%edx
0x000c38f8:  in     (%dx),%ax
0x000c38f9:  addr32 mov %ax,-0x20(%ebp)
0x000c38fd:  mov    %ecx,%eax
0x000c3900:  mov    %esi,%edx
0x000c3903:  out    %ax,(%dx)
0x000c3904:  mov    %ebx,%eax
0x000c3907:  mov    $0x1cf,%edx
0x000c390d:  out    %ax,(%dx)
0x000c390e:  mov    %cs:0x5b00,%eax
0x000c3913:  imul   $0xe,%eax,%eax
0x000c3917:  add    $0x5b20,%eax
0x000c391d:  addr32 mov %eax,-0x1c(%ebp)
0x000c3922:  mov    $0x5b20,%esi
0x000c3928:  addr32 cmp -0x1c(%ebp),%esi
0x000c392d:  jae    0xc39d5

----------------
IN: 
0x000c3931:  addr32 mov %cs:0x4(%esi),%bx
0x000c3936:  addr32 mov %cs:0x6(%esi),%ax
0x000c393b:  addr32 mov %ax,-0x22(%ebp)
0x000c393f:  addr32 mov %cs:0x8(%esi),%al
0x000c3944:  addr32 mov %al,-0x23(%ebp)
0x000c3948:  mov    %esi,%eax
0x000c394b:  pushf  
0x000c394c:  add    $0x2,%eax
0x000c3950:  popf   

----------------
IN: 
0x000c3951:  push   %ax
0x000c3952:  call   0xc0da7

----------------
IN: 
0x000c0da7:  mov    %eax,%edx
0x000c0daa:  addr32 mov %cs:(%eax),%cl
0x000c0dae:  test   %cl,%cl
0x000c0db0:  je     0xc0dd5

----------------
IN: 
0x000c0db2:  mov    $0x1,%eax
0x000c0db8:  cmp    $0x3,%cl
0x000c0dbb:  je     0xc0ddb

----------------
IN: 
0x000c0dbd:  addr32 mov %cs:0x6(%edx),%al
0x000c0dc2:  cmp    $0x8,%al
0x000c0dc4:  movzbl %al,%eax
0x000c0dc8:  jbe    0xc0ddb

----------------
IN: 
0x000c0ddb:  ret    $0x2

----------------
IN: 
0x000c3955:  addr32 mov %eax,-0x18(%ebp)
0x000c395a:  mov    %esi,%eax
0x000c395d:  pushf  
0x000c395e:  add    $0x2,%eax
0x000c3962:  popf   

----------------
IN: 
0x000c3963:  push   %ax
0x000c3964:  call   0xc08c9

----------------
IN: 
0x000c08c9:  addr32 mov %cs:(%eax),%dl
0x000c08cd:  cmp    $0x1,%dl
0x000c08d0:  je     0xc08e9

----------------
IN: 
0x000c08d2:  mov    $0x4,%eax
0x000c08d8:  cmp    $0x3,%dl
0x000c08db:  je     0xc08fd

----------------
IN: 
0x000c08dd:  neg    %dl
0x000c08df:  sbb    %eax,%eax
0x000c08e2:  add    $0x2,%eax
0x000c08e6:  ret    $0x2

----------------
IN: 
0x000c3967:  mov    %eax,%ecx
0x000c396a:  addr32 cmp %bx,-0x1e(%ebp)
0x000c396e:  jb     0xc39aa

----------------
IN: 
0x000c3970:  movzwl %bx,%eax
0x000c3974:  addr32 imul -0x18(%ebp),%eax
0x000c397a:  add    $0x7,%eax
0x000c397e:  mov    $0x8,%ebx
0x000c3984:  cltd   
0x000c3986:  idiv   %ebx
0x000c3989:  addr32 movzwl -0x22(%ebp),%edx
0x000c398f:  imul   %edx,%eax
0x000c3993:  imul   %ecx,%eax
0x000c3997:  addr32 cmp %eax,-0x14(%ebp)
0x000c399c:  jb     0xc39aa

----------------
IN: 
0x000c399e:  addr32 movzbl -0x23(%ebp),%ebx
0x000c39a4:  addr32 cmp %bx,-0x20(%ebp)
0x000c39a8:  jae    0xc39ce

----------------
IN: 
0x000c39ce:  add    $0xe,%esi
0x000c39d2:  jmp    0xc3928

----------------
IN: 
0x000c3928:  addr32 cmp -0x1c(%ebp),%esi
0x000c392d:  jae    0xc39d5

----------------
IN: 
0x000c08fd:  ret    $0x2

----------------
IN: 
0x000c0dca:  add    $0x7,%eax
0x000c0dce:  and    $0xfffffff8,%eax
0x000c0dd2:  ret    $0x2

----------------
IN: 
0x000c39d5:  addr32 cmpl $0x0,-0x10(%ebp)
0x000c39db:  je     0xc39ff

----------------
IN: 
0x000c39dd:  addr32 mov -0x10(%ebp),%eax
0x000c39e2:  add    %edi,%eax
0x000c39e5:  addr32 mov (%eax),%al
0x000c39e8:  mov    %cs,%dx
0x000c39ea:  mov    %dx,%es
0x000c39ec:  addr32 mov %al,%es:0x7140(%edi)
0x000c39f4:  inc    %edi
0x000c39f6:  cmp    $0x100,%edi
0x000c39fd:  jmp    0xc39db

----------------
IN: 
0x000c39db:  je     0xc39ff

----------------
IN: 
0x000c39ff:  mov    %cs:0x9870,%eax
0x000c3a04:  addr32 mov %eax,-0x10(%ebp)
0x000c3a09:  test   %eax,%eax
0x000c3a0c:  jne    0xc3df0

----------------
IN: 
0x000c3a10:  mov    $0x40,%eax
0x000c3a16:  mov    %ax,%es
0x000c3a18:  mov    %es:0x10,%dx
0x000c3a1d:  and    $0xffffffcf,%edx
0x000c3a21:  or     $0x20,%edx
0x000c3a25:  mov    %dx,%es:0x10
0x000c3a2a:  mov    %ax,%es
0x000c3a2c:  mov    $0x51,%dl
0x000c3a2e:  mov    %dl,%es:0x89
0x000c3a33:  mov    %ax,%es
0x000c3a35:  mov    $0x8,%dl
0x000c3a37:  mov    %dl,%es:0x8a
0x000c3a3c:  mov    %ax,%es
0x000c3a3e:  xor    %edx,%edx
0x000c3a41:  mov    %dl,%es:0x65
0x000c3a46:  mov    %ax,%es
0x000c3a48:  mov    %dl,%es:0x66
0x000c3a4d:  mov    %cs,%cx
0x000c3a4f:  shl    $0x10,%ecx
0x000c3a53:  mov    $0x66c0,%edx
0x000c3a59:  movzwl %dx,%edx
0x000c3a5d:  or     %ecx,%edx
0x000c3a60:  mov    %ax,%es
0x000c3a62:  mov    %edx,%es:0xa8
0x000c3a68:  mov    %cs,%dx
0x000c3a6a:  mov    %edx,%ecx
0x000c3a6d:  shl    $0x10,%ecx
0x000c3a71:  mov    $0x5f80,%eax
0x000c3a77:  movzwl %ax,%eax
0x000c3a7b:  or     %ecx,%eax
0x000c3a7e:  mov    %dx,%es
0x000c3a80:  mov    %eax,%es:0x66c0
0x000c3a85:  addr32 movl $0x5f4c,-0x18(%ebp)
0x000c3a8e:  mov    $0x5f80,%ebx
0x000c3a94:  addr32 mov -0x18(%ebp),%eax
0x000c3a99:  addr32 mov %cs:(%eax),%dl
0x000c3a9d:  movzbl %dl,%edx
0x000c3aa1:  test   %edx,%edx
0x000c3aa4:  je     0xc3c2d

----------------
IN: 
0x000c3c2d:  addr32 incl -0x18(%ebp)
0x000c3c32:  add    $0x40,%ebx
0x000c3c36:  cmp    $0x66c0,%ebx
0x000c3c3d:  jne    0xc3a94

----------------
IN: 
0x000c3a94:  addr32 mov -0x18(%ebp),%eax
0x000c3a99:  addr32 mov %cs:(%eax),%dl
0x000c3a9d:  movzbl %dl,%edx
0x000c3aa1:  test   %edx,%edx
0x000c3aa4:  je     0xc3c2d

----------------
IN: 
0x000c3aa8:  xor    %eax,%eax
0x000c3aab:  addr32 mov %cs:0x66e0(%eax),%cx
0x000c3ab3:  movzwl %cx,%ecx
0x000c3ab7:  cmp    %ecx,%edx
0x000c3aba:  jne    0xc3b20

----------------
IN: 
0x000c3b20:  add    $0x2c,%eax
0x000c3b24:  cmp    $0x2c0,%eax
0x000c3b2a:  jne    0xc3aab

----------------
IN: 
0x000c3aab:  addr32 mov %cs:0x66e0(%eax),%cx
0x000c3ab3:  movzwl %cx,%ecx
0x000c3ab7:  cmp    %ecx,%edx
0x000c3aba:  jne    0xc3b20

----------------
IN: 
0x000c3abc:  mov    %eax,%edi
0x000c3abf:  pushf  
0x000c3ac0:  add    $0x66e2,%edi
0x000c3ac7:  popf   

----------------
IN: 
0x000c3ac8:  addr32 mov %edi,-0x14(%ebp)
0x000c3acd:  addr32 mov %cs:0x66e4(%eax),%di
0x000c3ad5:  movzwl %di,%esi
0x000c3ad9:  addr32 mov %cs:0x66e6(%eax),%cx
0x000c3ae1:  addr32 mov %cx,-0x1c(%ebp)
0x000c3ae5:  movzwl %cx,%ecx
0x000c3ae9:  addr32 mov %cs:0x66e2(%eax),%dl
0x000c3af1:  addr32 mov %dl,-0x1e(%ebp)
0x000c3af5:  addr32 mov %cs:0x66ea(%eax),%dl
0x000c3afd:  addr32 mov %dl,-0x20(%ebp)
0x000c3b01:  addr32 cmpb $0x0,-0x1e(%ebp)
0x000c3b06:  jne    0xc3b31

----------------
IN: 
0x000c3b31:  addr32 mov %cs:0x66e9(%eax),%al
0x000c3b39:  mov    %cs,%dx
0x000c3b3b:  mov    %dx,%es
0x000c3b3d:  movzbl %al,%edi
0x000c3b41:  mov    %esi,%eax
0x000c3b44:  cltd   
0x000c3b46:  idiv   %edi
0x000c3b49:  addr32 mov %al,%es:(%ebx)
0x000c3b4d:  addr32 movzbl -0x20(%ebp),%edi
0x000c3b53:  mov    %ecx,%eax
0x000c3b56:  cltd   
0x000c3b58:  idiv   %edi
0x000c3b5b:  dec    %eax
0x000c3b5d:  addr32 mov %al,%es:0x1(%ebx)
0x000c3b62:  addr32 mov %cs,-0x1c(%ebp)
0x000c3b66:  addr32 mov -0x1c(%ebp),%es
0x000c3b6a:  addr32 mov -0x20(%ebp),%al
0x000c3b6e:  addr32 mov %al,%es:0x2(%ebx)
0x000c3b73:  addr32 movzbl -0x1e(%ebp),%eax
0x000c3b79:  mov    %esi,%edx
0x000c3b7c:  push   %ax
0x000c3b7d:  call   0xc002f

----------------
IN: 
0x000c002f:  test   %al,%al
0x000c0031:  je     0xc0067

----------------
IN: 
0x000c0033:  push   %ebp
0x000c0035:  mov    %esp,%ebp
0x000c0038:  push   %ebx
0x000c003a:  mov    %eax,%ebx
0x000c003d:  mov    $0x4000,%eax
0x000c0043:  dec    %bl
0x000c0045:  je     0xc007e

----------------
IN: 
0x000c007e:  pop    %ebx
0x000c0080:  pop    %ebp
0x000c0082:  ret    $0x2

----------------
IN: 
0x000c3b80:  addr32 mov %ax,%es:0x3(%ebx)
0x000c3b85:  addr32 mov -0x14(%ebp),%eax
0x000c3b8a:  addr32 mov %cs:0x16(%eax),%esi
0x000c3b90:  mov    %ebx,%edi
0x000c3b93:  pushf  
0x000c3b94:  add    $0x5,%edi
0x000c3b98:  popf   

----------------
IN: 
0x000c3b99:  mov    $0x4,%ecx
0x000c3b9f:  addr32 mov -0x1c(%ebp),%edx
0x000c3ba4:  mov    %ds,%ax
0x000c3ba6:  mov    %dx,%ds
0x000c3ba8:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c3ba8:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c3baa:  mov    %ax,%ds
0x000c3bac:  addr32 mov -0x14(%ebp),%eax
0x000c3bb1:  addr32 mov %cs:0x1a(%eax),%al
0x000c3bb6:  mov    %cs,%dx
0x000c3bb8:  mov    %dx,%es
0x000c3bba:  addr32 mov %al,%es:0x9(%ebx)
0x000c3bbf:  addr32 mov -0x14(%ebp),%eax
0x000c3bc4:  addr32 mov %cs:0x1e(%eax),%esi
0x000c3bca:  mov    %ebx,%edi
0x000c3bcd:  pushf  
0x000c3bce:  add    $0xa,%edi
0x000c3bd2:  popf   

----------------
IN: 
0x000c3bd3:  mov    $0x19,%ecx
0x000c3bd9:  mov    %ds,%ax
0x000c3bdb:  mov    %dx,%ds
0x000c3bdd:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c3bdd:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c3bdf:  mov    %ax,%ds
0x000c3be1:  addr32 mov -0x14(%ebp),%eax
0x000c3be6:  addr32 mov %cs:0x22(%eax),%esi
0x000c3bec:  mov    %cs,%dx
0x000c3bee:  mov    %dx,%es
0x000c3bf0:  mov    %ebx,%edi
0x000c3bf3:  pushf  
0x000c3bf4:  add    $0x23,%edi
0x000c3bf8:  popf   

----------------
IN: 
0x000c3bf9:  mov    $0x14,%ecx
0x000c3bff:  mov    %ds,%ax
0x000c3c01:  mov    %dx,%ds
0x000c3c03:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c3c03:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c3c05:  mov    %ax,%ds
0x000c3c07:  addr32 mov -0x14(%ebp),%eax
0x000c3c0c:  addr32 mov %cs:0x26(%eax),%esi
0x000c3c12:  mov    %cs,%dx
0x000c3c14:  mov    %dx,%es
0x000c3c16:  mov    %ebx,%edi
0x000c3c19:  pushf  
0x000c3c1a:  add    $0x37,%edi
0x000c3c1e:  popf   

----------------
IN: 
0x000c3c1f:  mov    $0x9,%ecx
0x000c3c25:  mov    %ds,%ax
0x000c3c27:  mov    %dx,%ds
0x000c3c29:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c3c29:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c3c2b:  mov    %ax,%ds
0x000c3c2d:  addr32 incl -0x18(%ebp)
0x000c3c32:  add    $0x40,%ebx
0x000c3c36:  cmp    $0x66c0,%ebx
0x000c3c3d:  jne    0xc3a94

----------------
IN: 
0x000c3b08:  mov    %cs,%ax
0x000c3b0a:  mov    %ax,%es
0x000c3b0c:  mov    %edi,%eax
0x000c3b0f:  addr32 mov %al,%es:(%ebx)
0x000c3b13:  addr32 mov -0x1c(%ebp),%dl
0x000c3b17:  dec    %edx
0x000c3b19:  addr32 mov %dl,%es:0x1(%ebx)
0x000c3b1e:  jmp    0xc3b62

----------------
IN: 
0x000c3b62:  addr32 mov %cs,-0x1c(%ebp)
0x000c3b66:  addr32 mov -0x1c(%ebp),%es
0x000c3b6a:  addr32 mov -0x20(%ebp),%al
0x000c3b6e:  addr32 mov %al,%es:0x2(%ebx)
0x000c3b73:  addr32 movzbl -0x1e(%ebp),%eax
0x000c3b79:  mov    %esi,%edx
0x000c3b7c:  push   %ax
0x000c3b7d:  call   0xc002f

----------------
IN: 
0x000c0067:  imul   %dx,%cx
0x000c006a:  mov    %ecx,%eax
0x000c006d:  pushf  
0x000c006e:  shl    %eax
0x000c0071:  add    $0x7ff,%eax
0x000c0077:  popf   

----------------
IN: 
0x000c0078:  and    $0xf800,%ax
0x000c007b:  ret    $0x2

----------------
IN: 
0x000c0047:  movzwl %dx,%edx
0x000c004b:  movzwl %cx,%ecx
0x000c004f:  imul   %ecx,%edx
0x000c0053:  sar    $0x3,%edx
0x000c0057:  mov    %edx,%eax
0x000c005a:  pushf  
0x000c005b:  add    $0x1fff,%eax
0x000c0061:  popf   

----------------
IN: 
0x000c0062:  and    $0xe000,%ax
0x000c0065:  jmp    0xc007e

----------------
IN: 
0x000c3c41:  xor    %edx,%edx
0x000c3c44:  mov    $0x1,%eax
0x000c3c4a:  addr32 imul $0x2c,-0x10(%ebp),%ecx
0x000c3c50:  addr32 cmpw $0x13,0x66e0(%ecx)
0x000c3c58:  ja     0xc3c67

----------------
IN: 
0x000c3c5a:  mov    %eax,%edi
0x000c3c5d:  addr32 mov -0x10(%ebp),%cl
0x000c3c61:  shl    %cl,%edi
0x000c3c64:  or     %edi,%edx
0x000c3c67:  addr32 incl -0x10(%ebp)
0x000c3c6c:  addr32 cmpl $0x10,-0x10(%ebp)
0x000c3c72:  jne    0xc3c4a

----------------
IN: 
0x000c3c4a:  addr32 imul $0x2c,-0x10(%ebp),%ecx
0x000c3c50:  addr32 cmpw $0x13,0x66e0(%ecx)
0x000c3c58:  ja     0xc3c67

----------------
IN: 
0x000c3c67:  addr32 incl -0x10(%ebp)
0x000c3c6c:  addr32 cmpl $0x10,-0x10(%ebp)
0x000c3c72:  jne    0xc3c4a

----------------
IN: 
0x000c3c74:  mov    %cs,%ax
0x000c3c76:  mov    %ax,%es
0x000c3c78:  mov    %edx,%es:-0x67a0
0x000c3c7e:  mov    %eax,%edx
0x000c3c81:  shl    $0x10,%edx
0x000c3c85:  mov    $0x562b,%eax
0x000c3c8b:  movzwl %ax,%eax
0x000c3c8f:  or     %edx,%eax
0x000c3c92:  xor    %edx,%edx
0x000c3c95:  mov    %dx,%es
0x000c3c97:  mov    %eax,%es:0x40
0x000c3c9c:  xor    %eax,%eax
0x000c3c9f:  mov    $0xfffff000,%esi
0x000c3ca5:  mov    %si,%es
0x000c3ca7:  addr32 mov %es:(%eax),%edx
0x000c3cac:  cmp    $0x4d4d5024,%edx
0x000c3cb3:  jne    0xc3d9f

----------------
IN: 
0x000c3d9f:  add    $0x10,%eax
0x000c3da3:  cmp    $0x10000,%eax
0x000c3da9:  jne    0xc3ca5

----------------
IN: 
0x000c3ca5:  mov    %si,%es
0x000c3ca7:  addr32 mov %es:(%eax),%edx
0x000c3cac:  cmp    $0x4d4d5024,%edx
0x000c3cb3:  jne    0xc3d9f

----------------
IN: 
0x000c3cb7:  addr32 mov %es:0x5(%eax),%dl
0x000c3cbc:  movzbl %dl,%edi
0x000c3cc0:  addr32 mov %edi,-0x10(%ebp)
0x000c3cc5:  xor    %ecx,%ecx
0x000c3cc8:  xor    %edx,%edx
0x000c3ccb:  addr32 cmp %edx,-0x10(%ebp)
0x000c3cd0:  jbe    0xc3ce1

----------------
IN: 
0x000c3cd2:  addr32 mov %es:(%eax,%edx,1),%bl
0x000c3cd7:  mov    %ebx,%edi
0x000c3cda:  add    %edi,%ecx
0x000c3cdd:  inc    %edx
0x000c3cdf:  jmp    0xc3ccb

----------------
IN: 
0x000c3ccb:  addr32 cmp %edx,-0x10(%ebp)
0x000c3cd0:  jbe    0xc3ce1

----------------
IN: 
0x000c3ce1:  test   %cl,%cl
0x000c3ce3:  jne    0xc3d9f

----------------
IN: 
0x000c3ce7:  mov    $0xfffff000,%edx
0x000c3ced:  mov    %dx,%es
0x000c3cef:  addr32 mov %es:0x7(%eax),%ecx
0x000c3cf5:  mov    %ecx,%eax
0x000c3cf8:  shr    $0x10,%eax
0x000c3cfc:  mov    %ecx,%ebx
0x000c3cff:  movzwl %cx,%edx
0x000c3d03:  push   %edx
0x000c3d05:  push   %eax
0x000c3d07:  pushl  $0x58a8
0x000c3d0d:  pushl  $0x200
0x000c3d13:  pushl  $0x58af
0x000c3d19:  push   %ax
0x000c3d1a:  call   0xc250d

----------------
IN: 
0x000c2692:  addr32 mov (%ebx),%eax
0x000c2696:  mov    %edi,%ecx
0x000c2699:  test   %cl,%cl
0x000c269b:  jne    0xc26a3

----------------
IN: 
0x000c269d:  add    $0x4,%ebx
0x000c26a1:  jmp    0xc26a7

----------------
IN: 
0x000c3d1d:  add    $0x14,%esp
0x000c3d21:  mov    %ebx,%ecx
0x000c3d24:  mov    $0x20,%ebx
0x000c3d2a:  mov    $0x9,%esi
0x000c3d30:  push   %ecx
0x000c3d32:  push   %si
0x000c3d33:  pushl  $0xffffffff
0x000c3d36:  push   %ebx
0x000c3d38:  push   $0x0
0x000c3d3a:  addr32 lcall *0xc(%esp)

----------------
IN: 
0x000fd0c3:  push   %esp
0x000fd0c5:  movzwl %sp,%esp
0x000fd0c9:  pushfl 
0x000fd0cb:  cli    
0x000fd0cc:  cld    
0x000fd0cd:  push   %eax
0x000fd0cf:  push   %ecx
0x000fd0d1:  push   %edx
0x000fd0d3:  push   %ebx
0x000fd0d5:  push   %ebp
0x000fd0d7:  push   %esi
0x000fd0d9:  push   %edi
0x000fd0db:  push   %es
0x000fd0dc:  push   %ds
0x000fd0dd:  mov    %ss,%ecx
0x000fd0e0:  mov    %cx,%ds
0x000fd0e2:  shl    $0x4,%ecx
0x000fd0e6:  mov    $0x7fbec71,%eax
0x000fd0ec:  addr32 lea 0x2c(%esp,%ecx,1),%edx
0x000fd0f2:  mov    $0xffffffff,%ecx
0x000fd0f8:  calll  0xf7cdf

----------------
IN: 
0x000f7cdf:  push   %ebp
0x000f7ce1:  push   %edi
0x000f7ce3:  push   %esi
0x000f7ce5:  push   %ebx
0x000f7ce7:  mov    %eax,%edi
0x000f7cea:  mov    %edx,%ebx
0x000f7ced:  mov    %cs:0x6174,%eax
0x000f7cf2:  test   %eax,%eax
0x000f7cf5:  je     0xf7d49

----------------
IN: 
0x000f7cf7:  mov    $0x2,%eax
0x000f7cfd:  calll  0xf6b68

----------------
IN: 
0x000f6bca:  mov    %ss,%ax
0x000f6bcc:  mov    $0xd980,%ecx
0x000f6bd2:  mov    %cx,%es
0x000f6bd4:  mov    %ax,%es:0xffa0
0x000f6bd8:  in     $0x70,%al
0x000f6bda:  mov    %al,%dl
0x000f6bdc:  test   %al,%al
0x000f6bde:  js     0xf6be8

----------------
IN: 
0x000f7d03:  mov    %ebx,%esi
0x000f7d06:  mov    %esp,%ebp
0x000f7d09:  mov    %ss,%eax
0x000f7d0c:  shl    $0x4,%eax
0x000f7d10:  add    %eax,%esp
0x000f7d13:  mov    $0xb5,%eax
0x000f7d19:  mov    $0x1234,%ecx
0x000f7d1f:  mov    $0xf7d2a,%ebx
0x000f7d25:  out    %al,$0xb2
0x000f7d27:  pause  

----------------
IN: 
0x000a8000:  mov    %cs,%ax
0x000a8002:  ljmp   $0xf000,$0xd069

----------------
IN: 
0x000f0167:  cmp    $0xb5,%al
0x000f0169:  jne    0xf0334

----------------
IN: 
0x000f016f:  cmp    $0x20000,%edx
0x000f0175:  jne    0xf0244

----------------
IN: 
0x000f017b:  lea    0x8(%esp),%edi
0x000f017f:  lea    0xffd0(%ebx),%esi
0x000f0185:  mov    $0x8,%ecx
0x000f018a:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f018a:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f018c:  mov    0xffdc(%ebx),%eax
0x000f0192:  mov    %eax,(%esp)
0x000f0195:  mov    0xffd4(%ebx),%eax
0x000f019b:  cmp    $0x1234,%eax
0x000f01a0:  lea    0x8(%esp),%edx
0x000f01a4:  lea    0xffd0(%ebx),%ecx
0x000f01aa:  mov    %ecx,0x4(%esp)
0x000f01ae:  jne    0xf01f7

----------------
IN: 
0x000f01b0:  lea    0xfe00(%ebx),%eax
0x000f01b6:  mov    %eax,0x4(%esp)
0x000f01ba:  lea    0x200(%ebx),%eax
0x000f01c0:  mov    $0x80,%ecx
0x000f01c5:  mov    %eax,%edi
0x000f01c7:  mov    0x4(%esp),%esi
0x000f01cb:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f01cb:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f01cd:  mov    $0x80,%ecx
0x000f01d2:  mov    0x4(%esp),%edi
0x000f01d6:  mov    %ebx,%esi
0x000f01d8:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f01d8:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f01da:  mov    $0x8,%ecx
0x000f01df:  lea    0xffd0(%ebx),%edi
0x000f01e5:  mov    %edx,%esi
0x000f01e7:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f01e7:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f01e9:  mov    (%esp),%eax
0x000f01ec:  mov    %eax,0xfff0(%ebx)
0x000f01f2:  jmp    0xf02d1

----------------
IN: 
0x000f02d1:  mov    $0x1,%eax
0x000f02d6:  call   0xe97c0

----------------
IN: 
0x000e97c0:  mov    %eax,%edx
0x000e97c2:  in     $0x92,%al
0x000e97c4:  mov    %al,%cl
0x000e97c6:  shr    %cl
0x000e97c8:  and    $0x1,%ecx
0x000e97cb:  and    $0x1,%edx
0x000e97ce:  cmp    %dl,%cl
0x000e97d0:  je     0xe97d7

----------------
IN: 
0x000e97d7:  mov    %cl,%al
0x000e97d9:  ret    

----------------
IN: 
0x000f02db:  movzbl %al,%eax
0x000f02de:  mov    %eax,0x400(%ebx)
0x000f02e4:  jmp    0xf0334

----------------
IN: 
0x000f7d2a:  mov    %esi,%eax
0x000f7d2c:  call   *%edi

----------------
IN: 
0x07fbec71:  push   %ebp
0x07fbec72:  push   %edi
0x07fbec73:  push   %esi
0x07fbec74:  push   %ebx
0x07fbec75:  sub    $0xc,%esp
0x07fbec78:  mov    %eax,%esi
0x07fbec7a:  movzwl (%eax),%eax
0x07fbec7d:  mov    %eax,%edi
0x07fbec7f:  push   %eax
0x07fbec80:  push   $0xf49c9
0x07fbec85:  call   0xec4d8

----------------
IN: 
0x07fbec8a:  pop    %eax
0x07fbec8b:  pop    %edx
0x07fbec8c:  cmp    $0x1,%di
0x07fbec90:  je     0x7fbee07

----------------
IN: 
0x07fbec96:  cmp    $0x2,%di
0x07fbec9a:  je     0x7fbee3c

----------------
IN: 
0x07fbeca0:  or     $0xffffffff,%ebx
0x07fbeca3:  test   %di,%di
0x07fbeca6:  jne    0x7fbee4b

----------------
IN: 
0x07fbecac:  mov    0x2(%esi),%ebx
0x07fbecaf:  mov    0xa(%esi),%di
0x07fbecb3:  mov    %edi,%eax
0x07fbecb5:  and    $0x8,%ax
0x07fbecb9:  mov    %ax,(%esp)
0x07fbecbd:  je     0x7fbeccb

----------------
IN: 
0x07fbecbf:  mov    $0x7fbfe84,%ebp
0x07fbecc4:  mov    $0x7fbfe88,%eax
0x07fbecc9:  jmp    0x7fbecd5

----------------
IN: 
0x07fbecd5:  test   %ebx,%ebx
0x07fbecd7:  jne    0x7fbed1d

----------------
IN: 
0x07fbed1d:  mov    0x6(%esi),%esi
0x07fbed20:  mov    %ebx,%edx
0x07fbed22:  shl    $0x4,%edx
0x07fbed25:  test   %edx,%edx
0x07fbed27:  jg     0x7fbed30

----------------
IN: 
0x07fbed30:  mov    $0x10,%ecx
0x07fbed35:  test   $0x4,%edi
0x07fbed3b:  je     0x7fbed53

----------------
IN: 
0x07fbed53:  and    $0x3,%edi
0x07fbed56:  cmp    $0x2,%di
0x07fbed5a:  je     0x7fbed6e

----------------
IN: 
0x07fbed5c:  cmp    $0x3,%di
0x07fbed60:  je     0x7fbedbe

----------------
IN: 
0x07fbed62:  xor    %ebx,%ebx
0x07fbed64:  dec    %di
0x07fbed66:  jne    0x7fbee4b

----------------
IN: 
0x07fbed6c:  jmp    0x7fbedd9

----------------
IN: 
0x07fbedd9:  call   0x7fadfb2

----------------
IN: 
0x07fbedde:  mov    %eax,%ebx
0x07fbede0:  test   %eax,%eax
0x07fbede2:  je     0x7fbed29

----------------
IN: 
0x07fbede8:  cmp    $0xffffffff,%esi
0x07fbedeb:  je     0x7fbee4b

----------------
IN: 
0x07fbee4b:  mov    %ebx,%eax
0x07fbee4d:  add    $0xc,%esp
0x07fbee50:  pop    %ebx
0x07fbee51:  pop    %esi
0x07fbee52:  pop    %edi
0x07fbee53:  pop    %ebp
0x07fbee54:  ret    

----------------
IN: 
0x000f7d2e:  mov    %eax,%esi
0x000f7d30:  mov    $0xb5,%eax
0x000f7d35:  mov    $0x5678,%ecx
0x000f7d3a:  mov    $0x7d44,%ebx
0x000f7d3f:  out    %al,$0xb2
0x000f7d41:  pause  

----------------
IN: 
0x000f01f7:  cmp    $0x5678,%eax
0x000f01fc:  jne    0xf0334

----------------
IN: 
0x000f0202:  lea    0xfe00(%ebx),%eax
0x000f0208:  lea    0x200(%ebx),%esi
0x000f020e:  mov    $0x80,%ecx
0x000f0213:  mov    %eax,%edi
0x000f0215:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f0215:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f0217:  mov    $0x8,%ecx
0x000f021c:  lea    0xffd0(%ebx),%edi
0x000f0222:  mov    %edx,%esi
0x000f0224:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f0224:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f0226:  cmpl   $0x0,0x400(%ebx)
0x000f022d:  jne    0xf0236

----------------
IN: 
0x000f0236:  mov    (%esp),%eax
0x000f0239:  mov    %eax,0xfff0(%ebx)
0x000f023f:  jmp    0xf0334

----------------
IN: 
0x000f7d44:  mov    %ebp,%esp
0x000f7d47:  jmp    0xf7d90

----------------
IN: 
0x000f7d90:  calll  0xf7188

----------------
IN: 
0x000f7d96:  mov    %esi,%eax
0x000f7d99:  pop    %ebx
0x000f7d9b:  pop    %esi
0x000f7d9d:  pop    %edi
0x000f7d9f:  pop    %ebp
0x000f7da1:  retl   

----------------
IN: 
0x000fd0fe:  addr32 mov %ax,0x1c(%esp)
0x000fd103:  shr    $0x10,%eax
0x000fd107:  addr32 mov %ax,0x14(%esp)
0x000fd10c:  pop    %ds
0x000fd10d:  pop    %es
0x000fd10e:  pop    %edi
0x000fd110:  pop    %esi
0x000fd112:  pop    %ebp
0x000fd114:  pop    %ebx
0x000fd116:  pop    %edx
0x000fd118:  pop    %ecx
0x000fd11a:  pop    %eax
0x000fd11c:  popfl  

----------------
IN: 
0x000fd11e:  pop    %esp
0x000fd120:  lret   

----------------
IN: 
0x000c3d3f:  add    $0x10,%esp
0x000c3d43:  cli    
0x000c3d44:  cld    
0x000c3d45:  shl    $0x10,%edx
0x000c3d49:  movzwl %ax,%eax
0x000c3d4d:  mov    %edx,%ebx
0x000c3d50:  or     %eax,%ebx
0x000c3d53:  mov    %ebx,%eax
0x000c3d56:  pushf  
0x000c3d57:  add    $0xffffffff,%eax
0x000c3d5b:  popf   

----------------
IN: 
0x000c3d5c:  cmp    $0xfffffffd,%eax
0x000c3d60:  ja     0xc3dad

----------------
IN: 
0x000c3d62:  push   %ebx
0x000c3d64:  pushl  $0x58ed
0x000c3d6a:  push   %ax
0x000c3d6b:  call   0xc250d

----------------
IN: 
0x000c3d6e:  pop    %eax
0x000c3d70:  pop    %edx
0x000c3d72:  mov    %cs,%ax
0x000c3d74:  mov    %ax,%es
0x000c3d76:  shr    $0x4,%ebx
0x000c3d7a:  mov    %bx,%es:-0x6788
0x000c3d7f:  mov    %eax,%edx
0x000c3d82:  shl    $0x10,%edx
0x000c3d86:  mov    $0x5663,%eax
0x000c3d8c:  movzwl %ax,%eax
0x000c3d90:  or     %edx,%eax
0x000c3d93:  xor    %edx,%edx
0x000c3d96:  mov    %dx,%es
0x000c3d98:  mov    %eax,%es:0x40
0x000c3d9d:  jmp    0xc3dad

----------------
IN: 
0x000c3dad:  mov    %cs,%ax
0x000c3daf:  mov    %ax,%es
0x000c3db1:  mov    $0x1,%eax
0x000c3db7:  mov    %eax,%es:0x9870
0x000c3dbc:  xor    %eax,%eax
0x000c3dbf:  mov    %al,%es:0x6
0x000c3dc3:  mov    %cs:0x2,%al
0x000c3dc7:  movzbl %al,%edx
0x000c3dcb:  shl    $0x9,%edx
0x000c3dcf:  xor    %eax,%eax
0x000c3dd2:  xor    %ecx,%ecx
0x000c3dd5:  cmp    %ecx,%edx
0x000c3dd8:  je     0xc3de5

----------------
IN: 
0x000c3dda:  addr32 mov %es:(%ecx),%bl
0x000c3dde:  add    %ebx,%eax
0x000c3de1:  inc    %ecx
0x000c3de3:  jmp    0xc3dd5

----------------
IN: 
0x000c3dd5:  cmp    %ecx,%edx
0x000c3dd8:  je     0xc3de5

----------------
IN: 
0x000c3de5:  mov    %cs,%dx
0x000c3de7:  mov    %dx,%es
0x000c3de9:  neg    %eax
0x000c3dec:  mov    %al,%es:0x6
0x000c3df0:  lea    -0xc(%bp),%sp
0x000c3df3:  pop    %ebx
0x000c3df5:  pop    %esi
0x000c3df7:  pop    %edi
0x000c3df9:  pop    %ebp
0x000c3dfb:  ret    $0x2

----------------
IN: 
0x000c5617:  mov    %ebx,%esp
0x000c561a:  pop    %ds
0x000c561b:  pop    %es
0x000c561c:  pop    %edi
0x000c561e:  pop    %esi
0x000c5620:  pop    %ebp
0x000c5622:  pop    %ebx
0x000c5624:  pop    %edx
0x000c5626:  pop    %ecx
0x000c5628:  pop    %eax
0x000c562a:  lret   

----------------
IN: 
0x000ee557:  call   0xec1b3

----------------
IN: 
0x000ec1b3:  call   0xea062

----------------
IN: 
0x000ec1b8:  test   %eax,%eax
0x000ec1ba:  jne    0xec1c1

----------------
IN: 
0x000ec1bc:  jmp    0xec186

Servicing hardware INT=0x08
----------------
IN: 
0x000ee55c:  add    $0x34,%esp
0x000ee55f:  pop    %ebx
0x000ee560:  pop    %esi
0x000ee561:  pop    %edi
0x000ee562:  ret    

----------------
IN: 
0x07fb50cb:  movzbl 0x2(%ebx),%ebx
0x07fb50cf:  shl    $0x9,%ebx
0x07fb50d2:  mov    %ebx,%eax
0x07fb50d4:  call   0x7fab9c9

----------------
IN: 
0x07fb50d9:  test   %eax,%eax
0x07fb50db:  jne    0x7fb50f3

----------------
IN: 
0x07fb50f3:  mov    0x7fbfe60,%eax
0x07fb50f8:  lea    0x7ff(%ebx,%eax,1),%eax
0x07fb50ff:  and    $0xfffff800,%eax
0x07fb5104:  mov    %eax,0x7fbfe60
0x07fb5109:  add    $0x28,%esp
0x07fb510c:  pop    %ebx
0x07fb510d:  pop    %esi
0x07fb510e:  pop    %edi
0x07fb510f:  pop    %ebp
0x07fb5110:  ret    

----------------
IN: 
0x07fb521e:  movzwl 0x4(%esp),%edx
0x07fb5223:  or     $0xf0000000,%edx
0x07fb5229:  cmp    0x64,%edx
0x07fb522f:  setne  %dl
0x07fb5232:  mov    0xc(%esp),%ecx
0x07fb5236:  cmp    %ecx,0x8(%esp)
0x07fb523a:  sete   %cl
0x07fb523d:  and    %ecx,%edx
0x07fb523f:  or     (%esp),%edi
0x07fb5242:  sete   %cl
0x07fb5245:  test   %cl,%dl
0x07fb5247:  je     0x7fb5284

----------------
IN: 
0x07fb5284:  add    $0x28,%esp
0x07fb5287:  pop    %ebx
0x07fb5288:  pop    %esi
0x07fb5289:  pop    %edi
0x07fb528a:  pop    %ebp
0x07fb528b:  ret    

----------------
IN: 
0x07fbbd41:  jmp    0x7fbbda8

----------------
IN: 
0x07fbbda8:  xor    %ecx,%ecx
0x07fbbdaa:  mov    $0x1,%edx
0x07fbbdaf:  mov    $0xf3ff7,%eax
0x07fbbdb4:  call   0x7fb5111

----------------
IN: 
0x07fb5111:  push   %ebp
0x07fb5112:  push   %edi
0x07fb5113:  push   %esi
0x07fb5114:  push   %ebx
0x07fb5115:  mov    %eax,%ebp
0x07fb5117:  mov    %edx,%edi
0x07fb5119:  mov    %ecx,%esi
0x07fb511b:  xor    %ebx,%ebx
0x07fb511d:  mov    %ebx,%edx
0x07fb511f:  mov    %ebp,%eax
0x07fb5121:  call   0x7faba53

----------------
IN: 
0x07faba53:  push   %edi
0x07faba54:  push   %esi
0x07faba55:  push   %ebx
0x07faba56:  mov    %eax,%esi
0x07faba58:  mov    %edx,%ebx
0x07faba5a:  call   0xe9960

----------------
IN: 
0x07faba5f:  mov    %eax,%edi
0x07faba61:  test   %ebx,%ebx
0x07faba63:  jne    0x7faba7f

----------------
IN: 
0x07faba65:  mov    0x7fbfe5c,%ebx
0x07faba6b:  test   %ebx,%ebx
0x07faba6d:  je     0x7faba83

----------------
IN: 
0x07faba6f:  lea    0x4(%ebx),%edx
0x07faba72:  mov    %edi,%ecx
0x07faba74:  mov    %esi,%eax
0x07faba76:  call   0x7fab68e

----------------
IN: 
0x07faba7b:  test   %eax,%eax
0x07faba7d:  je     0x7faba83

----------------
IN: 
0x07faba7f:  mov    (%ebx),%ebx
0x07faba81:  jmp    0x7faba6b

----------------
IN: 
0x07faba6b:  test   %ebx,%ebx
0x07faba6d:  je     0x7faba83

----------------
IN: 
0x07faba83:  mov    %ebx,%eax
0x07faba85:  pop    %ebx
0x07faba86:  pop    %esi
0x07faba87:  pop    %edi
0x07faba88:  ret    

----------------
IN: 
0x07fb5126:  mov    %eax,%ebx
0x07fb5128:  test   %eax,%eax
0x07fb512a:  je     0x7fb5158

----------------
IN: 
0x07fb5158:  pop    %ebx
0x07fb5159:  pop    %esi
0x07fb515a:  pop    %edi
0x07fb515b:  pop    %ebp
0x07fb515c:  ret    

----------------
IN: 
0x07fbbdb9:  xor    %eax,%eax
0x07fbbdbb:  call   0x7fab9c9

----------------
IN: 
0x07fbbdc0:  cmpl   $0xc0000,0x7fbfe60
0x07fbbdca:  je     0x7fbbdd6

----------------
IN: 
0x07fbbdcc:  movl   $0xc0000,0xf54c4
0x07fbbdd6:  xor    %edx,%edx
0x07fbbdd8:  xor    %ecx,%ecx
0x07fbbdda:  mov    $0xf175c,%eax
0x07fbbddf:  call   0x7fad81f

----------------
IN: 
0x07fbbde4:  mov    %eax,%ebx
0x07fbbde6:  test   %ax,%ax
0x07fbbde9:  je     0x7fbbe95

----------------
IN: 
0x07fbbe95:  call   0x7fb21bc

----------------
IN: 
0x07fb21bc:  push   %ebp
0x07fb21bd:  push   %edi
0x07fb21be:  push   %esi
0x07fb21bf:  push   %ebx
0x07fb21c0:  sub    $0x60,%esp
0x07fb21c3:  push   $0xf14ab
0x07fb21c8:  call   0xec4d8

----------------
IN: 
0x07fb21cd:  mov    $0x26,%ecx
0x07fb21d2:  xor    %edx,%edx
0x07fb21d4:  lea    0x3e(%esp),%eax
0x07fb21d8:  call   0xeab7b

----------------
IN: 
0x07fb21dd:  movw   $0x3,0x5a(%esp)
0x07fb21e4:  call   0x7fadb31

----------------
IN: 
0x07fadb31:  push   %edx
0x07fadb32:  movw   $0x200,0x24(%eax)
0x07fadb38:  mov    %eax,(%esp)
0x07fadb3b:  call   0xeb1c7

----------------
IN: 
0x07fadb40:  mov    $0xfd05a,%edx
0x07fadb45:  movzwl %dx,%edx
0x07fadb48:  mov    (%esp),%eax
0x07fadb4b:  call   0xec42f

----------------
IN: 
0x000ec42f:  mov    %dx,0x20(%eax)
0x000ec433:  movw   $0xf000,0x22(%eax)
0x000ec439:  movzwl 0xe97a0,%edx
0x000ec440:  mov    %edx,%ecx
0x000ec442:  shl    $0x4,%ecx
0x000ec445:  sub    %ecx,%eax
0x000ec447:  mov    $0xf8148,%ecx
0x000ec44c:  jmp    0xec0df

----------------
IN: 
0x000fd05a:  int    $0x10

----------------
IN: 
0x000c5663:  cli    
0x000c5664:  cld    
0x000c5665:  push   %ds
0x000c5666:  push   %eax
0x000c5668:  mov    $0x40,%ax
0x000c566b:  mov    %ax,%ds
0x000c566d:  testb  $0x40,0xb9
0x000c5672:  je     0xc570d

----------------
IN: 
0x000c570d:  pop    %eax
0x000c570f:  pop    %ds
0x000c5710:  jmp    0xc562b

----------------
IN: 
0x000c562b:  cli    
0x000c562c:  cld    
0x000c562d:  push   %eax
0x000c562f:  push   %ecx
0x000c5631:  push   %edx
0x000c5633:  push   %ebx
0x000c5635:  push   %ebp
0x000c5637:  push   %esi
0x000c5639:  push   %edi
0x000c563b:  push   %es
0x000c563c:  push   %ds
0x000c563d:  mov    %ss,%ax
0x000c563f:  mov    %ax,%ds
0x000c5641:  mov    %esp,%ebx
0x000c5644:  movzwl %sp,%esp
0x000c5648:  mov    %esp,%eax
0x000c564b:  push   %ax
0x000c564c:  call   0xc487c

----------------
IN: 
0x000c487c:  push   %ebp
0x000c487e:  mov    %esp,%ebp
0x000c4881:  push   %edi
0x000c4883:  push   %esi
0x000c4885:  push   %ebx
0x000c4887:  sub    $0x8,%esp
0x000c488b:  mov    %eax,%ebx
0x000c488e:  addr32 mov 0x1d(%eax),%al
0x000c4892:  cmp    $0xc,%al
0x000c4894:  je     0xc4bf5

----------------
IN: 
0x000c4898:  ja     0xc48fc

----------------
IN: 
0x000c489a:  cmp    $0x6,%al
0x000c489c:  je     0xc4acc

----------------
IN: 
0x000c48a0:  ja     0xc48ce

----------------
IN: 
0x000c48a2:  cmp    $0x3,%al
0x000c48a4:  je     0xc49f4

----------------
IN: 
0x000c48a8:  ja     0xc48bf

----------------
IN: 
0x000c48aa:  cmp    $0x1,%al
0x000c48ac:  je     0xc49d1

----------------
IN: 
0x000c48b0:  cmp    $0x2,%al
0x000c48b2:  je     0xc49e5

----------------
IN: 
0x000c48b6:  test   %al,%al
0x000c48b8:  je     0xc4971

----------------
IN: 
0x000c4971:  addr32 movzbl 0x1c(%ebx),%esi
0x000c4977:  mov    %esi,%ecx
0x000c497a:  and    $0x7f,%ecx
0x000c497e:  mov    %esi,%edi
0x000c4981:  and    $0x7f,%edi
0x000c4985:  mov    $0x40,%eax
0x000c498b:  mov    %ax,%es
0x000c498d:  mov    %es:0x89,%dl
0x000c4992:  and    $0xa,%edx
0x000c4996:  or     $0x1,%edx
0x000c499a:  addr32 cmpb $0x0,0x1c(%ebx)
0x000c499f:  jns    0xc49a4

----------------
IN: 
0x000c49a4:  mov    $0x20,%al
0x000c49a6:  and    $0x78,%esi
0x000c49aa:  jne    0xc49bc

----------------
IN: 
0x000c49ac:  cmp    $0x6,%cl
0x000c49af:  sete   %al
0x000c49b2:  dec    %eax
0x000c49b4:  and    $0xfffffff1,%eax
0x000c49b8:  add    $0x3f,%eax
0x000c49bc:  addr32 mov %al,0x1c(%ebx)
0x000c49c0:  mov    %edi,%eax
0x000c49c3:  lea    -0xc(%bp),%sp
0x000c49c6:  pop    %ebx
0x000c49c8:  pop    %esi
0x000c49ca:  pop    %edi
0x000c49cc:  pop    %ebp
0x000c49ce:  jmp    0xc3180

----------------
IN: 
0x000c3180:  push   %ebp
0x000c3182:  mov    %esp,%ebp
0x000c3185:  push   %edi
0x000c3187:  push   %esi
0x000c3189:  push   %ebx
0x000c318b:  sub    $0x14,%esp
0x000c318f:  addr32 mov %eax,-0x14(%ebp)
0x000c3194:  addr32 mov %edx,-0x10(%ebp)
0x000c3199:  push   %eax
0x000c319b:  pushl  $0x57cb
0x000c31a1:  push   %ax
0x000c31a2:  call   0xc250d

----------------
IN: 
0x000c31a5:  pop    %edx
0x000c31a7:  pop    %ecx
0x000c31a9:  addr32 mov -0x14(%ebp),%eax
0x000c31ae:  push   %ax
0x000c31af:  call   0xc2b1a

----------------
IN: 
0x000c2b1a:  push   %ebp
0x000c2b1c:  mov    %esp,%ebp
0x000c2b1f:  push   %ebx
0x000c2b21:  mov    %eax,%ecx
0x000c2b24:  mov    %cs:0x5b00,%edx
0x000c2b2a:  mov    %cs:0x5afc,%eax
0x000c2b2f:  test   %eax,%eax
0x000c2b32:  je     0xc2b63

----------------
IN: 
0x000c2b34:  imul   $0xe,%edx,%edx
0x000c2b38:  add    $0x5b20,%edx
0x000c2b3f:  mov    $0x5b20,%eax
0x000c2b45:  cmp    %edx,%eax
0x000c2b48:  jae    0xc2b63

----------------
IN: 
0x000c2b4a:  addr32 mov %cs:(%eax),%bx
0x000c2b4e:  movzwl %bx,%ebx
0x000c2b52:  cmp    %ebx,%ecx
0x000c2b55:  jne    0xc2b5d

----------------
IN: 
0x000c2b5d:  add    $0xe,%eax
0x000c2b61:  jmp    0xc2b45

----------------
IN: 
0x000c2b45:  cmp    %edx,%eax
0x000c2b48:  jae    0xc2b63

----------------
IN: 
0x000c2b63:  xor    %eax,%eax
0x000c2b66:  addr32 mov %cs:0x66e0(%eax),%dx
0x000c2b6e:  movzwl %dx,%edx
0x000c2b72:  cmp    %edx,%ecx
0x000c2b75:  jne    0xc2b7f

----------------
IN: 
0x000c2b7f:  add    $0x2c,%eax
0x000c2b83:  cmp    $0x2c0,%eax
0x000c2b89:  jne    0xc2b66

----------------
IN: 
0x000c2b66:  addr32 mov %cs:0x66e0(%eax),%dx
0x000c2b6e:  movzwl %dx,%edx
0x000c2b72:  cmp    %edx,%ecx
0x000c2b75:  jne    0xc2b7f

----------------
IN: 
0x000c2b77:  add    $0x66e2,%eax
0x000c2b7d:  jmp    0xc2b8e

----------------
IN: 
0x000c2b8e:  pop    %ebx
0x000c2b90:  pop    %ebp
0x000c2b92:  ret    $0x2

----------------
IN: 
0x000c31b2:  test   %eax,%eax
0x000c31b5:  je     0xc361f

----------------
IN: 
0x000c31b9:  mov    %eax,%esi
0x000c31bc:  mov    %cs:0x5afc,%eax
0x000c31c1:  test   %eax,%eax
0x000c31c4:  je     0xc31dd

----------------
IN: 
0x000c31c6:  mov    $0x4,%eax
0x000c31cc:  mov    $0x1ce,%edx
0x000c31d2:  out    %ax,(%dx)
0x000c31d3:  xor    %eax,%eax
0x000c31d6:  mov    $0x1cf,%edx
0x000c31dc:  out    %ax,(%dx)
0x000c31dd:  mov    %cs:0x5b00,%eax
0x000c31e2:  cmp    $0x5b22,%esi
0x000c31e9:  jb     0xc320e

----------------
IN: 
0x000c31eb:  dec    %eax
0x000c31ed:  imul   $0xe,%eax,%eax
0x000c31f1:  add    $0x5b22,%eax
0x000c31f7:  cmp    %eax,%esi
0x000c31fa:  ja     0xc320e

----------------
IN: 
0x000c320e:  addr32 mov -0x10(%ebp),%edx
0x000c3213:  mov    %esi,%eax
0x000c3216:  push   %ax
0x000c3217:  call   0xc28f1

----------------
IN: 
0x000c28f1:  push   %ebp
0x000c28f3:  mov    %esp,%ebp
0x000c28f6:  push   %edi
0x000c28f8:  push   %esi
0x000c28fa:  push   %ebx
0x000c28fc:  push   %ecx
0x000c28fe:  addr32 mov %edx,-0x10(%ebp)
0x000c2903:  cmp    $0x6976,%eax
0x000c2909:  ja     0xc2959

----------------
IN: 
0x000c290b:  mov    %eax,%ebx
0x000c290e:  cmp    $0x66e2,%eax
0x000c2914:  jb     0xc2959

----------------
IN: 
0x000c2916:  and    $0x8,%dl
0x000c2919:  jne    0xc29b3

----------------
IN: 
0x000c291d:  addr32 mov %cs:0xc(%eax),%al
0x000c2922:  mov    $0x3c6,%edx
0x000c2928:  out    %al,(%dx)
0x000c2929:  addr32 mov %cs:0xe(%ebx),%edi
0x000c292f:  addr32 mov %cs:0x12(%ebx),%ax
0x000c2934:  mov    $0x3,%ecx
0x000c293a:  xor    %edx,%edx
0x000c293d:  div    %cx
0x000c293f:  movzwl %ax,%esi
0x000c2943:  mov    %cs,%ax
0x000c2945:  movzwl %ax,%eax
0x000c2949:  push   %esi
0x000c294b:  xor    %ecx,%ecx
0x000c294e:  mov    %edi,%edx
0x000c2951:  push   %ax
0x000c2952:  call   0xc0c44

----------------
IN: 
0x000c0c44:  push   %ebp
0x000c0c46:  mov    %esp,%ebp
0x000c0c49:  push   %edi
0x000c0c4b:  push   %esi
0x000c0c4d:  push   %ebx
0x000c0c4f:  mov    %edx,%ebx
0x000c0c52:  addr32 mov 0x8(%ebp),%esi
0x000c0c57:  mov    %eax,%edi
0x000c0c5a:  mov    $0x3c8,%edx
0x000c0c60:  mov    %cl,%al
0x000c0c62:  out    %al,(%dx)
0x000c0c63:  mov    $0x3c9,%edx
0x000c0c69:  test   %esi,%esi
0x000c0c6c:  je     0xc0c89

----------------
IN: 
0x000c0c6e:  mov    %di,%es
0x000c0c70:  addr32 mov %es:(%ebx),%al
0x000c0c74:  out    %al,(%dx)
0x000c0c75:  addr32 mov %es:0x1(%ebx),%al
0x000c0c7a:  out    %al,(%dx)
0x000c0c7b:  addr32 mov %es:0x2(%ebx),%al
0x000c0c80:  out    %al,(%dx)
0x000c0c81:  add    $0x3,%ebx
0x000c0c85:  dec    %esi
0x000c0c87:  jmp    0xc0c69

----------------
IN: 
0x000c0c69:  test   %esi,%esi
0x000c0c6c:  je     0xc0c89

----------------
IN: 
0x000c0c89:  pop    %ebx
0x000c0c8b:  pop    %esi
0x000c0c8d:  pop    %edi
0x000c0c8f:  pop    %ebp
0x000c0c91:  ret    $0x2

----------------
IN: 
0x000c2955:  pop    %edx
0x000c2957:  jmp    0xc297a

----------------
IN: 
0x000c297a:  cmp    $0xff,%esi
0x000c2981:  jg     0xc299f

----------------
IN: 
0x000c2983:  mov    %cs,%ax
0x000c2985:  movzwl %ax,%eax
0x000c2989:  pushl  $0x1
0x000c298c:  mov    %esi,%ecx
0x000c298f:  mov    $0x5f48,%edx
0x000c2995:  push   %ax
0x000c2996:  call   0xc0c44

----------------
IN: 
0x000c2999:  pop    %eax
0x000c299b:  inc    %esi
0x000c299d:  jmp    0xc297a

----------------
IN: 
0x000c299f:  addr32 testb $0x2,-0x10(%ebp)
0x000c29a4:  je     0xc29b3

----------------
IN: 
0x000c29b3:  addr32 mov %cs:0x22(%ebx),%edi
0x000c29b9:  xor    %esi,%esi
0x000c29bc:  addr32 mov %cs:(%edi,%esi,1),%dl
0x000c29c1:  movzbl %dl,%edx
0x000c29c5:  mov    %esi,%eax
0x000c29c8:  push   %ax
0x000c29c9:  call   0xc0b1e

----------------
IN: 
0x000c0b1e:  push   %ebp
0x000c0b20:  mov    %esp,%ebp
0x000c0b23:  push   %esi
0x000c0b25:  push   %ebx
0x000c0b27:  mov    %al,%bl
0x000c0b29:  mov    %dl,%cl
0x000c0b2b:  mov    $0x3da,%edx
0x000c0b31:  in     (%dx),%al
0x000c0b32:  mov    $0x3c0,%edx
0x000c0b38:  in     (%dx),%al
0x000c0b39:  mov    %eax,%esi
0x000c0b3c:  mov    %bl,%al
0x000c0b3e:  out    %al,(%dx)
0x000c0b3f:  mov    %cl,%al
0x000c0b41:  out    %al,(%dx)
0x000c0b42:  mov    %esi,%eax
0x000c0b45:  out    %al,(%dx)
0x000c0b46:  pop    %ebx
0x000c0b48:  pop    %esi
0x000c0b4a:  pop    %ebp
0x000c0b4c:  ret    $0x2

----------------
IN: 
0x000c29cc:  inc    %esi
0x000c29ce:  cmp    $0x14,%esi
0x000c29d2:  jne    0xc29bc

----------------
IN: 
0x000c29bc:  addr32 mov %cs:(%edi,%esi,1),%dl
0x000c29c1:  movzbl %dl,%edx
0x000c29c5:  mov    %esi,%eax
0x000c29c8:  push   %ax
0x000c29c9:  call   0xc0b1e

----------------
IN: 
0x000c29d4:  xor    %edx,%edx
0x000c29d7:  mov    $0x14,%eax
0x000c29dd:  push   %ax
0x000c29de:  call   0xc0b1e

----------------
IN: 
0x000c29e1:  mov    $0x300,%eax
0x000c29e7:  mov    $0x3c4,%edx
0x000c29ed:  out    %ax,(%dx)
0x000c29ee:  addr32 mov %cs:0x16(%ebx),%esi
0x000c29f4:  mov    $0x1,%ecx
0x000c29fa:  addr32 mov %cs:-0x1(%esi,%ecx,1),%al
0x000c2a00:  shl    $0x8,%eax
0x000c2a04:  or     %ecx,%eax
0x000c2a07:  out    %ax,(%dx)
0x000c2a08:  inc    %ecx
0x000c2a0a:  cmp    $0x5,%ecx
0x000c2a0e:  jne    0xc29fa

----------------
IN: 
0x000c29fa:  addr32 mov %cs:-0x1(%esi,%ecx,1),%al
0x000c2a00:  shl    $0x8,%eax
0x000c2a04:  or     %ecx,%eax
0x000c2a07:  out    %ax,(%dx)
0x000c2a08:  inc    %ecx
0x000c2a0a:  cmp    $0x5,%ecx
0x000c2a0e:  jne    0xc29fa

----------------
IN: 
0x000c2a10:  addr32 mov %cs:0x26(%ebx),%esi
0x000c2a16:  xor    %ecx,%ecx
0x000c2a19:  mov    $0x3ce,%edx
0x000c2a1f:  addr32 mov %cs:(%esi,%ecx,1),%al
0x000c2a24:  shl    $0x8,%eax
0x000c2a28:  or     %ecx,%eax
0x000c2a2b:  out    %ax,(%dx)
0x000c2a2c:  inc    %ecx
0x000c2a2e:  cmp    $0x9,%ecx
0x000c2a32:  jne    0xc2a1f

----------------
IN: 
0x000c2a1f:  addr32 mov %cs:(%esi,%ecx,1),%al
0x000c2a24:  shl    $0x8,%eax
0x000c2a28:  or     %ecx,%eax
0x000c2a2b:  out    %ax,(%dx)
0x000c2a2c:  inc    %ecx
0x000c2a2e:  cmp    $0x9,%ecx
0x000c2a32:  jne    0xc2a1f

----------------
IN: 
0x000c2a34:  addr32 mov %cs:0x1a(%ebx),%al
0x000c2a39:  mov    %eax,%esi
0x000c2a3c:  mov    $0x3d4,%edx
0x000c2a42:  test   $0x1,%al
0x000c2a44:  jne    0xc2a4c

----------------
IN: 
0x000c2a4c:  mov    $0x11,%eax
0x000c2a52:  out    %ax,(%dx)
0x000c2a53:  addr32 mov %cs:0x1e(%ebx),%edi
0x000c2a59:  xor    %ecx,%ecx
0x000c2a5c:  addr32 mov %cs:(%edi,%ecx,1),%al
0x000c2a61:  shl    $0x8,%eax
0x000c2a65:  or     %ecx,%eax
0x000c2a68:  out    %ax,(%dx)
0x000c2a69:  inc    %ecx
0x000c2a6b:  cmp    $0x19,%ecx
0x000c2a6f:  jne    0xc2a5c

----------------
IN: 
0x000c2a5c:  addr32 mov %cs:(%edi,%ecx,1),%al
0x000c2a61:  shl    $0x8,%eax
0x000c2a65:  or     %ecx,%eax
0x000c2a68:  out    %ax,(%dx)
0x000c2a69:  inc    %ecx
0x000c2a6b:  cmp    $0x19,%ecx
0x000c2a6f:  jne    0xc2a5c

----------------
IN: 
0x000c2a71:  mov    $0x3c2,%edx
0x000c2a77:  mov    %esi,%eax
0x000c2a7a:  out    %al,(%dx)
0x000c2a7b:  mov    $0x3da,%edx
0x000c2a81:  in     (%dx),%al
0x000c2a82:  mov    $0x20,%al
0x000c2a84:  mov    $0x3c0,%edx
0x000c2a8a:  out    %al,(%dx)
0x000c2a8b:  addr32 mov -0x10(%ebp),%edi
0x000c2a90:  and    $0x8000,%edi
0x000c2a97:  jne    0xc2adb

----------------
IN: 
0x000c2a99:  addr32 mov %cs:(%ebx),%al
0x000c2a9d:  test   %al,%al
0x000c2a9f:  je     0xc2ab4

----------------
IN: 
0x000c2ab4:  addr32 mov %cs:0xa(%ebx),%ax
0x000c2ab9:  mov    %ax,%es
0x000c2abb:  mov    $0x4000,%ecx
0x000c2ac1:  mov    $0x720,%eax
0x000c2ac7:  jmp    0xc2ad9

----------------
IN: 
0x000c2ad9:  rep stos %ax,%es:(%di)

----------------
IN: 
0x000c2adb:  addr32 mov %cs:(%ebx),%al
0x000c2adf:  xor    %ebx,%ebx
0x000c2ae2:  test   %al,%al
0x000c2ae4:  jne    0xc2b09

----------------
IN: 
0x000c2ae6:  mov    %cs,%ax
0x000c2ae8:  movzwl %ax,%eax
0x000c2aec:  pushl  $0x10
0x000c2aef:  pushl  $0x0
0x000c2af2:  pushl  $0x0
0x000c2af5:  mov    $0x100,%ecx
0x000c2afb:  mov    $0x7260,%edx
0x000c2b01:  push   %ax
0x000c2b02:  call   0xc0772

----------------
IN: 
0x000c0772:  push   %ebp
0x000c0774:  mov    %esp,%ebp
0x000c0777:  push   %edi
0x000c0779:  push   %esi
0x000c077b:  push   %ebx
0x000c077d:  sub    $0x10,%esp
0x000c0781:  mov    %edx,%ebx
0x000c0784:  addr32 mov %ax,-0x10(%ebp)
0x000c0788:  addr32 mov %cx,-0x1a(%ebp)
0x000c078c:  mov    $0x3c4,%edx
0x000c0792:  mov    $0x100,%eax
0x000c0798:  out    %ax,(%dx)
0x000c0799:  mov    $0x402,%eax
0x000c079f:  out    %ax,(%dx)
0x000c07a0:  mov    $0x704,%eax
0x000c07a6:  out    %ax,(%dx)
0x000c07a7:  mov    $0x300,%eax
0x000c07ad:  out    %ax,(%dx)
0x000c07ae:  mov    $0x3ce,%edx
0x000c07b4:  mov    $0x204,%eax
0x000c07ba:  out    %ax,(%dx)
0x000c07bb:  mov    $0x5,%eax
0x000c07c1:  out    %ax,(%dx)
0x000c07c2:  mov    $0x406,%eax
0x000c07c8:  out    %ax,(%dx)
0x000c07c9:  addr32 movzbl 0xc(%ebp),%ecx
0x000c07cf:  addr32 movzbl 0x10(%ebp),%eax
0x000c07d5:  addr32 mov %eax,-0x14(%ebp)
0x000c07da:  mov    %ecx,%eax
0x000c07dd:  shl    $0xb,%eax
0x000c07e1:  and    $0x2000,%ax
0x000c07e4:  shl    $0xe,%ecx
0x000c07e8:  add    %ecx,%eax
0x000c07eb:  movzwl %ax,%eax
0x000c07ef:  addr32 movzwl 0x8(%ebp),%ecx
0x000c07f5:  shl    $0x5,%ecx
0x000c07f9:  add    %ecx,%eax
0x000c07fc:  addr32 mov %eax,-0x18(%ebp)
0x000c0801:  addr32 movw $0x0,-0xe(%ebp)
0x000c0807:  addr32 mov -0x1a(%ebp),%si
0x000c080b:  addr32 cmp %si,-0xe(%ebp)
0x000c080f:  je     0xc0844

----------------
IN: 
0x000c0811:  mov    $0xffffa000,%edi
0x000c0817:  mov    %di,%es
0x000c0819:  addr32 mov -0x14(%ebp),%ecx
0x000c081e:  mov    %ebx,%esi
0x000c0821:  addr32 mov -0x18(%ebp),%edi
0x000c0826:  addr32 mov -0x10(%ebp),%eax
0x000c082b:  mov    %ds,%dx
0x000c082d:  mov    %ax,%ds
0x000c082f:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c082f:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c0831:  mov    %dx,%ds
0x000c0833:  addr32 incw -0xe(%ebp)
0x000c0837:  addr32 add -0x14(%ebp),%ebx
0x000c083c:  addr32 addl $0x20,-0x18(%ebp)
0x000c0842:  jmp    0xc0807

----------------
IN: 
0x000c0807:  addr32 mov -0x1a(%ebp),%si
0x000c080b:  addr32 cmp %si,-0xe(%ebp)
0x000c080f:  je     0xc0844

----------------
IN: 
0x000c0844:  mov    $0x3c4,%edx
0x000c084a:  mov    $0x100,%eax
0x000c0850:  out    %ax,(%dx)
0x000c0851:  mov    $0x302,%eax
0x000c0857:  out    %ax,(%dx)
0x000c0858:  mov    $0x304,%eax
0x000c085e:  out    %ax,(%dx)
0x000c085f:  mov    $0x300,%eax
0x000c0865:  out    %ax,(%dx)
0x000c0866:  mov    $0x3cc,%edx
0x000c086c:  in     (%dx),%al
0x000c086d:  mov    $0xe,%edx
0x000c0873:  test   $0x1,%al
0x000c0875:  jne    0xc087d

----------------
IN: 
0x000c087d:  mov    %edx,%eax
0x000c0880:  shl    $0x8,%eax
0x000c0884:  or     $0x6,%eax
0x000c0888:  mov    $0x3ce,%edx
0x000c088e:  out    %ax,(%dx)
0x000c088f:  mov    $0x4,%eax
0x000c0895:  out    %ax,(%dx)
0x000c0896:  mov    $0x1005,%eax
0x000c089c:  out    %ax,(%dx)
0x000c089d:  add    $0x10,%esp
0x000c08a1:  pop    %ebx
0x000c08a3:  pop    %esi
0x000c08a5:  pop    %edi
0x000c08a7:  pop    %ebp
0x000c08a9:  ret    $0x2

----------------
IN: 
0x000c2b05:  add    $0xc,%esp
0x000c2b09:  mov    %ebx,%eax
0x000c2b0c:  lea    -0xc(%bp),%sp
0x000c2b0f:  pop    %ebx
0x000c2b11:  pop    %esi
0x000c2b13:  pop    %edi
0x000c2b15:  pop    %ebp
0x000c2b17:  ret    $0x2

----------------
IN: 
0x000c321a:  test   %eax,%eax
0x000c321d:  jne    0xc3625

----------------
IN: 
0x000c3221:  jmp    0xc343e

----------------
IN: 
0x000c343e:  addr32 mov %cs:0x2(%esi),%ax
0x000c3443:  addr32 mov %ax,-0x1a(%ebp)
0x000c3447:  movzwl %ax,%eax
0x000c344b:  addr32 mov %eax,-0x18(%ebp)
0x000c3450:  addr32 mov %cs:0x4(%esi),%ax
0x000c3455:  addr32 mov %ax,-0x1c(%ebp)
0x000c3459:  movzwl %ax,%ecx
0x000c345d:  addr32 mov %cs:(%esi),%al
0x000c3461:  addr32 mov %al,-0x1d(%ebp)
0x000c3465:  addr32 mov %cs:0x8(%esi),%bl
0x000c346a:  mov    $0x40,%eax
0x000c3470:  addr32 cmpl $0xff,-0x14(%ebp)
0x000c3479:  jg     0xc3483

----------------
IN: 
0x000c347b:  mov    %ax,%es
0x000c347d:  addr32 mov -0x14(%ebp),%al
0x000c3481:  jmp    0xc3487

----------------
IN: 
0x000c3487:  mov    %al,%es:0x49
0x000c348b:  mov    $0x40,%edi
0x000c3491:  mov    %di,%es
0x000c3493:  addr32 mov -0x10(%ebp),%eax
0x000c3498:  and    $0xfe00,%ax
0x000c349b:  addr32 or -0x14(%ebp),%eax
0x000c34a0:  mov    %ax,%es:0xba
0x000c34a4:  mov    %di,%es
0x000c34a6:  mov    %si,%es:0xbc
0x000c34ab:  mov    %di,%es
0x000c34ad:  mov    %es:0xb9,%dl
0x000c34b2:  addr32 mov -0x10(%ebp),%eax
0x000c34b7:  shl    $0x6,%eax
0x000c34bb:  and    $0x40,%eax
0x000c34bf:  and    $0xffffffbf,%edx
0x000c34c3:  or     %edx,%eax
0x000c34c6:  mov    %al,%es:0xb9
0x000c34ca:  addr32 cmpb $0x0,-0x1d(%ebp)
0x000c34cf:  jne    0xc34f1

----------------
IN: 
0x000c34d1:  mov    %di,%es
0x000c34d3:  addr32 mov -0x1a(%ebp),%ax
0x000c34d7:  mov    %ax,%es:0x4a
0x000c34db:  mov    %di,%es
0x000c34dd:  addr32 mov -0x1c(%ebp),%al
0x000c34e1:  dec    %eax
0x000c34e3:  mov    %al,%es:0x84
0x000c34e7:  mov    %di,%es
0x000c34e9:  mov    $0x607,%eax
0x000c34ef:  jmp    0xc3523

----------------
IN: 
0x000c3523:  mov    %ax,%es:0x60
0x000c3527:  addr32 movzbl -0x1d(%ebp),%eax
0x000c352d:  addr32 mov -0x18(%ebp),%edx
0x000c3532:  push   %ax
0x000c3533:  call   0xc002f

----------------
IN: 
0x000c3536:  mov    $0x40,%ecx
0x000c353c:  mov    %cx,%es
0x000c353e:  mov    %ax,%es:0x4c
0x000c3542:  push   %ax
0x000c3543:  call   0xc08ac

----------------
IN: 
0x000c08ac:  mov    $0x3cc,%edx
0x000c08b2:  in     (%dx),%al
0x000c08b3:  mov    %al,%dl
0x000c08b5:  mov    $0x3b4,%eax
0x000c08bb:  and    $0x1,%dl
0x000c08be:  je     0xc08c6

----------------
IN: 
0x000c08c0:  mov    $0x3d4,%eax
0x000c08c6:  ret    $0x2

----------------
IN: 
0x000c3546:  mov    %cx,%es
0x000c3548:  mov    %ax,%es:0x63
0x000c354c:  mov    %cx,%es
0x000c354e:  movzbl %bl,%eax
0x000c3552:  mov    %ax,%es:0x85
0x000c3556:  mov    %cx,%es
0x000c3558:  addr32 mov -0x10(%ebp),%eax
0x000c355d:  sar    $0x8,%eax
0x000c3561:  and    $0xffffff80,%eax
0x000c3565:  or     $0x60,%eax
0x000c3569:  mov    %al,%es:0x87
0x000c356d:  mov    %cx,%es
0x000c356f:  mov    $0xf9,%al
0x000c3571:  mov    %al,%es:0x88
0x000c3575:  mov    %cx,%es
0x000c3577:  mov    %es:0x89,%al
0x000c357b:  and    $0x7f,%eax
0x000c357f:  mov    %al,%es:0x89
0x000c3583:  xor    %eax,%eax
0x000c3586:  xor    %edx,%edx
0x000c3589:  mov    %cx,%es
0x000c358b:  addr32 mov %dx,%es:0x50(%eax,%eax,1)
0x000c3591:  inc    %eax
0x000c3593:  cmp    $0x8,%eax
0x000c3597:  jne    0xc3589

----------------
IN: 
0x000c3589:  mov    %cx,%es
0x000c358b:  addr32 mov %dx,%es:0x50(%eax,%eax,1)
0x000c3591:  inc    %eax
0x000c3593:  cmp    $0x8,%eax
0x000c3597:  jne    0xc3589

----------------
IN: 
0x000c3599:  mov    %cx,%es
0x000c359b:  mov    %dx,%es:0x4e
0x000c35a0:  mov    %cx,%es
0x000c35a2:  xor    %eax,%eax
0x000c35a5:  mov    %al,%es:0x62
0x000c35a9:  mov    %cs,%cx
0x000c35ab:  shl    $0x10,%ecx
0x000c35af:  mov    $0x9460,%eax
0x000c35b5:  movzwl %ax,%eax
0x000c35b9:  or     %ecx,%eax
0x000c35bc:  mov    %dx,%es
0x000c35be:  mov    %eax,%es:0x7c
0x000c35c3:  cmp    $0xe,%bl
0x000c35c6:  je     0xc35f2

----------------
IN: 
0x000c35c8:  cmp    $0x10,%bl
0x000c35cb:  je     0xc3600

----------------
IN: 
0x000c3600:  mov    %cs,%cx
0x000c3602:  shl    $0x10,%ecx
0x000c3606:  mov    $0x7260,%eax
0x000c360c:  movzwl %ax,%eax
0x000c3610:  or     %ecx,%eax
0x000c3613:  mov    %dx,%es
0x000c3615:  mov    %eax,%es:0x10c
0x000c361a:  xor    %eax,%eax
0x000c361d:  jmp    0xc3625

----------------
IN: 
0x000c3625:  lea    -0xc(%bp),%sp
0x000c3628:  pop    %ebx
0x000c362a:  pop    %esi
0x000c362c:  pop    %edi
0x000c362e:  pop    %ebp
0x000c3630:  ret    $0x2

----------------
IN: 
0x000c564f:  mov    %ebx,%esp
0x000c5652:  pop    %ds
0x000c5653:  pop    %es
0x000c5654:  pop    %edi
0x000c5656:  pop    %esi
0x000c5658:  pop    %ebp
0x000c565a:  pop    %ebx
0x000c565c:  pop    %edx
0x000c565e:  pop    %ecx
0x000c5660:  pop    %eax
0x000c5662:  iret   

Servicing hardware INT=0x08
----------------
IN: 
0x000fd05c:  lret   

----------------
IN: 
0x07fadb50:  pop    %ecx
0x07fadb51:  jmp    0xec1b3

----------------
IN: 
0x07fb21e9:  push   $0xf51d0
0x07fb21ee:  push   $0xf047f
0x07fb21f3:  call   0xee44a

----------------
IN: 
0x000ee44a:  lea    0x8(%esp),%ecx
0x000ee44e:  mov    0x4(%esp),%edx
0x000ee452:  mov    $0xf5164,%eax
0x000ee457:  call   0xebd11

----------------
IN: 
0x000ec4a5:  push   %ebx
0x000ec4a6:  mov    %edx,%ebx
0x000ec4a8:  cmpl   $0x0,0xf54c8
0x000ec4af:  je     0xec4c0

----------------
IN: 
0x000ec4b1:  mov    %dl,%al
0x000ec4b3:  mov    0xf6034,%dx
0x000ec4ba:  test   %dx,%dx
0x000ec4bd:  je     0xec4c0

----------------
IN: 
0x000ec4c0:  cmp    $0xa,%bl
0x000ec4c3:  jne    0xec4cf

----------------
IN: 
0x000ec4cf:  movsbl %bl,%eax
0x000ec4d2:  pop    %ebx
0x000ec4d3:  jmp    0xec451

----------------
IN: 
0x000ec451:  mov    $0xff065,%edx
0x000ec456:  movzwl %dx,%edx
0x000ec459:  or     $0xf0000000,%edx
0x000ec45f:  cmp    %edx,0x40
0x000ec465:  je     0xec4a4

----------------
IN: 
0x000ec467:  push   %ebx
0x000ec468:  sub    $0x28,%esp
0x000ec46b:  mov    %eax,%ebx
0x000ec46d:  mov    $0x26,%ecx
0x000ec472:  xor    %edx,%edx
0x000ec474:  lea    0x2(%esp),%eax
0x000ec478:  call   0xeab7b

----------------
IN: 
0x000ec47d:  movw   $0x200,0x26(%esp)
0x000ec484:  movb   $0xe,0x1f(%esp)
0x000ec489:  mov    %bl,0x1e(%esp)
0x000ec48d:  movb   $0x7,0x12(%esp)
0x000ec492:  mov    $0xfd05a,%edx
0x000ec497:  movzwl %dx,%edx
0x000ec49a:  call   0xec42f

Servicing hardware INT=0x08
----------------
IN: 
0x000c5676:  mov    %cs:-0x6788,%ds
0x000c567b:  mov    $0x1d0,%eax
0x000c5681:  addr32 popl 0x1c(%eax)
0x000c5686:  addr32 popw (%eax)
0x000c5689:  addr32 mov %edi,0x4(%eax)
0x000c568e:  addr32 mov %esi,0x8(%eax)
0x000c5693:  addr32 mov %ebp,0xc(%eax)
0x000c5698:  addr32 mov %ebx,0x10(%eax)
0x000c569d:  addr32 mov %edx,0x14(%eax)
0x000c56a2:  addr32 mov %ecx,0x18(%eax)
0x000c56a7:  addr32 mov %es,0x2(%eax)
0x000c56ab:  addr32 mov %esp,0x28(%eax)
0x000c56b0:  addr32 mov %ss,0x2c(%eax)
0x000c56b4:  addr32 popl 0x20(%eax)
0x000c56b9:  addr32 popw 0x24(%eax)
0x000c56bd:  mov    %ds,%dx
0x000c56bf:  mov    %dx,%ss

----------------
IN: 
0x000c56c1:  mov    %eax,%esp

----------------
IN: 
0x000c56c4:  push   %ax
0x000c56c5:  call   0xc487c

----------------
IN: 
0x000c48fc:  cmp    $0x12,%al
0x000c48fe:  je     0xc5243

----------------
IN: 
0x000c4902:  ja     0xc493d

----------------
IN: 
0x000c4904:  cmp    $0xf,%al
0x000c4906:  je     0xc4c2c

----------------
IN: 
0x000c490a:  ja     0xc492e

----------------
IN: 
0x000c490c:  cmp    $0xd,%al
0x000c490e:  je     0xc4c15

----------------
IN: 
0x000c4912:  cmp    $0xe,%al
0x000c4914:  jne    0xc5590

----------------
IN: 
0x000c4918:  addr32 mov 0x1c(%ebx),%dl
0x000c491c:  addr32 mov 0x10(%ebx),%al
0x000c4920:  lea    -0xc(%bp),%sp
0x000c4923:  pop    %ebx
0x000c4925:  pop    %esi
0x000c4927:  pop    %edi
0x000c4929:  pop    %ebp
0x000c492b:  jmp    0xc2402

----------------
IN: 
0x000c2402:  push   %ebp
0x000c2404:  mov    %esp,%ebp
0x000c2407:  sub    $0x8,%esp
0x000c240b:  mov    %al,%cl
0x000c240d:  addr32 mov %dl,-0x5(%ebp)
0x000c2411:  mov    $0x40,%eax
0x000c2417:  mov    %ax,%es
0x000c2419:  mov    %es:0x62,%al
0x000c241d:  movzbl %al,%eax
0x000c2421:  push   %ax
0x000c2422:  call   0xc0dde

----------------
IN: 
0x000c0dde:  cmp    $0x7,%al
0x000c0de0:  jbe    0xc0de8

----------------
IN: 
0x000c0de8:  mov    $0x40,%edx
0x000c0dee:  mov    %dx,%es
0x000c0df0:  movzbl %al,%eax
0x000c0df4:  addr32 mov %es:0x50(%eax,%eax,1),%dx
0x000c0dfa:  shl    $0x10,%eax
0x000c0dfe:  movzwl %dx,%edx
0x000c0e02:  or     %edx,%eax
0x000c0e05:  ret    $0x2

----------------
IN: 
0x000c2425:  addr32 mov %eax,-0x4(%ebp)
0x000c242a:  pushl  $0x0
0x000c242d:  addr32 mov -0x5(%ebp),%dl
0x000c2431:  mov    %ebp,%eax
0x000c2434:  pushf  
0x000c2435:  add    $0xfffffffc,%eax
0x000c2439:  popf   

----------------
IN: 
0x000c243a:  push   %ax
0x000c243b:  call   0xc2343

----------------
IN: 
0x000c2343:  push   %ebp
0x000c2345:  mov    %esp,%ebp
0x000c2348:  push   %esi
0x000c234a:  push   %ebx
0x000c234c:  push   %ebx
0x000c234e:  mov    %eax,%ebx
0x000c2351:  cmp    $0xa,%dl
0x000c2354:  je     0xc237d

----------------
IN: 
0x000c2356:  ja     0xc2364

----------------
IN: 
0x000c2364:  cmp    $0xd,%dl
0x000c2367:  jne    0xc2383

----------------
IN: 
0x000c2383:  addr32 mov 0x8(%ebp),%al
0x000c2387:  push   %eax
0x000c2389:  mov    %ebx,%eax
0x000c238c:  push   %ax
0x000c238d:  call   0xc1d32

----------------
IN: 
0x000c1d32:  push   %ebp
0x000c1d34:  mov    %esp,%ebp
0x000c1d37:  push   %edi
0x000c1d39:  push   %esi
0x000c1d3b:  push   %ebx
0x000c1d3d:  push   %ebx
0x000c1d3f:  mov    %eax,%ebx
0x000c1d42:  addr32 mov %dl,-0xd(%ebp)
0x000c1d46:  mov    %ecx,%esi
0x000c1d49:  addr32 mov (%eax),%al
0x000c1d4c:  addr32 mov %al,-0xe(%ebp)
0x000c1d50:  addr32 mov 0x1(%ebx),%dl
0x000c1d54:  addr32 mov 0x2(%ebx),%cl
0x000c1d58:  mov    $0x40,%eax
0x000c1d5e:  mov    %ax,%es
0x000c1d60:  mov    %es:0xbc,%di
0x000c1d65:  test   %di,%di
0x000c1d67:  je     0xc1dc9

----------------
IN: 
0x000c1d69:  movzwl %di,%edi
0x000c1d6d:  addr32 mov %cs:(%edi),%al
0x000c1d71:  test   %al,%al
0x000c1d73:  je     0xc1d90

----------------
IN: 
0x000c1d90:  addr32 mov -0xe(%ebp),%al
0x000c1d94:  push   %ax
0x000c1d95:  call   0xc183f

----------------
IN: 
0x000c183f:  push   %ebp
0x000c1841:  mov    %esp,%ebp
0x000c1844:  push   %esi
0x000c1846:  push   %ebx
0x000c1848:  movzbl %dl,%ebx
0x000c184c:  mov    $0x40,%edx
0x000c1852:  mov    %dx,%es
0x000c1854:  mov    %es:0x4a,%dx
0x000c1859:  mov    %es:0x4c,%si
0x000c185e:  movzwl %si,%esi
0x000c1862:  movzbl %cl,%ecx
0x000c1866:  imul   %ecx,%esi
0x000c186a:  movzbl %al,%eax
0x000c186e:  add    %eax,%eax
0x000c1871:  add    %eax,%esi
0x000c1874:  movzwl %dx,%edx
0x000c1878:  imul   %ebx,%edx
0x000c187c:  add    %edx,%edx
0x000c187f:  mov    %edx,%eax
0x000c1882:  pushf  
0x000c1883:  add    %esi,%eax
0x000c1886:  popf   

----------------
IN: 
0x000c1887:  pop    %ebx
0x000c1889:  pop    %esi
0x000c188b:  pop    %ebp
0x000c188d:  ret    $0x2

----------------
IN: 
0x000c1d98:  mov    %eax,%edx
0x000c1d9b:  addr32 mov %cs:0xa(%edi),%ax
0x000c1da0:  addr32 cmpb $0x0,0x8(%ebp)
0x000c1da5:  je     0xc1dbf

----------------
IN: 
0x000c1dbf:  mov    %ax,%es
0x000c1dc1:  addr32 mov -0xd(%ebp),%al
0x000c1dc5:  addr32 mov %al,%es:(%edx)
0x000c1dc9:  addr32 mov (%ebx),%al
0x000c1dcc:  inc    %eax
0x000c1dce:  addr32 mov %al,(%ebx)
0x000c1dd1:  mov    $0x40,%edx
0x000c1dd7:  mov    %dx,%es
0x000c1dd9:  mov    %es:0x4a,%dx
0x000c1dde:  movzbl %al,%eax
0x000c1de2:  cmp    %dx,%ax
0x000c1de4:  jne    0xc1dee

----------------
IN: 
0x000c1dee:  lea    -0xc(%bp),%sp
0x000c1df1:  pop    %ebx
0x000c1df3:  pop    %esi
0x000c1df5:  pop    %edi
0x000c1df7:  pop    %ebp
0x000c1df9:  ret    $0x2

----------------
IN: 
0x000c2390:  pop    %eax
0x000c2392:  mov    $0x40,%edx
0x000c2398:  mov    %dx,%es
0x000c239a:  mov    %es:0x84,%al
0x000c239e:  mov    %eax,%esi
0x000c23a1:  addr32 mov 0x1(%ebx),%al
0x000c23a5:  mov    %esi,%ecx
0x000c23a8:  cmp    %al,%cl
0x000c23aa:  jae    0xc23f6

----------------
IN: 
0x000c23f6:  lea    -0x8(%bp),%sp
0x000c23f9:  pop    %ebx
0x000c23fb:  pop    %esi
0x000c23fd:  pop    %ebp
0x000c23ff:  ret    $0x2

----------------
IN: 
0x000c243e:  pop    %eax
0x000c2440:  addr32 mov -0x2(%ebp),%cl
0x000c2444:  addr32 mov -0x3(%ebp),%dl
0x000c2448:  addr32 mov -0x4(%ebp),%al
0x000c244c:  push   %ax
0x000c244d:  call   0xc1890

----------------
IN: 
0x000c1890:  push   %ebp
0x000c1892:  mov    %esp,%ebp
0x000c1895:  push   %edi
0x000c1897:  push   %esi
0x000c1899:  push   %ebx
0x000c189b:  push   %ebx
0x000c189d:  addr32 mov %al,-0xd(%ebp)
0x000c18a1:  movzbl %cl,%ebx
0x000c18a5:  cmp    $0x7,%bl
0x000c18a8:  ja     0xc1917

----------------
IN: 
0x000c18aa:  mov    %edx,%esi
0x000c18ad:  mov    $0x40,%eax
0x000c18b3:  mov    %ax,%es
0x000c18b5:  mov    %es:0x62,%al
0x000c18b9:  cmp    %bl,%al
0x000c18bb:  jne    0xc18fc

----------------
IN: 
0x000c18bd:  mov    %bl,%cl
0x000c18bf:  addr32 mov -0xd(%ebp),%al
0x000c18c3:  push   %ax
0x000c18c4:  call   0xc183f

----------------
IN: 
0x000c18c7:  mov    %eax,%edi
0x000c18ca:  push   %ax
0x000c18cb:  call   0xc08ac

----------------
IN: 
0x000c18ce:  mov    %eax,%ecx
0x000c18d1:  mov    %edi,%eax
0x000c18d4:  mov    $0x2,%edi
0x000c18da:  cltd   
0x000c18dc:  idiv   %edi
0x000c18df:  mov    %eax,%edi
0x000c18e2:  and    $0xff00,%eax
0x000c18e8:  or     $0xe,%eax
0x000c18ec:  mov    %ecx,%edx
0x000c18ef:  out    %ax,(%dx)
0x000c18f0:  mov    %edi,%eax
0x000c18f3:  shl    $0x8,%eax
0x000c18f7:  or     $0xf,%eax
0x000c18fb:  out    %ax,(%dx)
0x000c18fc:  mov    $0x40,%eax
0x000c1902:  mov    %ax,%es
0x000c1904:  shl    $0x8,%esi
0x000c1908:  addr32 movzbl -0xd(%ebp),%edi
0x000c190e:  or     %edi,%esi
0x000c1911:  addr32 mov %si,%es:0x50(%ebx,%ebx,1)
0x000c1917:  pop    %eax
0x000c1919:  pop    %ebx
0x000c191b:  pop    %esi
0x000c191d:  pop    %edi
0x000c191f:  pop    %ebp
0x000c1921:  ret    $0x2

----------------
IN: 
0x000c2450:  mov    %ebp,%esp
0x000c2453:  pop    %ebp
0x000c2455:  ret    $0x2

----------------
IN: 
0x000c56c8:  mov    %esp,%eax
0x000c56cb:  addr32 mov 0x2c(%eax),%ss

----------------
IN: 
0x000c56cf:  addr32 mov 0x28(%eax),%esp

----------------
IN: 
0x000c56d4:  pop    %edx
0x000c56d6:  pop    %dx
0x000c56d7:  addr32 pushw 0x24(%eax)
0x000c56db:  addr32 pushl 0x20(%eax)
0x000c56e0:  addr32 mov 0x4(%eax),%edi
0x000c56e5:  addr32 mov 0x8(%eax),%esi
0x000c56ea:  addr32 mov 0xc(%eax),%ebp
0x000c56ef:  addr32 mov 0x10(%eax),%ebx
0x000c56f4:  addr32 mov 0x14(%eax),%edx
0x000c56f9:  addr32 mov 0x18(%eax),%ecx
0x000c56fe:  addr32 mov 0x2(%eax),%es
0x000c5702:  addr32 pushl 0x1c(%eax)
0x000c5707:  addr32 mov (%eax),%ds
0x000c570a:  pop    %eax
0x000c570c:  iret   

----------------
IN: 
0x000ec49f:  add    $0x28,%esp
0x000ec4a2:  pop    %ebx
0x000ec4a3:  ret    

----------------
IN: 
0x000ec4c5:  mov    $0xd,%eax
0x000ec4ca:  call   0xec451

----------------
IN: 
0x000c2369:  addr32 movb $0x0,(%eax)
0x000c236d:  jmp    0xc2392

----------------
IN: 
0x000c2392:  mov    $0x40,%edx
0x000c2398:  mov    %dx,%es
0x000c239a:  mov    %es:0x84,%al
0x000c239e:  mov    %eax,%esi
0x000c23a1:  addr32 mov 0x1(%ebx),%al
0x000c23a5:  mov    %esi,%ecx
0x000c23a8:  cmp    %al,%cl
0x000c23aa:  jae    0xc23f6

----------------
IN: 
0x000c237d:  addr32 incb 0x1(%eax)
0x000c2381:  jmp    0xc2392

----------------
IN: 
0x000ee45c:  ret    

----------------
IN: 
0x07fb21f8:  mov    0x7fbff1c,%esi
0x07fb21fe:  xor    %edx,%edx
0x07fb2200:  mov    %esi,%eax
0x07fb2202:  call   0x7fabcb8

----------------
IN: 
0x07fb2207:  mov    %eax,%ebx
0x07fb2209:  add    $0xc,%esp
0x07fb220c:  test   %ebx,%ebx
0x07fb220e:  je     0x7fb2347

----------------
IN: 
0x07fb2214:  cmpb   $0x1,(%ebx)
0x07fb2217:  jne    0x7fb2337

----------------
IN: 
0x07fb2337:  mov    %ebx,%edx
0x07fb2339:  mov    %esi,%eax
0x07fb233b:  call   0x7fabcb8

----------------
IN: 
0x07fb2340:  mov    %eax,%ebx
0x07fb2342:  jmp    0x7fb220c

----------------
IN: 
0x07fb220c:  test   %ebx,%ebx
0x07fb220e:  je     0x7fb2347

----------------
IN: 
0x07fb221d:  cmpb   $0x17,0x1(%ebx)
0x07fb2221:  jbe    0x7fb2337

----------------
IN: 
0x07fb2227:  movl   $0x0,0x2a(%esp)
0x07fb222f:  lea    0x2e(%esp),%edi
0x07fb2233:  mov    $0x3,%ecx
0x07fb2238:  xor    %eax,%eax
0x07fb223a:  rep stos %eax,%es:(%edi)

----------------
IN: 
0x07fb223a:  rep stos %eax,%es:(%edi)

----------------
IN: 
0x07fb223c:  lea    0x8(%ebx),%eax
0x07fb223f:  mov    $0x10,%ecx
0x07fb2244:  lea    0x2a(%esp),%edx
0x07fb2248:  call   0x7fab68e

----------------
IN: 
0x07fb224d:  test   %eax,%eax
0x07fb224f:  je     0x7fb2347

----------------
IN: 
0x07fb2347:  add    $0x60,%esp
0x07fb234a:  pop    %ebx
0x07fb234b:  pop    %esi
0x07fb234c:  pop    %edi
0x07fb234d:  pop    %ebp
0x07fb234e:  ret    

----------------
IN: 
0x07fbbe9a:  call   0xea062

----------------
IN: 
0x07fbbe9f:  test   %eax,%eax
0x07fbbea1:  jne    0x7fbbead

----------------
IN: 
0x07fbbea3:  call   0x7fb881c

----------------
IN: 
0x07fb881c:  push   %ebp
0x07fb881d:  push   %edi
0x07fb881e:  push   %esi
0x07fb881f:  push   %ebx
0x07fb8820:  sub    $0x14,%esp
0x07fb8823:  mov    $0x64,%edx
0x07fb8828:  xor    %ecx,%ecx
0x07fb882a:  mov    $0xf3501,%eax
0x07fb882f:  call   0x7fad81f

----------------
IN: 
0x07fb8834:  mov    %eax,0x7fbff44
0x07fb8839:  mov    0x7fbfde8,%eax
0x07fb883e:  lea    -0x4(%eax),%ebx
0x07fb8841:  cmp    $0xfffffffc,%ebx
0x07fb8844:  je     0x7fb88a4

----------------
IN: 
0x07fb8846:  movzwl 0x14(%ebx),%eax
0x07fb884a:  shl    $0x8,%eax
0x07fb884d:  movzbl 0x16(%ebx),%edx
0x07fb8851:  or     %edx,%eax
0x07fb8853:  cmp    $0xc0330,%eax
0x07fb8858:  jne    0x7fb889c

----------------
IN: 
0x07fb889c:  mov    0x4(%ebx),%ebx
0x07fb889f:  sub    $0x4,%ebx
0x07fb88a2:  jmp    0x7fb8841

----------------
IN: 
0x07fb8841:  cmp    $0xfffffffc,%ebx
0x07fb8844:  je     0x7fb88a4

----------------
IN: 
0x07fb88a4:  mov    $0xd10,%edx
0x07fb88a9:  xor    %eax,%eax
0x07fb88ab:  call   0x7fb26fa

----------------
IN: 
0x07fb26fa:  push   %ebp
0x07fb26fb:  push   %edi
0x07fb26fc:  push   %esi
0x07fb26fd:  push   %ebx
0x07fb26fe:  sub    $0x10,%esp
0x07fb2701:  mov    %eax,%ebx
0x07fb2703:  movw   $0x410c,0x1(%esp)
0x07fb270a:  movb   $0xd0,0x3(%esp)
0x07fb270f:  mov    %edx,%eax
0x07fb2711:  xchg   %ah,%al
0x07fb2713:  mov    %ax,0x4(%esp)
0x07fb2718:  movzwl %dx,%edx
0x07fb271b:  push   %edx
0x07fb271c:  push   $0xf15e7
0x07fb2721:  push   $0xa
0x07fb2723:  lea    0x12(%esp),%edi
0x07fb2727:  push   %edi
0x07fb2728:  call   0x7fb244c

----------------
IN: 
0x000ebd7e:  cmp    $0x2e,%al
0x000ebd80:  je     0xebf1e

----------------
IN: 
0x000ebd86:  jg     0xebda1

----------------
IN: 
0x000ebda1:  cmp    $0x58,%al
0x000ebda3:  je     0xebebc

----------------
IN: 
0x000e9866:  lea    0x37(%edx),%ebx
0x000e9869:  movsbl %bl,%edx
0x000e986c:  pop    %ebx
0x000e986d:  jmp    0xe9803

----------------
IN: 
0x07fb272d:  mov    %eax,%esi
0x07fb272f:  add    $0x10,%esp
0x07fb2732:  test   %ebx,%ebx
0x07fb2734:  jne    0x7fb2747

----------------
IN: 
0x07fb2736:  mov    0x7fbfbf0,%ebx
0x07fb273c:  test   %ebx,%ebx
0x07fb273e:  je     0x7fb2771

----------------
IN: 
0x07fb2740:  mov    0x18(%ebx),%ebp
0x07fb2743:  test   %ebp,%ebp
0x07fb2745:  jne    0x7fb274b

----------------
IN: 
0x07fb2747:  mov    (%ebx),%ebx
0x07fb2749:  jmp    0x7fb273c

----------------
IN: 
0x07fb273c:  test   %ebx,%ebx
0x07fb273e:  je     0x7fb2771

----------------
IN: 
0x07fb274b:  add    $0x5,%ebp
0x07fb274e:  mov    $0x5,%ecx
0x07fb2753:  lea    0x1(%esp),%edx
0x07fb2757:  mov    %ebp,%eax
0x07fb2759:  call   0x7fab68e

----------------
IN: 
0x07fb275e:  test   %eax,%eax
0x07fb2760:  je     0x7fb2771

----------------
IN: 
0x07fb2762:  mov    %esi,%ecx
0x07fb2764:  mov    %edi,%edx
0x07fb2766:  mov    %ebp,%eax
0x07fb2768:  call   0x7fab68e

----------------
IN: 
0x07fb276d:  test   %eax,%eax
0x07fb276f:  jne    0x7fb2747

----------------
IN: 
0x07fb2771:  mov    %ebx,%eax
0x07fb2773:  add    $0x10,%esp
0x07fb2776:  pop    %ebx
0x07fb2777:  pop    %esi
0x07fb2778:  pop    %edi
0x07fb2779:  pop    %ebp
0x07fb277a:  ret    

----------------
IN: 
0x07fb88b0:  mov    %eax,%ebp
0x07fb88b2:  test   %eax,%eax
0x07fb88b4:  je     0x7fb8912

----------------
IN: 
0x07fb8912:  mov    0x7fbfde8,%eax
0x07fb8917:  lea    -0x4(%eax),%ebx
0x07fb891a:  cmp    $0xfffffffc,%ebx
0x07fb891d:  je     0x7fb89df

----------------
IN: 
0x07fb8923:  movzwl 0x14(%ebx),%eax
0x07fb8927:  shl    $0x8,%eax
0x07fb892a:  movzbl 0x16(%ebx),%edx
0x07fb892e:  or     %edx,%eax
0x07fb8930:  cmp    $0xc0320,%eax
0x07fb8935:  jne    0x7fb89d4

----------------
IN: 
0x07fb89d4:  mov    0x4(%ebx),%ebx
0x07fb89d7:  sub    $0x4,%ebx
0x07fb89da:  jmp    0x7fb891a

----------------
IN: 
0x07fb891a:  cmp    $0xfffffffc,%ebx
0x07fb891d:  je     0x7fb89df

----------------
IN: 
0x07fb89df:  mov    0x7fbfde8,%eax
0x07fb89e4:  lea    -0x4(%eax),%ebx
0x07fb89e7:  cmp    $0xfffffffc,%ebx
0x07fb89ea:  je     0x7fb8ab9

----------------
IN: 
0x07fb89f0:  movzwl 0x14(%ebx),%eax
0x07fb89f4:  shl    $0x8,%eax
0x07fb89f7:  movzbl 0x16(%ebx),%edx
0x07fb89fb:  or     %edx,%eax
0x07fb89fd:  cmp    $0xc0300,%eax
0x07fb8a02:  jne    0x7fb8aae

----------------
IN: 
0x07fb8aae:  mov    0x4(%ebx),%ebx
0x07fb8ab1:  sub    $0x4,%ebx
0x07fb8ab4:  jmp    0x7fb89e7

----------------
IN: 
0x07fb89e7:  cmp    $0xfffffffc,%ebx
0x07fb89ea:  je     0x7fb8ab9

----------------
IN: 
0x07fb8ab9:  mov    0x7fbfde8,%eax
0x07fb8abe:  lea    -0x4(%eax),%ebx
0x07fb8ac1:  cmp    $0xfffffffc,%ebx
0x07fb8ac4:  je     0x7fb8b68

----------------
IN: 
0x07fb8aca:  movzwl 0x14(%ebx),%eax
0x07fb8ace:  shl    $0x8,%eax
0x07fb8ad1:  movzbl 0x16(%ebx),%edx
0x07fb8ad5:  or     %edx,%eax
0x07fb8ad7:  cmp    $0xc0310,%eax
0x07fb8adc:  jne    0x7fb8b5d

----------------
IN: 
0x07fb8b5d:  mov    0x4(%ebx),%ebx
0x07fb8b60:  sub    $0x4,%ebx
0x07fb8b63:  jmp    0x7fb8ac1

----------------
IN: 
0x07fb8ac1:  cmp    $0xfffffffc,%ebx
0x07fb8ac4:  je     0x7fb8b68

----------------
IN: 
0x07fb8b68:  cmpl   $0x0,0x7fbfbf0
0x07fb8b6f:  je     0x7fb8bc2

----------------
IN: 
0x07fb8b71:  mov    $0x303,%edx
0x07fb8b76:  xor    %eax,%eax
0x07fb8b78:  call   0x7fb26fa

----------------
IN: 
0x07fb8b7d:  test   %eax,%eax
0x07fb8b7f:  je     0x7fb8bb5

----------------
IN: 
0x07fb8b81:  mov    0x1c(%eax),%eax
0x07fb8b84:  test   %eax,%eax
0x07fb8b86:  je     0x7fb8bc2

----------------
IN: 
0x07fb8b88:  cmpb   $0x8,(%eax)
0x07fb8b8b:  jne    0x7fb8bc2

----------------
IN: 
0x07fb8b8d:  movl   $0x0,0xc(%esp)
0x07fb8b95:  movl   $0x0,0x10(%esp)
0x07fb8b9d:  add    $0x5,%eax
0x07fb8ba0:  lea    0xc(%esp),%ecx
0x07fb8ba4:  xor    %edx,%edx
0x07fb8ba6:  call   0x7faced2

----------------
IN: 
0x07fb8bab:  mov    0x10(%esp),%eax
0x07fb8baf:  or     0xc(%esp),%eax
0x07fb8bb3:  jne    0x7fb8bc2

----------------
IN: 
0x07fb8bc2:  mov    $0xfe987,%edx
0x07fb8bc7:  movzwl %dx,%edx
0x07fb8bca:  or     $0xf0000000,%edx
0x07fb8bd0:  mov    $0x1,%eax
0x07fb8bd5:  call   0x7fad04c

----------------
IN: 
0x07fb8bda:  mov    $0xfd42e,%edx
0x07fb8bdf:  movzwl %dx,%edx
0x07fb8be2:  or     $0xf0000000,%edx
0x07fb8be8:  mov    $0xc,%eax
0x07fb8bed:  call   0x7fad04c

----------------
IN: 
0x07fb8bf2:  xor    %edx,%edx
0x07fb8bf4:  mov    $0x7fb1eae,%eax
0x07fb8bf9:  call   0x7fadff4

----------------
IN: 
0x07fadff4:  push   %ebp
0x07fadff5:  push   %edi
0x07fadff6:  push   %esi
0x07fadff7:  push   %ebx
0x07fadff8:  mov    %eax,%esi
0x07fadffa:  mov    %edx,%edi
0x07fadffc:  cmpb   $0x0,0xf54e0
0x07fae003:  je     0x7fae07f

----------------
IN: 
0x07fae005:  mov    $0x1000,%ecx
0x07fae00a:  mov    $0x1000,%edx
0x07fae00f:  mov    $0x7fbfe78,%eax
0x07fae014:  call   0x7fadfb2

----------------
IN: 
0x07fae019:  mov    %eax,%ebx
0x07fae01b:  test   %eax,%eax
0x07fae01d:  je     0x7fae07f

----------------
IN: 
0x07fae01f:  lea    0x1000(%eax),%eax
0x07fae025:  mov    %eax,(%ebx)
0x07fae027:  mov    %esp,%eax
0x07fae029:  mov    $0xf6168,%ebp
0x07fae02e:  cmp    $0x100000,%eax
0x07fae033:  jbe    0x7fae03c

----------------
IN: 
0x07fae03c:  lea    0x4(%ebp),%edx
0x07fae03f:  lea    0x4(%ebx),%eax
0x07fae042:  call   0x7fab66f

----------------
IN: 
0x07fae047:  mov    %edi,%eax
0x07fae049:  mov    %esi,%ecx
0x07fae04b:  mov    %ebp,%edx
0x07fae04d:  push   $0x7fae06e
0x07fae052:  push   %ebp
0x07fae053:  mov    %esp,(%edx)
0x07fae055:  mov    (%ebx),%esp
0x07fae057:  call   *%ecx

----------------
IN: 
0x07fb1eae:  push   %esi
0x07fb1eaf:  push   %ebx
0x07fb1eb0:  push   %esi
0x07fb1eb1:  call   0x7fae776

----------------
IN: 
0x07fae776:  push   %ebx
0x07fae777:  mov    $0x10,%ebx
0x07fae77c:  in     $0x64,%al
0x07fae77e:  test   $0x1,%al
0x07fae780:  je     0x7fae7a5

----------------
IN: 
0x07fae7a5:  xor    %eax,%eax
0x07fae7a7:  pop    %ebx
0x07fae7a8:  ret    

----------------
IN: 
0x07fb1eb6:  test   %eax,%eax
0x07fb1eb8:  jne    0x7fb1ff5

----------------
IN: 
0x07fb1ebe:  xor    %edx,%edx
0x07fb1ec0:  mov    $0xad,%eax
0x07fb1ec5:  call   0x7fae6f8

----------------
IN: 
0x07fae6f8:  push   %ebp
0x07fae6f9:  push   %edi
0x07fae6fa:  push   %esi
0x07fae6fb:  push   %ebx
0x07fae6fc:  mov    %eax,%ebx
0x07fae6fe:  mov    %edx,%esi
0x07fae700:  call   0xec5aa

----------------
IN: 
0x000ec5aa:  push   %ebx
0x000ec5ab:  mov    $0x2710,%ebx
0x000ec5b0:  in     $0x64,%al
0x000ec5b2:  test   $0x2,%al
0x000ec5b4:  je     0xec5d7

----------------
IN: 
0x000ec5d7:  xor    %eax,%eax
0x000ec5d9:  pop    %ebx
0x000ec5da:  ret    

----------------
IN: 
0x07fae705:  mov    %eax,%edi
0x07fae707:  test   %eax,%eax
0x07fae709:  jne    0x7fae76f

----------------
IN: 
0x07fae70b:  mov    %ebx,%ebp
0x07fae70d:  sar    $0xc,%ebp
0x07fae710:  mov    %bl,%al
0x07fae712:  out    %al,$0x64
0x07fae714:  xor    %eax,%eax
0x07fae716:  cmp    %eax,%ebp
0x07fae718:  jle    0x7fae72e

----------------
IN: 
0x07fae72e:  sar    $0x8,%ebx
0x07fae731:  and    $0xf,%ebx
0x07fae734:  add    %esi,%ebx
0x07fae736:  cmp    %ebx,%esi
0x07fae738:  je     0x7fae76f

----------------
IN: 
0x07fae76f:  mov    %edi,%eax
0x07fae771:  pop    %ebx
0x07fae772:  pop    %esi
0x07fae773:  pop    %edi
0x07fae774:  pop    %ebp
0x07fae775:  ret    

----------------
IN: 
0x07fb1eca:  test   %eax,%eax
0x07fb1ecc:  jne    0x7fb1ff5

----------------
IN: 
0x07fb1ed2:  xor    %edx,%edx
0x07fb1ed4:  mov    $0xa7,%eax
0x07fb1ed9:  call   0x7fae6f8

----------------
IN: 
0x07fb1ede:  test   %eax,%eax
0x07fb1ee0:  jne    0x7fb1ff5

----------------
IN: 
0x07fb1ee6:  call   0x7fae776

----------------
IN: 
0x07fb1eeb:  test   %eax,%eax
0x07fb1eed:  jne    0x7fb1ff5

----------------
IN: 
0x07fb1ef3:  lea    0x2(%esp),%edx
0x07fb1ef7:  mov    $0x1aa,%eax
0x07fb1efc:  call   0x7fae6f8

----------------
IN: 
0x07fae73a:  mov    $0x2710,%ebp
0x07fae73f:  in     $0x64,%al
0x07fae741:  test   $0x1,%al
0x07fae743:  jne    0x7fae766

----------------
IN: 
0x07fae766:  in     $0x60,%al
0x07fae768:  mov    %al,(%esi)
0x07fae76a:  inc    %esi
0x07fae76b:  jmp    0x7fae736

----------------
IN: 
0x07fae736:  cmp    %ebx,%esi
0x07fae738:  je     0x7fae76f

----------------
IN: 
0x07fb1f01:  test   %eax,%eax
0x07fb1f03:  jne    0x7fb1ff5

----------------
IN: 
0x07fb1f09:  movzbl 0x2(%esp),%eax
0x07fb1f0e:  cmp    $0x55,%al
0x07fb1f10:  je     0x7fb1f1a

----------------
IN: 
0x07fb1f1a:  lea    0x2(%esp),%edx
0x07fb1f1e:  mov    $0x1ab,%eax
0x07fb1f23:  call   0x7fae6f8

----------------
IN: 
0x07fb1f28:  test   %eax,%eax
0x07fb1f2a:  jne    0x7fb1ff5

----------------
IN: 
0x07fb1f30:  movzbl 0x2(%esp),%eax
0x07fb1f35:  test   %al,%al
0x07fb1f37:  je     0x7fb1f4b

----------------
IN: 
0x07fb1f4b:  xor    %edx,%edx
0x07fb1f4d:  xor    %ecx,%ecx
0x07fb1f4f:  mov    $0xf13a7,%eax
0x07fb1f54:  call   0x7fad81f

----------------
IN: 
0x07fb1f59:  mov    %eax,%ebx
0x07fb1f5b:  call   0xebc88

----------------
IN: 
0x000ebc88:  push   %ebx
0x000ebc89:  mov    %eax,%ebx
0x000ebc8b:  call   0xebc18

----------------
IN: 
0x000ebc18:  mov    0xf6038,%dx
0x000ebc1f:  test   %dx,%dx
0x000ebc22:  jne    0xebc3c

----------------
IN: 
0x000ebc3c:  mov    0xe8f34,%ecx
0x000ebc42:  cmp    $0x40,%dx
0x000ebc46:  je     0xebc5d

----------------
IN: 
0x000ebc48:  in     (%dx),%eax
0x000ebc49:  xor    %ecx,%eax
0x000ebc4b:  and    $0xffffff,%eax
0x000ebc50:  xor    %ecx,%eax
0x000ebc52:  cmp    %ecx,%eax
0x000ebc54:  jae    0xebc82

----------------
IN: 
0x000ebc82:  mov    %eax,0xe8f34
0x000ebc87:  ret    

----------------
IN: 
0x000ebc90:  imul   0xf603c,%ebx
0x000ebc97:  add    %ebx,%eax
0x000ebc99:  pop    %ebx
0x000ebc9a:  ret    

----------------
IN: 
0x07fb1f60:  mov    %eax,%esi
0x07fb1f62:  lea    0x2(%esp),%edx
0x07fb1f66:  mov    $0x1ff,%eax
0x07fb1f6b:  call   0x7fb1da3

----------------
IN: 
0x07fb1da3:  push   %ebp
0x07fb1da4:  push   %edi
0x07fb1da5:  push   %esi
0x07fb1da6:  push   %ebx
0x07fb1da7:  push   %ecx
0x07fb1da8:  mov    %eax,%esi
0x07fb1daa:  mov    %edx,%edi
0x07fb1dac:  mov    0xe8f2c,%al
0x07fb1db1:  mov    %al,0x2(%esp)
0x07fb1db5:  and    $0xfffffffc,%eax
0x07fb1db8:  or     $0x30,%eax
0x07fb1dbb:  mov    %al,0x3(%esp)
0x07fb1dbf:  lea    0x3(%esp),%edx
0x07fb1dc3:  mov    $0x1060,%eax
0x07fb1dc8:  call   0x7fae6f8

----------------
IN: 
0x07fae71a:  call   0xec5aa

----------------
IN: 
0x07fae71f:  test   %eax,%eax
0x07fae721:  jne    0x7fae76d

----------------
IN: 
0x07fae723:  mov    (%esi),%al
0x07fae725:  out    %al,$0x60
0x07fae727:  mov    $0x1,%eax
0x07fae72c:  jmp    0x7fae716

----------------
IN: 
0x07fae716:  cmp    %eax,%ebp
0x07fae718:  jle    0x7fae72e

----------------
IN: 
0x07fb1dcd:  mov    %eax,%ebx
0x07fb1dcf:  test   %eax,%eax
0x07fb1dd1:  jne    0x7fb1ea6

----------------
IN: 
0x07fb1dd7:  call   0xec186

----------------
IN: 
0x000ec195:  and    $0xfffff000,%eax
0x000ec19a:  mov    %eax,%ebx
0x000ec19c:  mov    %ebx,%eax
0x000ec19e:  call   0xe97e5

----------------
IN: 
0x000e97ef:  push   %edi
0x000e97f0:  push   %esi
0x000e97f1:  push   %ebx
0x000e97f2:  push   $0xe97fe
0x000e97f7:  push   %ebp
0x000e97f8:  mov    %esp,(%eax)
0x000e97fa:  mov    (%ecx),%esp
0x000e97fc:  pop    %ebp
0x000e97fd:  ret    

----------------
IN: 
0x07fae06e:  cmp    $0xf6168,%ebp
0x07fae074:  jne    0x7fae089

----------------
IN: 
0x07fae076:  pop    %ebx
0x07fae077:  pop    %esi
0x07fae078:  pop    %edi
0x07fae079:  pop    %ebp
0x07fae07a:  jmp    0xec16c

Servicing hardware INT=0x08
----------------
IN: 
0x07fb8bfe:  mov    $0xf601c,%eax
0x07fb8c03:  mov    $0xfefc7,%edi
0x07fb8c08:  mov    $0xb,%ecx
0x07fb8c0d:  mov    %eax,%esi
0x07fb8c0f:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fb8c0f:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fb8c11:  mov    %ax,0x78
0x07fb8c17:  movw   $0xf000,0x7a
0x07fb8c20:  mov    $0x90,%al
0x07fb8c22:  out    %al,$0x70
0x07fb8c24:  in     $0x71,%al
0x07fb8c26:  mov    %al,%bl
0x07fb8c28:  test   $0xf0,%al
0x07fb8c2a:  je     0x7fb8c3b

----------------
IN: 
0x07fb8c2c:  mov    %al,%dl
0x07fb8c2e:  shr    $0x4,%dl
0x07fb8c31:  movzbl %dl,%edx
0x07fb8c34:  xor    %eax,%eax
0x07fb8c36:  call   0x7fb4184

----------------
IN: 
0x07fb4184:  push   %edi
0x07fb4185:  push   %esi
0x07fb4186:  push   %ebx
0x07fb4187:  sub    $0x100,%esp
0x07fb418d:  mov    %eax,%ebx
0x07fb418f:  call   0x7fb0afc

----------------
IN: 
0x07fb0afc:  push   %edi
0x07fb0afd:  push   %esi
0x07fb0afe:  push   %ebx
0x07fb0aff:  mov    %eax,%edi
0x07fb0b01:  mov    %edx,%esi
0x07fb0b03:  lea    -0x1(%edx),%eax
0x07fb0b06:  cmp    $0x7,%eax
0x07fb0b09:  jbe    0x7fb0b1c

----------------
IN: 
0x07fb0b1c:  mov    $0x24,%eax
0x07fb0b21:  call   0x7fae0d4

----------------
IN: 
0x07fb0b26:  mov    %eax,%ebx
0x07fb0b28:  test   %eax,%eax
0x07fb0b2a:  jne    0x7fb0b3d

----------------
IN: 
0x07fb0b3d:  mov    $0x24,%ecx
0x07fb0b42:  xor    %edx,%edx
0x07fb0b44:  call   0xeab7b

----------------
IN: 
0x07fb0b49:  mov    %edi,0x14(%eax)
0x07fb0b4c:  movb   $0x10,(%eax)
0x07fb0b4f:  movw   $0x200,0x1a(%eax)
0x07fb0b55:  mov    %esi,%eax
0x07fb0b57:  mov    %al,0x1(%ebx)
0x07fb0b5a:  movl   $0xffffffff,0xc(%ebx)
0x07fb0b61:  movl   $0xffffffff,0x10(%ebx)
0x07fb0b68:  imul   $0xa,%esi,%esi
0x07fb0b6b:  mov    0xf5fc0(%esi),%eax
0x07fb0b71:  mov    0xf5fc4(%esi),%edx
0x07fb0b77:  mov    %eax,0x2(%ebx)
0x07fb0b7a:  mov    %edx,0x6(%ebx)
0x07fb0b7d:  mov    %ebx,%eax
0x07fb0b7f:  pop    %ebx
0x07fb0b80:  pop    %esi
0x07fb0b81:  pop    %edi
0x07fb0b82:  ret    

----------------
IN: 
0x07fb4194:  test   %eax,%eax
0x07fb4196:  je     0x7fb4221

----------------
IN: 
0x07fb419c:  mov    %eax,%esi
0x07fb419e:  lea    0x41(%ebx),%eax
0x07fb41a1:  push   %eax
0x07fb41a2:  push   $0xf19b7
0x07fb41a7:  push   $0x50
0x07fb41a9:  call   0x7fb3cc8

----------------
IN: 
0x07fb3cc8:  push   %ebx
0x07fb3cc9:  sub    $0xc,%esp
0x07fb3ccc:  mov    0x14(%esp),%eax
0x07fb3cd0:  call   0x7fae09f

----------------
IN: 
0x07fb3cd5:  mov    %eax,%ebx
0x07fb3cd7:  test   %eax,%eax
0x07fb3cd9:  jne    0x7fb3cec

----------------
IN: 
0x07fb3cec:  movl   $0x7fab680,(%esp)
0x07fb3cf3:  mov    %eax,0x4(%esp)
0x07fb3cf7:  mov    0x14(%esp),%eax
0x07fb3cfb:  add    %ebx,%eax
0x07fb3cfd:  mov    %eax,0x8(%esp)
0x07fb3d01:  lea    0x1c(%esp),%ecx
0x07fb3d05:  mov    0x18(%esp),%edx
0x07fb3d09:  mov    %esp,%eax
0x07fb3d0b:  call   0xebd11

----------------
IN: 
0x000ebda9:  cmp    $0x63,%al
0x000ebdab:  jne    0xebf60

----------------
IN: 
0x000ebdb1:  lea    0x4(%ebp),%edi
0x000ebdb4:  movsbl 0x0(%ebp),%edx
0x000ebdb8:  mov    %ebx,%eax
0x000ebdba:  call   0xe9803

----------------
IN: 
0x000ebdbf:  jmp    0xebf70

----------------
IN: 
0x07fb3d10:  mov    0x4(%esp),%eax
0x07fb3d14:  mov    0x8(%esp),%edx
0x07fb3d18:  cmp    %eax,%edx
0x07fb3d1a:  ja     0x7fb3d1f

----------------
IN: 
0x07fb3d1f:  movb   $0x0,(%eax)
0x07fb3d22:  mov    %ebx,%eax
0x07fb3d24:  add    $0xc,%esp
0x07fb3d27:  pop    %ebx
0x07fb3d28:  ret    

----------------
IN: 
0x07fb41ae:  mov    %eax,%edi
0x07fb41b0:  mov    0x7fbfde8,%eax
0x07fb41b5:  lea    -0x4(%eax),%ecx
0x07fb41b8:  add    $0xc,%esp
0x07fb41bb:  cmp    $0xfffffffc,%ecx
0x07fb41be:  je     0x7fb420d

----------------
IN: 
0x07fb41c0:  cmpw   $0x601,0x14(%ecx)
0x07fb41c6:  je     0x7fb41d0

----------------
IN: 
0x07fb41c8:  mov    0x4(%ecx),%ecx
0x07fb41cb:  sub    $0x4,%ecx
0x07fb41ce:  jmp    0x7fb41bb

----------------
IN: 
0x07fb41bb:  cmp    $0xfffffffc,%ecx
0x07fb41be:  je     0x7fb420d

----------------
IN: 
0x07fb41d0:  test   %ecx,%ecx
0x07fb41d2:  je     0x7fb420d

----------------
IN: 
0x07fb41d4:  mov    $0xf19c9,%edx
0x07fb41d9:  mov    %esp,%eax
0x07fb41db:  call   0x7fb3960

----------------
IN: 
0x07fb3960:  push   %ebp
0x07fb3961:  push   %edi
0x07fb3962:  push   %esi
0x07fb3963:  push   %ebx
0x07fb3964:  push   %ebx
0x07fb3965:  mov    %eax,%esi
0x07fb3967:  mov    %edx,%edi
0x07fb3969:  mov    %ecx,%ebp
0x07fb396b:  mov    0xc(%ecx),%ecx
0x07fb396e:  test   %ecx,%ecx
0x07fb3970:  je     0x7fb3980

----------------
IN: 
0x07fb3980:  push   $0xf17ed
0x07fb3985:  push   $0xf17f8
0x07fb398a:  push   $0x100
0x07fb398f:  push   %eax
0x07fb3990:  call   0x7fb244c

----------------
IN: 
0x07fb3995:  lea    (%esi,%eax,1),%ebx
0x07fb3998:  movzbl 0x2(%ebp),%edx
0x07fb399c:  add    $0x10,%esp
0x07fb399f:  test   %dl,%dl
0x07fb39a1:  je     0x7fb39bc

----------------
IN: 
0x07fb39bc:  mov    0x0(%ebp),%eax
0x07fb39bf:  mov    %al,%dl
0x07fb39c1:  and    $0x7,%edx
0x07fb39c4:  mov    %dl,0x3(%esp)
0x07fb39c8:  add    $0x100,%esi
0x07fb39ce:  shr    $0x3,%al
0x07fb39d1:  movzbl %al,%eax
0x07fb39d4:  push   %eax
0x07fb39d5:  push   %edi
0x07fb39d6:  push   $0xf17ff
0x07fb39db:  mov    %esi,%eax
0x07fb39dd:  sub    %ebx,%eax
0x07fb39df:  push   %eax
0x07fb39e0:  push   %ebx
0x07fb39e1:  call   0x7fb244c

----------------
IN: 
0x07fb39e6:  add    %eax,%ebx
0x07fb39e8:  add    $0x14,%esp
0x07fb39eb:  movzbl 0x3(%esp),%edx
0x07fb39f0:  test   %dl,%dl
0x07fb39f2:  je     0x7fb3a08

----------------
IN: 
0x07fb3a08:  mov    %ebx,%eax
0x07fb3a0a:  pop    %edx
0x07fb3a0b:  pop    %ebx
0x07fb3a0c:  pop    %esi
0x07fb3a0d:  pop    %edi
0x07fb3a0e:  pop    %ebp
0x07fb3a0f:  ret    

----------------
IN: 
0x07fb41e0:  push   %ebx
0x07fb41e1:  push   $0x3f0
0x07fb41e6:  push   $0xf19cd
0x07fb41eb:  lea    0x10c(%esp),%edx
0x07fb41f2:  sub    %eax,%edx
0x07fb41f4:  push   %edx
0x07fb41f5:  push   %eax
0x07fb41f6:  call   0x7fb244c

----------------
IN: 
0x07fb41fb:  lea    0x14(%esp),%eax
0x07fb41ff:  call   0x7faf3d9

----------------
IN: 
0x07faf3d9:  push   %ebp
0x07faf3da:  push   %edi
0x07faf3db:  push   %esi
0x07faf3dc:  push   %ebx
0x07faf3dd:  mov    %eax,%esi
0x07faf3df:  push   %eax
0x07faf3e0:  push   $0xf06ee
0x07faf3e5:  call   0xec4d8

----------------
IN: 
0x07faf3ea:  mov    0x7fbff30,%edi
0x07faf3f0:  mov    0x7fbfe54,%ebp
0x07faf3f6:  pop    %eax
0x07faf3f7:  pop    %edx
0x07faf3f8:  xor    %ebx,%ebx
0x07faf3fa:  cmp    %ebx,%edi
0x07faf3fc:  jle    0x7faf410

----------------
IN: 
0x07faf410:  or     $0xffffffff,%ebx
0x07faf413:  mov    %ebx,%eax
0x07faf415:  pop    %ebx
0x07faf416:  pop    %esi
0x07faf417:  pop    %edi
0x07faf418:  pop    %ebp
0x07faf419:  ret    

----------------
IN: 
0x07fb4204:  mov    %eax,%edx
0x07fb4206:  add    $0x14,%esp
0x07fb4209:  test   %eax,%eax
0x07fb420b:  jns    0x7fb4213

----------------
IN: 
0x07fb420d:  mov    0x7fbfe50,%edx
0x07fb4213:  push   %edi
0x07fb4214:  mov    %esi,%ecx
0x07fb4216:  mov    $0x1,%eax
0x07fb421b:  call   0x7fae248

----------------
IN: 
0x07fae248:  push   %ebp
0x07fae249:  push   %edi
0x07fae24a:  push   %esi
0x07fae24b:  push   %ebx
0x07fae24c:  push   %esi
0x07fae24d:  mov    %eax,%ebx
0x07fae24f:  mov    %edx,%edi
0x07fae251:  mov    %ecx,%esi
0x07fae253:  mov    0x18(%esp),%ebp
0x07fae257:  mov    $0x18,%eax
0x07fae25c:  call   0x7fae09f

----------------
IN: 
0x07fae261:  test   %eax,%eax
0x07fae263:  jne    0x7fae279

----------------
IN: 
0x07fae279:  mov    %ebx,(%eax)
0x07fae27b:  mov    %edi,0x8(%eax)
0x07fae27e:  mov    %esi,0x4(%eax)
0x07fae281:  test   %ebp,%ebp
0x07fae283:  jne    0x7fae28a

----------------
IN: 
0x07fae28a:  mov    %ebp,0xc(%eax)
0x07fae28d:  mov    0x7fbfe40,%edx
0x07fae293:  movl   $0x7fbfe40,(%esp)
0x07fae29a:  test   %edx,%edx
0x07fae29c:  jne    0x7fae2ae

----------------
IN: 
0x07fae29e:  add    $0x10,%eax
0x07fae2a1:  mov    (%esp),%edx
0x07fae2a4:  pop    %ecx
0x07fae2a5:  pop    %ebx
0x07fae2a6:  pop    %esi
0x07fae2a7:  pop    %edi
0x07fae2a8:  pop    %ebp
0x07fae2a9:  jmp    0x7fab66f

----------------
IN: 
0x07fb4220:  pop    %eax
0x07fb4221:  add    $0x100,%esp
0x07fb4227:  pop    %ebx
0x07fb4228:  pop    %esi
0x07fb4229:  pop    %edi
0x07fb422a:  ret    

----------------
IN: 
0x07fb8c3b:  and    $0xf,%bl
0x07fb8c3e:  je     0x7fb8c4d

----------------
IN: 
0x07fb8c4d:  mov    $0xfef57,%edx
0x07fb8c52:  movzwl %dx,%edx
0x07fb8c55:  or     $0xf0000000,%edx
0x07fb8c5b:  mov    $0x6,%eax
0x07fb8c60:  call   0x7fad04c

----------------
IN: 
0x07fb8c65:  mov    $0x7d00,%eax
0x07fb8c6a:  call   0xebc88

----------------
IN: 
0x07fb8c6f:  mov    %eax,0x7fbff3c
0x07fb8c74:  mov    0x7fbfde8,%eax
0x07fb8c79:  lea    -0x4(%eax),%ebx
0x07fb8c7c:  test   %eax,%eax
0x07fb8c7e:  jne    0x7fb8cb6

----------------
IN: 
0x07fb8cb6:  cmp    $0xfffffffc,%ebx
0x07fb8cb9:  je     0x7fb8cd1

----------------
IN: 
0x07fb8cbb:  xor    %ecx,%ecx
0x07fb8cbd:  mov    %ebx,%edx
0x07fb8cbf:  mov    $0x7fbfba0,%eax
0x07fb8cc4:  call   0x7fabc0c

----------------
IN: 
0x07fb8cc9:  mov    0x4(%ebx),%ebx
0x07fb8ccc:  sub    $0x4,%ebx
0x07fb8ccf:  jmp    0x7fb8cb6

----------------
IN: 
0x07fb20fc:  push   %ebp
0x07fb20fd:  push   %edi
0x07fb20fe:  push   %esi
0x07fb20ff:  push   %ebx
0x07fb2100:  mov    %eax,%ebx
0x07fb2102:  movzbl 0x16(%eax),%edi
0x07fb2106:  movzwl (%eax),%eax
0x07fb2109:  mov    $0x3c,%edx
0x07fb210e:  call   0xea4cf

----------------
IN: 
0x07fb2113:  mov    %eax,%ebp
0x07fb2115:  test   $0x1,%edi
0x07fb211b:  je     0x7fb214a

----------------
IN: 
0x07fb214a:  mov    $0xe,%ecx
0x07fb214f:  mov    $0x3f4,%eax
0x07fb2154:  mov    $0x1f0,%esi
0x07fb2159:  push   %eax
0x07fb215a:  push   %esi
0x07fb215b:  xor    %edx,%edx
0x07fb215d:  mov    %ebx,%eax
0x07fb215f:  call   0x7fb2062

----------------
IN: 
0x07fb2062:  push   %ebp
0x07fb2063:  push   %edi
0x07fb2064:  push   %esi
0x07fb2065:  push   %ebx
0x07fb2066:  push   %ebx
0x07fb2067:  mov    %eax,%ebx
0x07fb2069:  mov    %edx,(%esp)
0x07fb206c:  mov    %ecx,%esi
0x07fb206e:  mov    0x18(%esp),%edi
0x07fb2072:  mov    0x1c(%esp),%ebp
0x07fb2076:  mov    $0x14,%eax
0x07fb207b:  call   0x7fae0d4

----------------
IN: 
0x07fb2080:  test   %eax,%eax
0x07fb2082:  jne    0x7fb2098

----------------
IN: 
0x07fb2098:  mov    %eax,%edx
0x07fb209a:  mov    0x7fbff00,%ecx
0x07fb20a0:  lea    0x1(%ecx),%eax
0x07fb20a3:  mov    %eax,0x7fbff00
0x07fb20a8:  mov    %cl,0x8(%edx)
0x07fb20ab:  mov    (%esp),%cl
0x07fb20ae:  mov    %cl,0x7(%edx)
0x07fb20b1:  mov    %esi,%ecx
0x07fb20b3:  mov    %cl,0x6(%edx)
0x07fb20b6:  or     $0xffffffff,%ecx
0x07fb20b9:  test   %ebx,%ebx
0x07fb20bb:  je     0x7fb20c0

----------------
IN: 
0x07fb20bd:  movzwl (%ebx),%ecx
0x07fb20c0:  mov    %ecx,0xc(%edx)
0x07fb20c3:  mov    %ebx,0x10(%edx)
0x07fb20c6:  mov    %di,(%edx)
0x07fb20c9:  mov    %bp,0x2(%edx)
0x07fb20cd:  movw   $0x0,0x4(%edx)
0x07fb20d3:  mov    %edx,(%esp)
0x07fb20d6:  push   %ecx
0x07fb20d7:  push   %esi
0x07fb20d8:  push   $0x0
0x07fb20da:  push   %ebp
0x07fb20db:  push   %edi
0x07fb20dc:  push   %eax
0x07fb20dd:  push   $0xf142d
0x07fb20e2:  call   0xec4d8

----------------
IN: 
0x07fb20e7:  mov    0x1c(%esp),%edx
0x07fb20eb:  mov    $0x7fb9b05,%eax
0x07fb20f0:  add    $0x20,%esp
0x07fb20f3:  pop    %ebx
0x07fb20f4:  pop    %esi
0x07fb20f5:  pop    %edi
0x07fb20f6:  pop    %ebp
0x07fb20f7:  jmp    0x7fadff4

----------------
IN: 
0x07fb9b05:  push   %ebp
0x07fb9b06:  push   %edi
0x07fb9b07:  push   %esi
0x07fb9b08:  push   %ebx
0x07fb9b09:  sub    $0x26c,%esp
0x07fb9b0f:  mov    %eax,0xc(%esp)
0x07fb9b13:  mov    $0x2c,%ecx
0x07fb9b18:  xor    %edx,%edx
0x07fb9b1a:  lea    0x40(%esp),%eax
0x07fb9b1e:  call   0xeab7b

----------------
IN: 
0x07fb9b23:  mov    0xc(%esp),%eax
0x07fb9b27:  mov    %eax,0x64(%esp)
0x07fb9b2b:  movb   $0x0,0x3(%esp)
0x07fb9b30:  xor    %esi,%esi
0x07fb9b32:  mov    0xc(%esp),%eax
0x07fb9b36:  movzwl (%eax),%eax
0x07fb9b39:  mov    %eax,%ebp
0x07fb9b3b:  mov    %eax,0x10(%esp)
0x07fb9b3f:  call   0x7faecf2

----------------
IN: 
0x07faecf2:  push   %esi
0x07faecf3:  push   %ebx
0x07faecf4:  mov    %eax,%esi
0x07faecf6:  xor    %ebx,%ebx
0x07faecf8:  lea    0x7(%esi),%edx
0x07faecfb:  in     (%dx),%al
0x07faecfc:  test   %al,%al
0x07faecfe:  jns    0x7faed30

----------------
IN: 
0x07faed30:  movzbl %al,%eax
0x07faed33:  jmp    0x7faed3a

----------------
IN: 
0x07faed3a:  pop    %ebx
0x07faed3b:  pop    %esi
0x07faed3c:  ret    

----------------
IN: 
0x07fb9b44:  test   %eax,%eax
0x07fb9b46:  js     0x7fb9f0d

----------------
IN: 
0x07fb9b4c:  cmpb   $0x1,0x3(%esp)
0x07fb9b51:  sbb    %ebx,%ebx
0x07fb9b53:  and    $0xfffffff0,%ebx
0x07fb9b56:  sub    $0x50,%ebx
0x07fb9b59:  lea    0x6(%ebp),%eax
0x07fb9b5c:  mov    %ax,0x4(%esp)
0x07fb9b61:  mov    %bl,%al
0x07fb9b63:  mov    0x4(%esp),%edx
0x07fb9b67:  out    %al,(%dx)
0x07fb9b68:  call   0xebc18

----------------
IN: 
0x07fb9b6d:  mov    %eax,%ecx
0x07fb9b6f:  imul   $0x190,0xf603c,%eax
0x07fb9b79:  add    $0xf423f,%eax
0x07fb9b7e:  mov    $0xf4240,%edi
0x07fb9b83:  xor    %edx,%edx
0x07fb9b85:  div    %edi
0x07fb9b87:  add    %ecx,%eax
0x07fb9b89:  call   0xebcf3

----------------
IN: 
0x000ebcf3:  push   %ebx
0x000ebcf4:  mov    %eax,%ebx
0x000ebcf6:  mov    %ebx,%eax
0x000ebcf8:  call   0xebcdf

----------------
IN: 
0x000ebcdf:  push   %ebx
0x000ebce0:  mov    %eax,%ebx
0x000ebce2:  call   0xebc18

----------------
IN: 
0x000ebce7:  sub    %ebx,%eax
0x000ebce9:  test   %eax,%eax
0x000ebceb:  setg   %al
0x000ebcee:  movzbl %al,%eax
0x000ebcf1:  pop    %ebx
0x000ebcf2:  ret    

----------------
IN: 
0x000ebcfd:  test   %eax,%eax
0x000ebcff:  jne    0xebd05

----------------
IN: 
0x000ebd05:  pop    %ebx
0x000ebd06:  ret    

----------------
IN: 
0x07fb9b8e:  movzwl %bp,%eax
0x07fb9b91:  call   0x7faecf2

----------------
IN: 
0x07fb9b96:  test   %eax,%eax
0x07fb9b98:  js     0x7fb9f0d

----------------
IN: 
0x07fb9b9e:  mov    %bl,%al
0x07fb9ba0:  mov    0x4(%esp),%edx
0x07fb9ba4:  out    %al,(%dx)
0x07fb9ba5:  in     (%dx),%al
0x07fb9ba6:  mov    %al,0x4(%esp)
0x07fb9baa:  lea    0x2(%ebp),%ecx
0x07fb9bad:  mov    $0x55,%al
0x07fb9baf:  mov    %ecx,%edx
0x07fb9bb1:  out    %al,(%dx)
0x07fb9bb2:  lea    0x3(%ebp),%edi
0x07fb9bb5:  mov    $0xaa,%al
0x07fb9bb7:  mov    %edi,%edx
0x07fb9bb9:  out    %al,(%dx)
0x07fb9bba:  mov    %ecx,%edx
0x07fb9bbc:  in     (%dx),%al
0x07fb9bbd:  mov    %al,%cl
0x07fb9bbf:  mov    %edi,%edx
0x07fb9bc1:  in     (%dx),%al
0x07fb9bc2:  cmp    $0x55,%cl
0x07fb9bc5:  setne  %dl
0x07fb9bc8:  cmp    $0xaa,%al
0x07fb9bca:  setne  %al
0x07fb9bcd:  or     %dl,%al
0x07fb9bcf:  jne    0x7fb9f0d

----------------
IN: 
0x07fb9bd5:  cmp    0x4(%esp),%bl
0x07fb9bd9:  jne    0x7fb9f0d

----------------
IN: 
0x07fb9bdf:  mov    0x3(%esp),%al
0x07fb9be3:  mov    %al,0x68(%esp)
0x07fb9be7:  test   %esi,%esi
0x07fb9be9:  jne    0x7fb9c9e

----------------
IN: 
0x07fb9bef:  mov    0x64(%esp),%eax
0x07fb9bf3:  movzwl (%eax),%esi
0x07fb9bf6:  mov    %esi,%edi
0x07fb9bf8:  mov    0x2(%eax),%ax
0x07fb9bfc:  add    $0x2,%eax
0x07fb9bff:  mov    %ax,0x4(%esp)
0x07fb9c04:  mov    $0xe,%al
0x07fb9c06:  mov    0x4(%esp),%edx
0x07fb9c0a:  out    %al,(%dx)
0x07fb9c0b:  mov    $0x5,%eax
0x07fb9c10:  call   0xebd07

----------------
IN: 
0x000ebd07:  call   0xebc9b

----------------
IN: 
0x000ebc9b:  push   %esi
0x000ebc9c:  push   %ebx
0x000ebc9d:  mov    %eax,%ebx
0x000ebc9f:  call   0xebc18

----------------
IN: 
0x000ebca4:  mov    %eax,%ecx
0x000ebca6:  mov    0xf603c,%esi
0x000ebcac:  cmp    $0x7a120,%ebx
0x000ebcb2:  jbe    0xebcc8

----------------
IN: 
0x000ebcc8:  imul   %ebx,%esi
0x000ebccb:  lea    0x3e7(%esi),%eax
0x000ebcd1:  mov    $0x3e8,%ebx
0x000ebcd6:  xor    %edx,%edx
0x000ebcd8:  div    %ebx
0x000ebcda:  add    %ecx,%eax
0x000ebcdc:  pop    %ebx
0x000ebcdd:  pop    %esi
0x000ebcde:  ret    

----------------
IN: 
0x000ebd0c:  jmp    0xebcf3

----------------
IN: 
0x07fb9c15:  mov    $0xa,%al
0x07fb9c17:  mov    0x4(%esp),%edx
0x07fb9c1b:  out    %al,(%dx)
0x07fb9c1c:  mov    $0x2,%eax
0x07fb9c21:  call   0x7fad9c4

----------------
IN: 
0x07fad9c4:  push   %ebx
0x07fad9c5:  call   0xebc88

----------------
IN: 
0x07fad9ca:  mov    %eax,%ebx
0x07fad9cc:  mov    %ebx,%eax
0x07fad9ce:  call   0xebcdf

----------------
IN: 
0x07fad9d3:  test   %eax,%eax
0x07fad9d5:  jne    0x7fad9de

----------------
IN: 
0x07fad9d7:  call   0xec186

----------------
IN: 
0x000e97fe:  pop    %ebx
0x000e97ff:  pop    %esi
0x000e9800:  pop    %edi
0x000e9801:  ret    

----------------
IN: 
0x000ec1b1:  pop    %ebx
0x000ec1b2:  ret    

----------------
IN: 
0x07fb1ddc:  mov    0x3(%esp),%al
0x07fb1de0:  mov    %al,0xe8f2c
0x07fb1de5:  and    $0xffffffef,%eax
0x07fb1de8:  mov    %al,0x3(%esp)
0x07fb1dec:  lea    0x3(%esp),%edx
0x07fb1df0:  mov    $0x1060,%eax
0x07fb1df5:  call   0x7fae6f8

----------------
IN: 
0x07fb1dfa:  mov    %eax,%ebx
0x07fb1dfc:  test   %eax,%eax
0x07fb1dfe:  jne    0x7fb1e89

----------------
IN: 
0x07fb1e04:  mov    %esi,%eax
0x07fb1e06:  movzbl %al,%eax
0x07fb1e09:  mov    %esi,%ecx
0x07fb1e0b:  inc    %cl
0x07fb1e0d:  jne    0x7fb1e33

----------------
IN: 
0x07fb1e0f:  mov    $0x3e8,%edx
0x07fb1e14:  call   0x7fb1d6e

----------------
IN: 
0x07fb1d6e:  push   %ebx
0x07fb1d6f:  push   %ecx
0x07fb1d70:  mov    %edx,(%esp)
0x07fb1d73:  mov    %al,%bl
0x07fb1d75:  call   0xec5aa

----------------
IN: 
0x07fb1d7a:  test   %eax,%eax
0x07fb1d7c:  jne    0x7fb1da0

----------------
IN: 
0x07fb1d7e:  mov    %bl,%al
0x07fb1d80:  out    %al,$0x60
0x07fb1d82:  mov    (%esp),%edx
0x07fb1d85:  mov    $0x1,%eax
0x07fb1d8a:  call   0x7fb1cea

----------------
IN: 
0x07fb1cea:  push   %esi
0x07fb1ceb:  push   %ebx
0x07fb1cec:  mov    %eax,%esi
0x07fb1cee:  mov    %edx,%eax
0x07fb1cf0:  call   0xebc88

----------------
IN: 
0x07fb1cf5:  mov    %eax,%ebx
0x07fb1cf7:  in     $0x64,%al
0x07fb1cf9:  mov    %al,%dl
0x07fb1cfb:  test   $0x1,%al
0x07fb1cfd:  je     0x7fb1d40

----------------
IN: 
0x07fb1cff:  movzbl %al,%ecx
0x07fb1d02:  in     $0x60,%al
0x07fb1d04:  and    $0x20,%dl
0x07fb1d07:  jne    0x7fb1d2e

----------------
IN: 
0x07fb1d09:  test   %esi,%esi
0x07fb1d0b:  jne    0x7fb1d12

----------------
IN: 
0x07fb1d12:  cmp    $0xfa,%al
0x07fb1d14:  je     0x7fb1d66

----------------
IN: 
0x07fb1d66:  mov    $0xfa,%eax
0x07fb1d6b:  pop    %ebx
0x07fb1d6c:  pop    %esi
0x07fb1d6d:  ret    

----------------
IN: 
0x07fb1d8f:  test   %eax,%eax
0x07fb1d91:  js     0x7fb1da0

----------------
IN: 
0x07fb1d93:  cmp    $0xfa,%eax
0x07fb1d98:  setne  %al
0x07fb1d9b:  movzbl %al,%eax
0x07fb1d9e:  neg    %eax
0x07fb1da0:  pop    %edx
0x07fb1da1:  pop    %ebx
0x07fb1da2:  ret    

----------------
IN: 
0x07fb1e19:  mov    %eax,%ebx
0x07fb1e1b:  test   %eax,%eax
0x07fb1e1d:  jne    0x7fb1e89

----------------
IN: 
0x07fb1e1f:  mov    $0xfa0,%edx
0x07fb1e24:  xor    %eax,%eax
0x07fb1e26:  call   0x7fb1cea

----------------
IN: 
0x07fb1d0d:  movzbl %al,%eax
0x07fb1d10:  jmp    0x7fb1d6b

----------------
IN: 
0x07fb1d6b:  pop    %ebx
0x07fb1d6c:  pop    %esi
0x07fb1d6d:  ret    

----------------
IN: 
0x07fb1e2b:  test   %eax,%eax
0x07fb1e2d:  js     0x7fb1e87

----------------
IN: 
0x07fb1e2f:  mov    %al,(%edi)
0x07fb1e31:  jmp    0x7fb1e89

----------------
IN: 
0x07fb1e89:  mov    0x2(%esp),%al
0x07fb1e8d:  mov    %al,0xe8f2c
0x07fb1e92:  lea    0x2(%esp),%edx
0x07fb1e96:  mov    $0x1060,%eax
0x07fb1e9b:  call   0x7fae6f8

----------------
IN: 
0x07fb1ea0:  test   %eax,%eax
0x07fb1ea2:  je     0x7fb1ea6

----------------
IN: 
0x07fb1ea6:  mov    %ebx,%eax
0x07fb1ea8:  pop    %edx
0x07fb1ea9:  pop    %ebx
0x07fb1eaa:  pop    %esi
0x07fb1eab:  pop    %edi
0x07fb1eac:  pop    %ebp
0x07fb1ead:  ret    

----------------
IN: 
0x07fb1f70:  test   %eax,%eax
0x07fb1f72:  je     0x7fb1f9b

----------------
IN: 
0x07fb1f9b:  movzbl 0x2(%esp),%eax
0x07fb1fa0:  cmp    $0xaa,%al
0x07fb1fa2:  je     0x7fb1fac

----------------
IN: 
0x07fb1fac:  xor    %edx,%edx
0x07fb1fae:  mov    $0xf5,%eax
0x07fb1fb3:  call   0x7fb1da3

Servicing hardware INT=0x08
----------------
IN: 
0x07fb2164:  pop    %ecx
0x07fb2165:  pop    %esi
0x07fb2166:  and    $0x4,%edi
0x07fb2169:  je     0x7fb2198

----------------
IN: 
0x07fb2198:  mov    $0xf,%ecx
0x07fb219d:  mov    $0x374,%eax
0x07fb21a2:  mov    $0x170,%esi
0x07fb21a7:  push   %eax
0x07fb21a8:  push   %esi
0x07fb21a9:  mov    $0x1,%edx
0x07fb21ae:  mov    %ebx,%eax
0x07fb21b0:  call   0x7fb2062

----------------
IN: 
0x000ebd01:  pause  

----------------
IN: 
0x000ebd03:  jmp    0xebcf6

----------------
IN: 
0x000ebcf6:  mov    %ebx,%eax
0x000ebcf8:  call   0xebcdf

----------------
IN: 
0x07fad9dc:  jmp    0x7fad9cc

----------------
IN: 
0x07fad9cc:  mov    %ebx,%eax
0x07fad9ce:  call   0xebcdf

----------------
IN: 
0x07fad9de:  pop    %ebx
0x07fad9df:  ret    

----------------
IN: 
0x07fb9c26:  mov    %esi,%eax
0x07fb9c28:  call   0xec743

----------------
IN: 
0x000ec743:  movzwl %ax,%ecx
0x000ec746:  xor    %edx,%edx
0x000ec748:  mov    $0x80,%eax
0x000ec74d:  jmp    0xec6ef

----------------
IN: 
0x000ec6ef:  push   %ebp
0x000ec6f0:  push   %edi
0x000ec6f1:  push   %esi
0x000ec6f2:  push   %ebx
0x000ec6f3:  mov    %eax,%esi
0x000ec6f5:  mov    %edx,%edi
0x000ec6f7:  mov    %ecx,%ebp
0x000ec6f9:  mov    $0x7d00,%eax
0x000ec6fe:  call   0xebc88

----------------
IN: 
0x000ec703:  mov    %eax,%ebx
0x000ec705:  lea    0x7(%ebp),%edx
0x000ec708:  in     (%dx),%al
0x000ec709:  mov    %esi,%edx
0x000ec70b:  and    %eax,%edx
0x000ec70d:  mov    %edi,%ecx
0x000ec70f:  cmp    %cl,%dl
0x000ec711:  jne    0xec718

----------------
IN: 
0x000ec713:  movzbl %al,%eax
0x000ec716:  jmp    0xec73e

----------------
IN: 
0x000ec73e:  pop    %ebx
0x000ec73f:  pop    %esi
0x000ec740:  pop    %edi
0x000ec741:  pop    %ebp
0x000ec742:  ret    

----------------
IN: 
0x07fb9c2d:  test   %eax,%eax
0x07fb9c2f:  js     0x7fb9c97

----------------
IN: 
0x07fb9c31:  add    $0x6,%edi
0x07fb9c34:  cmpb   $0x0,0x3(%esp)
0x07fb9c39:  je     0x7fb9c7a

----------------
IN: 
0x07fb9c7a:  mov    $0xa0,%al
0x07fb9c7c:  mov    %edi,%edx
0x07fb9c7e:  out    %al,(%dx)
0x07fb9c7f:  cmpb   $0x20,0x40(%esp)
0x07fb9c84:  jne    0x7fb9c97

----------------
IN: 
0x07fb9c97:  mov    $0x8,%al
0x07fb9c99:  mov    0x4(%esp),%edx
0x07fb9c9d:  out    %al,(%dx)
0x07fb9c9e:  mov    $0xa1,%ecx
0x07fb9ca3:  lea    0x6c(%esp),%edx
0x07fb9ca7:  lea    0x40(%esp),%eax
0x07fb9cab:  call   0x7faec4c

----------------
IN: 
0x07faec4c:  push   %edi
0x07faec4d:  push   %esi
0x07faec4e:  push   %ebx
0x07faec4f:  sub    $0x20,%esp
0x07faec52:  mov    %eax,%edi
0x07faec54:  mov    %edx,%ebx
0x07faec56:  mov    %ecx,%esi
0x07faec58:  mov    $0x200,%ecx
0x07faec5d:  xor    %edx,%edx
0x07faec5f:  mov    %ebx,%eax
0x07faec61:  call   0xeab7b

----------------
IN: 
0x07faec66:  mov    $0x14,%ecx
0x07faec6b:  lea    0xc(%esp),%eax
0x07faec6f:  call   0xeab7b

----------------
IN: 
0x07faec74:  mov    %edi,0x10(%esp)
0x07faec78:  movw   $0x1,0x16(%esp)
0x07faec7f:  movl   $0x1,0x18(%esp)
0x07faec87:  movl   $0x0,0x1c(%esp)
0x07faec8f:  mov    %ebx,0xc(%esp)
0x07faec93:  mov    $0xc,%ecx
0x07faec98:  mov    %esp,%eax
0x07faec9a:  call   0xeab7b

----------------
IN: 
0x07faec9f:  mov    %esi,%eax
0x07faeca1:  mov    %al,0x6(%esp)
0x07faeca5:  mov    0x24(%edi),%eax
0x07faeca8:  mov    (%eax),%si
0x07faecab:  mov    0x2(%eax),%bx
0x07faecaf:  add    $0x2,%ebx
0x07faecb2:  mov    $0xa,%al
0x07faecb4:  mov    %ebx,%edx
0x07faecb6:  out    %al,(%dx)
0x07faecb7:  mov    %esp,%edx
0x07faecb9:  mov    %edi,%eax
0x07faecbb:  call   0xec7a8

----------------
IN: 
0x000ec7a8:  push   %ebp
0x000ec7a9:  push   %edi
0x000ec7aa:  push   %esi
0x000ec7ab:  push   %ebx
0x000ec7ac:  sub    $0x8,%esp
0x000ec7af:  mov    %edx,%esi
0x000ec7b1:  mov    0x28(%eax),%bl
0x000ec7b4:  mov    0x24(%eax),%eax
0x000ec7b7:  movzwl (%eax),%edi
0x000ec7ba:  mov    %edi,%eax
0x000ec7bc:  call   0xec743

----------------
IN: 
0x000ec7c1:  test   %eax,%eax
0x000ec7c3:  js     0xec87d

----------------
IN: 
0x000ec7c9:  mov    %edi,%ebp
0x000ec7cb:  mov    0x5(%esi),%cl
0x000ec7ce:  and    $0x4f,%ecx
0x000ec7d1:  cmp    $0x1,%bl
0x000ec7d4:  sbb    %eax,%eax
0x000ec7d6:  and    $0xfffffff0,%eax
0x000ec7d9:  sub    $0x50,%eax
0x000ec7dc:  or     %eax,%ecx
0x000ec7de:  lea    0x6(%edi),%edx
0x000ec7e1:  in     (%dx),%al
0x000ec7e2:  mov    %al,%bl
0x000ec7e4:  mov    %cl,%al
0x000ec7e6:  out    %al,(%dx)
0x000ec7e7:  xor    %ebx,%ecx
0x000ec7e9:  and    $0x10,%cl
0x000ec7ec:  jne    0xec843

----------------
IN: 
0x000ec7ee:  mov    0x6(%esi),%cl
0x000ec7f1:  lea    0x1(%ebp),%eax
0x000ec7f4:  mov    %ax,0x2(%esp)
0x000ec7f9:  lea    0x2(%ebp),%edi
0x000ec7fc:  lea    0x3(%ebp),%ebx
0x000ec7ff:  lea    0x4(%ebp),%eax
0x000ec802:  mov    %ax,0x4(%esp)
0x000ec807:  lea    0x5(%ebp),%eax
0x000ec80a:  mov    %ax,0x6(%esp)
0x000ec80f:  mov    %ecx,%eax
0x000ec811:  and    $0xee,%eax
0x000ec816:  cmp    $0x24,%eax
0x000ec819:  jne    0xec850

----------------
IN: 
0x000ec850:  mov    (%esi),%al
0x000ec852:  mov    0x2(%esp),%dx
0x000ec857:  out    %al,(%dx)
0x000ec858:  mov    0x1(%esi),%al
0x000ec85b:  mov    %edi,%edx
0x000ec85d:  out    %al,(%dx)
0x000ec85e:  mov    0x2(%esi),%al
0x000ec861:  mov    %ebx,%edx
0x000ec863:  out    %al,(%dx)
0x000ec864:  mov    0x3(%esi),%al
0x000ec867:  mov    0x4(%esp),%edx
0x000ec86b:  out    %al,(%dx)
0x000ec86c:  mov    0x4(%esi),%al
0x000ec86f:  mov    0x6(%esp),%dx
0x000ec874:  out    %al,(%dx)
0x000ec875:  lea    0x7(%ebp),%edx
0x000ec878:  mov    %cl,%al
0x000ec87a:  out    %al,(%dx)
0x000ec87b:  xor    %eax,%eax
0x000ec87d:  add    $0x8,%esp
0x000ec880:  pop    %ebx
0x000ec881:  pop    %esi
0x000ec882:  pop    %edi
0x000ec883:  pop    %ebp
0x000ec884:  ret    

----------------
IN: 
0x07faecc0:  mov    %eax,%ecx
0x07faecc2:  test   %eax,%eax
0x07faecc4:  jne    0x7faece4

----------------
IN: 
0x07faecc6:  movzwl %si,%eax
0x07faecc9:  call   0xec786

----------------
IN: 
0x000ec786:  movzwl %ax,%eax
0x000ec789:  call   0xec752

----------------
IN: 
0x000ec752:  push   %esi
0x000ec753:  push   %ebx
0x000ec754:  mov    %eax,%ebx
0x000ec756:  call   0xebc18

----------------
IN: 
0x000ec75b:  mov    %eax,%ecx
0x000ec75d:  imul   $0x190,0xf603c,%eax
0x000ec767:  add    $0xf423f,%eax
0x000ec76c:  mov    $0xf4240,%esi
0x000ec771:  xor    %edx,%edx
0x000ec773:  div    %esi
0x000ec775:  add    %ecx,%eax
0x000ec777:  call   0xebcf3

----------------
IN: 
0x000ec77c:  movzwl %bx,%eax
0x000ec77f:  pop    %ebx
0x000ec780:  pop    %esi
0x000ec781:  jmp    0xec743

----------------
IN: 
0x000ec78e:  test   %eax,%eax
0x000ec790:  js     0xec7a7

----------------
IN: 
0x000ec792:  test   $0x1,%al
0x000ec794:  jne    0xec7a2

----------------
IN: 
0x000ec7a2:  mov    $0xfffffffc,%eax
0x000ec7a7:  ret    

----------------
IN: 
0x07faecce:  mov    %eax,%ecx
0x07faecd0:  test   %eax,%eax
0x07faecd2:  jne    0x7faece4

----------------
IN: 
0x07faece4:  mov    $0x8,%al
0x07faece6:  mov    %ebx,%edx
0x07faece8:  out    %al,(%dx)
0x07faece9:  mov    %ecx,%eax
0x07faeceb:  add    $0x20,%esp
0x07faecee:  pop    %ebx
0x07faecef:  pop    %esi
0x07faecf0:  pop    %edi
0x07faecf1:  ret    

----------------
IN: 
0x07fb9cb0:  test   %eax,%eax
0x07fb9cb2:  je     0x7fb9cc5

----------------
IN: 
0x07fb9cb4:  lea    0x7(%ebp),%edx
0x07fb9cb7:  in     (%dx),%al
0x07fb9cb8:  test   %al,%al
0x07fb9cba:  je     0x7fb9dbf

----------------
IN: 
0x07fb9cc0:  jmp    0x7fb9d92

----------------
IN: 
0x07fb9d92:  mov    0x10(%esp),%ecx
0x07fb9d96:  mov    $0x40,%edx
0x07fb9d9b:  mov    $0x40,%eax
0x07fb9da0:  call   0xec6ef

----------------
IN: 
0x07fb9da5:  test   %eax,%eax
0x07fb9da7:  js     0x7fb9dbf

----------------
IN: 
0x07fb9da9:  mov    $0xec,%ecx
0x07fb9dae:  lea    0x6c(%esp),%edx
0x07fb9db2:  lea    0x40(%esp),%eax
0x07fb9db6:  call   0x7faec4c

----------------
IN: 
0x000ec796:  and    $0x8,%eax
0x000ec799:  cmp    $0x1,%eax
0x000ec79c:  sbb    %eax,%eax
0x000ec79e:  and    $0xfffffffb,%eax
0x000ec7a1:  ret    

----------------
IN: 
0x07faecd4:  mov    $0x200,%edx
0x07faecd9:  lea    0xc(%esp),%eax
0x07faecdd:  call   0xec885

----------------
IN: 
0x000ec885:  push   %ebp
0x000ec886:  push   %edi
0x000ec887:  push   %esi
0x000ec888:  push   %ebx
0x000ec889:  sub    $0x10,%esp
0x000ec88c:  mov    %eax,%ebx
0x000ec88e:  mov    %edx,(%esp)
0x000ec891:  mov    0x4(%eax),%eax
0x000ec894:  mov    0x24(%eax),%eax
0x000ec897:  mov    (%eax),%di
0x000ec89a:  mov    %di,0x4(%esp)
0x000ec89f:  mov    0x2(%eax),%ax
0x000ec8a3:  mov    %ax,0x6(%esp)
0x000ec8a8:  movzwl 0xa(%ebx),%esi
0x000ec8ac:  mov    (%ebx),%ebp
0x000ec8ae:  mov    $0x2,%ecx
0x000ec8b3:  mov    %edx,%eax
0x000ec8b5:  cltd   
0x000ec8b6:  idiv   %ecx
0x000ec8b8:  mov    %eax,0x8(%esp)
0x000ec8bc:  movzwl %di,%eax
0x000ec8bf:  mov    %eax,0xc(%esp)
0x000ec8c3:  mov    0x8(%esp),%ecx
0x000ec8c7:  mov    %ebp,%edi
0x000ec8c9:  mov    0x4(%esp),%edx
0x000ec8cd:  rep insw (%dx),%es:(%edi)

----------------
IN: 
0x000ec8cd:  rep insw (%dx),%es:(%edi)

----------------
IN: 
0x000ec8d0:  add    (%esp),%ebp
0x000ec8d3:  mov    0x6(%esp),%ax
0x000ec8d8:  lea    0x2(%eax),%edx
0x000ec8db:  in     (%dx),%al
0x000ec8dc:  mov    0xc(%esp),%eax
0x000ec8e0:  call   0xec743

----------------
IN: 
0x000ec8e5:  test   %eax,%eax
0x000ec8e7:  jns    0xec8ef

----------------
IN: 
0x000ec8ef:  and    $0x89,%eax
0x000ec8f4:  dec    %esi
0x000ec8f5:  je     0xec907

----------------
IN: 
0x000ec907:  test   %eax,%eax
0x000ec909:  je     0xec910

----------------
IN: 
0x000ec910:  add    $0x10,%esp
0x000ec913:  pop    %ebx
0x000ec914:  pop    %esi
0x000ec915:  pop    %edi
0x000ec916:  pop    %ebp
0x000ec917:  ret    

----------------
IN: 
0x07faece2:  mov    %eax,%ecx
0x07faece4:  mov    $0x8,%al
0x07faece6:  mov    %ebx,%edx
0x07faece8:  out    %al,(%dx)
0x07faece9:  mov    %ecx,%eax
0x07faeceb:  add    $0x20,%esp
0x07faecee:  pop    %ebx
0x07faecef:  pop    %esi
0x07faecf0:  pop    %edi
0x07faecf1:  ret    

----------------
IN: 
0x07fb9dbb:  test   %eax,%eax
0x07fb9dbd:  je     0x7fb9dc9

----------------
IN: 
0x07fb9dc9:  lea    0x6c(%esp),%edx
0x07fb9dcd:  lea    0x40(%esp),%eax
0x07fb9dd1:  call   0x7fae489

----------------
IN: 
0x07fae489:  push   %edi
0x07fae48a:  push   %esi
0x07fae48b:  push   %ebx
0x07fae48c:  mov    %eax,%edi
0x07fae48e:  mov    %edx,%esi
0x07fae490:  mov    $0x2c,%eax
0x07fae495:  call   0x7fae0d4

----------------
IN: 
0x07fae49a:  mov    %eax,%ebx
0x07fae49c:  test   %eax,%eax
0x07fae49e:  jne    0x7fae4b1

----------------
IN: 
0x07fae4b1:  mov    $0x2c,%ecx
0x07fae4b6:  xor    %edx,%edx
0x07fae4b8:  call   0xeab7b

----------------
IN: 
0x07fae4bd:  mov    0x24(%edi),%eax
0x07fae4c0:  mov    %eax,0x24(%ebx)
0x07fae4c3:  mov    0x28(%edi),%dl
0x07fae4c6:  mov    %dl,0x28(%ebx)
0x07fae4c9:  movzbl 0x8(%eax),%eax
0x07fae4cd:  add    %eax,%eax
0x07fae4cf:  movzbl 0x28(%edi),%edx
0x07fae4d3:  add    %edx,%eax
0x07fae4d5:  mov    %eax,0x14(%ebx)
0x07fae4d8:  movzwl (%esi),%eax
0x07fae4db:  shr    $0x7,%al
0x07fae4de:  mov    %al,0x18(%ebx)
0x07fae4e1:  mov    %ebx,%eax
0x07fae4e3:  pop    %ebx
0x07fae4e4:  pop    %esi
0x07fae4e5:  pop    %edi
0x07fae4e6:  ret    

----------------
IN: 
0x07fb9dd6:  mov    %eax,%ebx
0x07fb9dd8:  test   %eax,%eax
0x07fb9dda:  je     0x7fb9dbf

----------------
IN: 
0x07fb9ddc:  movb   $0x20,(%eax)
0x07fb9ddf:  movw   $0x200,0x1a(%eax)
0x07fb9de5:  mov    0x6e(%esp),%ax
0x07fb9dea:  mov    %ax,0x1e(%ebx)
0x07fb9dee:  mov    0x72(%esp),%ax
0x07fb9df3:  mov    %ax,0x1c(%ebx)
0x07fb9df7:  mov    0x78(%esp),%eax
0x07fb9dfb:  mov    %ax,0x20(%ebx)
0x07fb9dff:  testb  $0x4,0x113(%esp)
0x07fb9e07:  je     0x7fb9e19

----------------
IN: 
0x07fb9e09:  mov    0x134(%esp),%eax
0x07fb9e10:  mov    0x138(%esp),%edx
0x07fb9e17:  jmp    0x7fb9e22

----------------
IN: 
0x07fb9e22:  mov    %eax,0xc(%ebx)
0x07fb9e25:  mov    %edx,0x10(%ebx)
0x07fb9e28:  mov    %eax,%esi
0x07fb9e2a:  mov    %edx,%edi
0x07fb9e2c:  shrd   $0xb,%edi,%esi
0x07fb9e30:  shr    $0xb,%edi
0x07fb9e33:  mov    %esi,0x4(%esp)
0x07fb9e37:  mov    %edi,0x8(%esp)
0x07fb9e3b:  mov    $0xffff,%ecx
0x07fb9e40:  cmp    0x4(%esp),%ecx
0x07fb9e44:  mov    $0x0,%ecx
0x07fb9e49:  sbb    0x8(%esp),%ecx
0x07fb9e4d:  mov    $0x4d,%ebp
0x07fb9e52:  jae    0x7fb9e68

----------------
IN: 
0x07fb9e68:  lea    0x6c(%esp),%eax
0x07fb9e6c:  call   0x7fab8dc

----------------
IN: 
0x07fab8dc:  push   %ebx
0x07fab8dd:  mov    $0xf,%ecx
0x07fab8e2:  movzwl 0xa0(%eax),%edx
0x07fab8e9:  movzbl %cl,%eax
0x07fab8ec:  mov    %edx,%ebx
0x07fab8ee:  sar    %cl,%ebx
0x07fab8f0:  and    $0x1,%bl
0x07fab8f3:  jne    0x7fab8fa

----------------
IN: 
0x07fab8f5:  dec    %ecx
0x07fab8f6:  jne    0x7fab8e9

----------------
IN: 
0x07fab8e9:  movzbl %cl,%eax
0x07fab8ec:  mov    %edx,%ebx
0x07fab8ee:  sar    %cl,%ebx
0x07fab8f0:  and    $0x1,%bl
0x07fab8f3:  jne    0x7fab8fa

----------------
IN: 
0x07fab8fa:  pop    %ebx
0x07fab8fb:  ret    

----------------
IN: 
0x07fb9e71:  mov    %eax,%edi
0x07fb9e73:  lea    0x6c(%esp),%edx
0x07fb9e77:  lea    0x17(%esp),%eax
0x07fb9e7b:  call   0x7facb29

----------------
IN: 
0x07facb29:  push   %ebx
0x07facb2a:  mov    %eax,%ebx
0x07facb2c:  xor    %eax,%eax
0x07facb2e:  mov    0x36(%edx,%eax,2),%cx
0x07facb33:  xchg   %ch,%cl
0x07facb35:  mov    %cx,(%ebx,%eax,2)
0x07facb39:  inc    %eax
0x07facb3a:  cmp    $0x14,%eax
0x07facb3d:  jne    0x7facb2e

----------------
IN: 
0x07facb2e:  mov    0x36(%edx,%eax,2),%cx
0x07facb33:  xchg   %ch,%cl
0x07facb35:  mov    %cx,(%ebx,%eax,2)
0x07facb39:  inc    %eax
0x07facb3a:  cmp    $0x14,%eax
0x07facb3d:  jne    0x7facb2e

----------------
IN: 
0x07facb3f:  movb   $0x0,0x28(%ebx)
0x07facb43:  mov    %ebx,%eax
0x07facb45:  call   0x7fab6d1

----------------
IN: 
0x07fab6d1:  push   %ebx
0x07fab6d2:  mov    %eax,%ebx
0x07fab6d4:  call   0xe9960

----------------
IN: 
0x07fab6d9:  lea    -0x1(%ebx,%eax,1),%eax
0x07fab6dd:  cmp    %ebx,%eax
0x07fab6df:  jb     0x7fab6f2

----------------
IN: 
0x07fab6e1:  cmpb   $0x20,(%eax)
0x07fab6e4:  jg     0x7fab6f2

----------------
IN: 
0x07fab6e6:  dec    %eax
0x07fab6e7:  movb   $0x0,0x1(%eax)
0x07fab6eb:  jmp    0x7fab6dd

----------------
IN: 
0x07fab6dd:  cmp    %ebx,%eax
0x07fab6df:  jb     0x7fab6f2

----------------
IN: 
0x07fab6f2:  mov    (%ebx),%al
0x07fab6f4:  cmp    $0x20,%al
0x07fab6f6:  jle    0x7fab6ed

----------------
IN: 
0x07fab6f8:  mov    %ebx,%eax
0x07fab6fa:  pop    %ebx
0x07fab6fb:  ret    

----------------
IN: 
0x07facb4a:  mov    %ebx,%eax
0x07facb4c:  pop    %ebx
0x07facb4d:  ret    

----------------
IN: 
0x07fb9e80:  mov    %ebp,%ecx
0x07fb9e82:  movsbl %cl,%ebp
0x07fb9e85:  push   %ebp
0x07fb9e86:  pushl  0x8(%esp)
0x07fb9e8a:  push   %edi
0x07fb9e8b:  push   %eax
0x07fb9e8c:  movzbl 0x28(%ebx),%eax
0x07fb9e90:  push   %eax
0x07fb9e91:  mov    0x24(%ebx),%eax
0x07fb9e94:  movzbl 0x8(%eax),%eax
0x07fb9e98:  push   %eax
0x07fb9e99:  push   $0xf38cb
0x07fb9e9e:  push   $0x50
0x07fb9ea0:  call   0x7fb3cc8

----------------
IN: 
0x000ebe0d:  mov    0x0(%ebp),%eax
0x000ebe10:  test   %dl,%dl
0x000ebe12:  jne    0xebe19

----------------
IN: 
0x000ebe14:  add    $0x4,%ebp
0x000ebe17:  jmp    0xebe1c

----------------
IN: 
0x000ebe1c:  mov    %eax,%edx
0x000ebe1e:  mov    %ebx,%eax
0x000ebe20:  call   0xe9808

----------------
IN: 
0x07fb9ea5:  mov    %eax,%esi
0x07fb9ea7:  add    $0x20,%esp
0x07fb9eaa:  push   %eax
0x07fb9eab:  push   $0xf38c7
0x07fb9eb0:  call   0xec4d8

----------------
IN: 
0x07fb9eb5:  mov    0x24(%ebx),%eax
0x07fb9eb8:  movzbl 0x28(%ebx),%ecx
0x07fb9ebc:  movzbl 0x7(%eax),%edx
0x07fb9ec0:  mov    0x10(%eax),%eax
0x07fb9ec3:  call   0x7fb3b5c

----------------
IN: 
0x07fb3b5c:  test   %eax,%eax
0x07fb3b5e:  je     0x7fb3ba3

----------------
IN: 
0x07fb3b60:  push   %esi
0x07fb3b61:  push   %ebx
0x07fb3b62:  sub    $0x100,%esp
0x07fb3b68:  mov    %edx,%ebx
0x07fb3b6a:  mov    %ecx,%esi
0x07fb3b6c:  mov    %eax,%ecx
0x07fb3b6e:  mov    $0xf1834,%edx
0x07fb3b73:  mov    %esp,%eax
0x07fb3b75:  call   0x7fb3960

----------------
IN: 
0x07fb39f4:  push   %edx
0x07fb39f5:  push   $0xf17fb
0x07fb39fa:  sub    %ebx,%esi
0x07fb39fc:  push   %esi
0x07fb39fd:  push   %ebx
0x07fb39fe:  call   0x7fb244c

----------------
IN: 
0x07fb3a03:  add    %eax,%ebx
0x07fb3a05:  add    $0x10,%esp
0x07fb3a08:  mov    %ebx,%eax
0x07fb3a0a:  pop    %edx
0x07fb3a0b:  pop    %ebx
0x07fb3a0c:  pop    %esi
0x07fb3a0d:  pop    %edi
0x07fb3a0e:  pop    %ebp
0x07fb3a0f:  ret    

----------------
IN: 
0x07fb3b7a:  push   %esi
0x07fb3b7b:  push   %ebx
0x07fb3b7c:  push   $0xf1836
0x07fb3b81:  lea    0x10c(%esp),%edx
0x07fb3b88:  sub    %eax,%edx
0x07fb3b8a:  push   %edx
0x07fb3b8b:  push   %eax
0x07fb3b8c:  call   0x7fb244c

----------------
IN: 
0x07fb3b91:  lea    0x14(%esp),%eax
0x07fb3b95:  call   0x7faf3d9

----------------
IN: 
0x07fb3b9a:  add    $0x114,%esp
0x07fb3ba0:  pop    %ebx
0x07fb3ba1:  pop    %esi
0x07fb3ba2:  ret    

----------------
IN: 
0x07fb9ec8:  mov    %eax,%edi
0x07fb9eca:  mov    0x24(%ebx),%eax
0x07fb9ecd:  movzbl 0x28(%ebx),%ecx
0x07fb9ed1:  movzbl 0x7(%eax),%edx
0x07fb9ed5:  mov    0x10(%eax),%eax
0x07fb9ed8:  lea    0x2(%ebx),%ebp
0x07fb9edb:  push   %ebp
0x07fb9edc:  call   0x7fb3c5d

----------------
IN: 
0x07fb3c5d:  push   %edi
0x07fb3c5e:  push   %esi
0x07fb3c5f:  push   %ebx
0x07fb3c60:  sub    $0x100,%esp
0x07fb3c66:  mov    0x110(%esp),%ebx
0x07fb3c6d:  test   %eax,%eax
0x07fb3c6f:  je     0x7fb3cbe

----------------
IN: 
0x07fb3c71:  mov    %edx,%esi
0x07fb3c73:  mov    %ecx,%edi
0x07fb3c75:  mov    %eax,%ecx
0x07fb3c77:  mov    $0xf1834,%edx
0x07fb3c7c:  mov    %esp,%eax
0x07fb3c7e:  call   0x7fb3960

----------------
IN: 
0x07fb3c83:  push   %edi
0x07fb3c84:  push   %esi
0x07fb3c85:  push   $0xf1836
0x07fb3c8a:  lea    0x10c(%esp),%edx
0x07fb3c91:  sub    %eax,%edx
0x07fb3c93:  push   %edx
0x07fb3c94:  push   %eax
0x07fb3c95:  call   0x7fb244c

----------------
IN: 
0x07fb3c9a:  lea    0x14(%esp),%eax
0x07fb3c9e:  call   0x7faf390

----------------
IN: 
0x07faf390:  push   %ebp
0x07faf391:  push   %edi
0x07faf392:  push   %esi
0x07faf393:  push   %ebx
0x07faf394:  push   %ecx
0x07faf395:  mov    %eax,%esi
0x07faf397:  push   %eax
0x07faf398:  push   $0xf06cd
0x07faf39d:  call   0xec4d8

----------------
IN: 
0x07faf3a2:  mov    0x7fbff34,%eax
0x07faf3a7:  mov    %eax,0x8(%esp)
0x07faf3ab:  mov    0x7fbfe58,%ebx
0x07faf3b1:  pop    %edi
0x07faf3b2:  pop    %ebp
0x07faf3b3:  xor    %edi,%edi
0x07faf3b5:  cmp    %edi,(%esp)
0x07faf3b8:  jle    0x7faf3cf

----------------
IN: 
0x07faf3cf:  xor    %ebp,%ebp
0x07faf3d1:  mov    %ebp,%eax
0x07faf3d3:  pop    %edx
0x07faf3d4:  pop    %ebx
0x07faf3d5:  pop    %esi
0x07faf3d6:  pop    %edi
0x07faf3d7:  pop    %ebp
0x07faf3d8:  ret    

----------------
IN: 
0x07fb3ca3:  add    $0x14,%esp
0x07fb3ca6:  test   %eax,%eax
0x07fb3ca8:  je     0x7fb3cbe

----------------
IN: 
0x07fb3cbe:  add    $0x100,%esp
0x07fb3cc4:  pop    %ebx
0x07fb3cc5:  pop    %esi
0x07fb3cc6:  pop    %edi
0x07fb3cc7:  ret    

----------------
IN: 
0x07fb9ee1:  mov    %edi,%ecx
0x07fb9ee3:  mov    %esi,%edx
0x07fb9ee5:  mov    %ebx,%eax
0x07fb9ee7:  call   0x7fae2e0

----------------
IN: 
0x07fae2e0:  push   %ebx
0x07fae2e1:  mov    0x7fbfe48,%ebx
0x07fae2e7:  test   %ecx,%ecx
0x07fae2e9:  js     0x7fae2ed

----------------
IN: 
0x07fae2ed:  push   %edx
0x07fae2ee:  mov    %eax,%ecx
0x07fae2f0:  mov    %ebx,%edx
0x07fae2f2:  mov    $0x2,%eax
0x07fae2f7:  call   0x7fae248

----------------
IN: 
0x07fae2ae:  cmp    %edi,-0x8(%edx)
0x07fae2b1:  jg     0x7fae29e

----------------
IN: 
0x07fae2fc:  pop    %eax
0x07fae2fd:  pop    %ebx
0x07fae2fe:  ret    

----------------
IN: 
0x07fb9eec:  add    $0xc,%esp
0x07fb9eef:  mov    0x126(%esp),%ax
0x07fb9ef7:  mov    $0x1,%esi
0x07fb9efc:  cmpb   $0x0,0x3(%esp)
0x07fb9f01:  jne    0x7fb9f0d

----------------
IN: 
0x07fb9f03:  and    $0xdf61,%ax
0x07fb9f07:  cmp    $0x4041,%ax
0x07fb9f0b:  jmp    0x7fb9f12

----------------
IN: 
0x07fb9f12:  je     0x7fb9f1e

----------------
IN: 
0x07fb9f14:  movb   $0x1,0x3(%esp)
0x07fb9f19:  jmp    0x7fb9b32

----------------
IN: 
0x07fb9b32:  mov    0xc(%esp),%eax
0x07fb9b36:  movzwl (%eax),%eax
0x07fb9b39:  mov    %eax,%ebp
0x07fb9b3b:  mov    %eax,0x10(%esp)
0x07fb9b3f:  call   0x7faecf2

----------------
IN: 
0x07fb9c9e:  mov    $0xa1,%ecx
0x07fb9ca3:  lea    0x6c(%esp),%edx
0x07fb9ca7:  lea    0x40(%esp),%eax
0x07fb9cab:  call   0x7faec4c

----------------
IN: 
0x07fb9dbf:  mov    $0x1,%esi
0x07fb9dc4:  jmp    0x7fb9f0d

----------------
IN: 
0x07fb9f0d:  cmpb   $0x1,0x3(%esp)
0x07fb9f12:  je     0x7fb9f1e

----------------
IN: 
0x07fb9f1e:  add    $0x26c,%esp
0x07fb9f24:  pop    %ebx
0x07fb9f25:  pop    %esi
0x07fb9f26:  pop    %edi
0x07fb9f27:  pop    %ebp
0x07fb9f28:  ret    

----------------
IN: 
0x07fae059:  mov    %ebx,%eax
0x07fae05b:  mov    0x4(%ebx),%ebx
0x07fae05e:  mov    0xf6168,%esp
0x07fae064:  call   0x7fadbdc

----------------
IN: 
0x07fadbdc:  mov    %eax,%ecx
0x07fadbde:  lea    0x4(%eax),%eax
0x07fadbe1:  call   0x7fab660

----------------
IN: 
0x07fadbe6:  mov    %ecx,%eax
0x07fadbe8:  call   0x7fadb56

----------------
IN: 
0x07fadbed:  cmpl   $0xf616c,0xf616c
0x07fadbf7:  jne    0x7fadc04

----------------
IN: 
0x07fadc04:  ret    

----------------
IN: 
0x07fae069:  mov    -0x4(%ebx),%esp
0x07fae06c:  pop    %ebp
0x07fae06d:  ret    

----------------
IN: 
0x07fb1e33:  mov    $0xc8,%edx
0x07fb1e38:  call   0x7fb1d6e

----------------
IN: 
0x07fb1e3d:  mov    %eax,%ebx
0x07fb1e3f:  test   %eax,%eax
0x07fb1e41:  jne    0x7fb1e89

----------------
IN: 
0x07fb1e43:  mov    %esi,%ebp
0x07fb1e45:  sar    $0xc,%ebp
0x07fb1e48:  xor    %edx,%edx
0x07fb1e4a:  cmp    %edx,%ebp
0x07fb1e4c:  jle    0x7fb1e66

----------------
IN: 
0x07fb1e66:  sar    $0x8,%esi
0x07fb1e69:  and    $0xf,%esi
0x07fb1e6c:  add    %edi,%esi
0x07fb1e6e:  cmp    %esi,%edi
0x07fb1e70:  je     0x7fb1e89

----------------
IN: 
0x07fb1fb8:  test   %eax,%eax
0x07fb1fba:  jne    0x7fb1ff5

----------------
IN: 
0x07fb1fbc:  movb   $0x2,0x2(%esp)
0x07fb1fc1:  lea    0x2(%esp),%edx
0x07fb1fc5:  mov    $0x10f0,%eax
0x07fb1fca:  call   0x7fb1da3

Servicing hardware INT=0x08
----------------
IN: 
0x07fb21b5:  pop    %eax
0x07fb21b6:  pop    %edx
0x07fb21b7:  pop    %ebx
0x07fb21b8:  pop    %esi
0x07fb21b9:  pop    %edi
0x07fb21ba:  pop    %ebp
0x07fb21bb:  ret    

----------------
IN: 
0x07fb8cd1:  movb   $0xc0,0x476
0x07fb8cd8:  mov    $0xfd41c,%edx
0x07fb8cdd:  movzwl %dx,%edx
0x07fb8ce0:  or     $0xf0000000,%edx
0x07fb8ce6:  mov    $0xe,%eax
0x07fb8ceb:  call   0x7fad04c

----------------
IN: 
0x07fb8cf0:  mov    0x7fbfde8,%eax
0x07fb8cf5:  lea    -0x4(%eax),%edi
0x07fb8cf8:  cmp    $0xfffffffc,%edi
0x07fb8cfb:  je     0x7fb8ef8

----------------
IN: 
0x07fb8d01:  cmpw   $0x106,0x14(%edi)
0x07fb8d07:  jne    0x7fb8eed

----------------
IN: 
0x07fb8eed:  mov    0x4(%edi),%edi
0x07fb8ef0:  sub    $0x4,%edi
0x07fb8ef3:  jmp    0x7fb8cf8

----------------
IN: 
0x07fb8cf8:  cmp    $0xfffffffc,%edi
0x07fb8cfb:  je     0x7fb8ef8

----------------
IN: 
0x07fb8ef8:  xor    %ebx,%ebx
0x07fb8efa:  mov    %ebp,%edx
0x07fb8efc:  mov    $0xf35f1,%eax
0x07fb8f01:  call   0x7faba53

----------------
IN: 
0x07fb8f06:  mov    %eax,%ebp
0x07fb8f08:  test   %eax,%eax
0x07fb8f0a:  je     0x7fb8f1b

----------------
IN: 
0x07fb8f1b:  test   %ebx,%ebx
0x07fb8f1d:  je     0x7fb8f47

----------------
IN: 
0x07fb8f47:  mov    0x7fbfde8,%eax
0x07fb8f4c:  lea    -0x4(%eax),%ebx
0x07fb8f4f:  cmp    $0xfffffffc,%ebx
0x07fb8f52:  je     0x7fb8f1f

----------------
IN: 
0x07fb8f54:  cmpw   $0x805,0x14(%ebx)
0x07fb8f5a:  jne    0x7fb8f6e

----------------
IN: 
0x07fb8f6e:  mov    0x4(%ebx),%ebx
0x07fb8f71:  sub    $0x4,%ebx
0x07fb8f74:  jmp    0x7fb8f4f

----------------
IN: 
0x07fb8f4f:  cmp    $0xfffffffc,%ebx
0x07fb8f52:  je     0x7fb8f1f

----------------
IN: 
0x07fb8f1f:  xor    %edx,%edx
0x07fb8f21:  mov    $0xf35fc,%eax
0x07fb8f26:  call   0x7faba53

----------------
IN: 
0x07fb8f2b:  mov    %eax,%ebx
0x07fb8f2d:  test   %eax,%eax
0x07fb8f2f:  je     0x7fb8fc2

----------------
IN: 
0x07fb8fc2:  call   0x7faf41a

----------------
IN: 
0x07faf41a:  cmpl   $0xfffffffe,0x7fbfbec
0x07faf421:  jne    0x7faf432

----------------
IN: 
0x07faf423:  mov    $0xf070b,%eax
0x07faf428:  call   0x7faf3d9

----------------
IN: 
0x07faf42d:  mov    %eax,0x7fbfbec
0x07faf432:  mov    0x7fbfbec,%eax
0x07faf437:  not    %eax
0x07faf439:  shr    $0x1f,%eax
0x07faf43c:  ret    

----------------
IN: 
0x07fb8fc7:  mov    %eax,%esi
0x07fb8fc9:  mov    0x7fbfde8,%eax
0x07fb8fce:  lea    -0x4(%eax),%ebx
0x07fb8fd1:  cmp    $0xfffffffc,%ebx
0x07fb8fd4:  je     0x7fb9022

----------------
IN: 
0x07fb8fd6:  cmpw   $0x1af4,0x10(%ebx)
0x07fb8fdc:  jne    0x7fb901a

----------------
IN: 
0x07fb901a:  mov    0x4(%ebx),%ebx
0x07fb901d:  sub    $0x4,%ebx
0x07fb9020:  jmp    0x7fb8fd1

----------------
IN: 
0x07fb8fd1:  cmp    $0xfffffffc,%ebx
0x07fb8fd4:  je     0x7fb9022

----------------
IN: 
0x07fb9022:  call   0x7faf41a

----------------
IN: 
0x07faf432:  mov    0x7fbfbec,%eax
0x07faf437:  not    %eax
0x07faf439:  shr    $0x1f,%eax
0x07faf43c:  ret    

----------------
IN: 
0x07fb9027:  mov    %eax,%esi
0x07fb9029:  mov    0x7fbfde8,%eax
0x07fb902e:  lea    -0x4(%eax),%ebx
0x07fb9031:  cmp    $0xfffffffc,%ebx
0x07fb9034:  je     0x7fb9082

----------------
IN: 
0x07fb9036:  cmpw   $0x1af4,0x10(%ebx)
0x07fb903c:  jne    0x7fb907a

----------------
IN: 
0x07fb907a:  mov    0x4(%ebx),%ebx
0x07fb907d:  sub    $0x4,%ebx
0x07fb9080:  jmp    0x7fb9031

----------------
IN: 
0x07fb9031:  cmp    $0xfffffffc,%ebx
0x07fb9034:  je     0x7fb9082

----------------
IN: 
0x07fb9082:  mov    0x7fbfde8,%eax
0x07fb9087:  lea    -0x4(%eax),%ebx
0x07fb908a:  cmp    $0xfffffffc,%ebx
0x07fb908d:  je     0x7fb90ac

----------------
IN: 
0x07fb908f:  cmpl   $0x121000,0x10(%ebx)
0x07fb9096:  jne    0x7fb90a4

----------------
IN: 
0x07fb90a4:  mov    0x4(%ebx),%ebx
0x07fb90a7:  sub    $0x4,%ebx
0x07fb90aa:  jmp    0x7fb908a

----------------
IN: 
0x07fb908a:  cmp    $0xfffffffc,%ebx
0x07fb908d:  je     0x7fb90ac

----------------
IN: 
0x07fb90ac:  mov    0x7fbfde8,%eax
0x07fb90b1:  lea    -0x4(%eax),%ebx
0x07fb90b4:  cmp    $0xfffffffc,%ebx
0x07fb90b7:  je     0x7fb90d6

----------------
IN: 
0x07fb90b9:  cmpl   $0x20201022,0x10(%ebx)
0x07fb90c0:  jne    0x7fb90ce

----------------
IN: 
0x07fb90ce:  mov    0x4(%ebx),%ebx
0x07fb90d1:  sub    $0x4,%ebx
0x07fb90d4:  jmp    0x7fb90b4

----------------
IN: 
0x07fb90b4:  cmp    $0xfffffffc,%ebx
0x07fb90b7:  je     0x7fb90d6

----------------
IN: 
0x07fb90d6:  mov    0x7fbfde8,%eax
0x07fb90db:  lea    -0x4(%eax),%ebx
0x07fb90de:  cmp    $0xfffffffc,%ebx
0x07fb90e1:  je     0x7fb9143

----------------
IN: 
0x07fb90e3:  mov    0x10(%ebx),%eax
0x07fb90e6:  cmp    $0x1028,%ax
0x07fb90ea:  je     0x7fb90f2

----------------
IN: 
0x07fb90ec:  cmp    $0x1000,%ax
0x07fb90f0:  jne    0x7fb913b

----------------
IN: 
0x07fb913b:  mov    0x4(%ebx),%ebx
0x07fb913e:  sub    $0x4,%ebx
0x07fb9141:  jmp    0x7fb90de

----------------
IN: 
0x07fb90de:  cmp    $0xfffffffc,%ebx
0x07fb90e1:  je     0x7fb9143

----------------
IN: 
0x07fb9143:  mov    0x7fbfde8,%eax
0x07fb9148:  lea    -0x4(%eax),%ebx
0x07fb914b:  cmp    $0xfffffffc,%ebx
0x07fb914e:  je     0x7fb916d

----------------
IN: 
0x07fb9150:  cmpl   $0x7c015ad,0x10(%ebx)
0x07fb9157:  jne    0x7fb9165

----------------
IN: 
0x07fb9165:  mov    0x4(%ebx),%ebx
0x07fb9168:  sub    $0x4,%ebx
0x07fb916b:  jmp    0x7fb914b

----------------
IN: 
0x07fb914b:  cmp    $0xfffffffc,%ebx
0x07fb914e:  je     0x7fb916d

----------------
IN: 
0x07fb916d:  mov    0x7fbfde8,%eax
0x07fb9172:  lea    -0x4(%eax),%ebx
0x07fb9175:  cmp    $0xfffffffc,%ebx
0x07fb9178:  je     0x7fb91aa

----------------
IN: 
0x07fb917a:  cmpw   $0x1000,0x10(%ebx)
0x07fb9180:  jne    0x7fb91a2

----------------
IN: 
0x07fb91a2:  mov    0x4(%ebx),%ebx
0x07fb91a5:  sub    $0x4,%ebx
0x07fb91a8:  jmp    0x7fb9175

----------------
IN: 
0x07fb9175:  cmp    $0xfffffffc,%ebx
0x07fb9178:  je     0x7fb91aa

----------------
IN: 
0x07fb91aa:  mov    0x7fbfde8,%eax
0x07fb91af:  lea    -0x4(%eax),%ebx
0x07fb91b2:  cmp    $0xfffffffc,%ebx
0x07fb91b5:  je     0x7fb91d9

----------------
IN: 
0x07fb91b7:  cmpw   $0x108,0x14(%ebx)
0x07fb91bd:  jne    0x7fb91d1

----------------
IN: 
0x07fb91d1:  mov    0x4(%ebx),%ebx
0x07fb91d4:  sub    $0x4,%ebx
0x07fb91d7:  jmp    0x7fb91b2

----------------
IN: 
0x07fb91b2:  cmp    $0xfffffffc,%ebx
0x07fb91b5:  je     0x7fb91d9

----------------
IN: 
0x07fb91d9:  mov    $0x37a,%edx
0x07fb91de:  in     (%dx),%al
0x07fb91df:  and    $0xffffffdf,%eax
0x07fb91e2:  out    %al,(%dx)
0x07fb91e3:  mov    $0x378,%edx
0x07fb91e8:  mov    $0xaa,%al
0x07fb91ea:  out    %al,(%dx)
0x07fb91eb:  in     (%dx),%al
0x07fb91ec:  xor    %ecx,%ecx
0x07fb91ee:  cmp    $0xaa,%al
0x07fb91f0:  jne    0x7fb9207

----------------
IN: 
0x07fb91f2:  movw   $0x378,0x408
0x07fb91fb:  movb   $0x14,0x478
0x07fb9202:  mov    $0x1,%ecx
0x07fb9207:  mov    $0x27a,%edx
0x07fb920c:  in     (%dx),%al
0x07fb920d:  and    $0xffffffdf,%eax
0x07fb9210:  out    %al,(%dx)
0x07fb9211:  mov    $0x278,%edx
0x07fb9216:  mov    $0xaa,%al
0x07fb9218:  out    %al,(%dx)
0x07fb9219:  in     (%dx),%al
0x07fb921a:  xor    %ebx,%ebx
0x07fb921c:  cmp    $0xaa,%al
0x07fb921e:  jne    0x7fb9239

----------------
IN: 
0x07fb9239:  add    %ecx,%ebx
0x07fb923b:  movzwl %bx,%eax
0x07fb923e:  push   %eax
0x07fb923f:  push   $0xf3699
0x07fb9244:  call   0xec4d8

----------------
IN: 
0x07fb9249:  mov    0x410,%eax
0x07fb924e:  and    $0x3fff,%ax
0x07fb9252:  shl    $0xe,%ebx
0x07fb9255:  or     %ebx,%eax
0x07fb9257:  mov    %ax,0x410
0x07fb925d:  xor    %edx,%edx
0x07fb925f:  mov    $0x3f8,%eax
0x07fb9264:  call   0x7facf36

----------------
IN: 
0x07facf36:  push   %esi
0x07facf37:  push   %ebx
0x07facf38:  mov    %eax,%ebx
0x07facf3a:  mov    %edx,%ecx
0x07facf3c:  lea    0x1(%eax),%esi
0x07facf3f:  mov    $0x2,%al
0x07facf41:  mov    %esi,%edx
0x07facf43:  out    %al,(%dx)
0x07facf44:  in     (%dx),%al
0x07facf45:  cmp    $0x2,%al
0x07facf47:  jne    0x7facf75

----------------
IN: 
0x07facf49:  lea    0x2(%ebx),%edx
0x07facf4c:  in     (%dx),%al
0x07facf4d:  and    $0x3f,%eax
0x07facf50:  mov    %al,%dl
0x07facf52:  xor    %eax,%eax
0x07facf54:  cmp    $0x2,%dl
0x07facf57:  jne    0x7facf77

----------------
IN: 
0x07facf59:  mov    %esi,%edx
0x07facf5b:  out    %al,(%dx)
0x07facf5c:  movzbl %cl,%eax
0x07facf5f:  mov    %bx,0x400(%eax,%eax,1)
0x07facf67:  movb   $0xa,0x47c(%eax)
0x07facf6e:  mov    $0x1,%eax
0x07facf73:  jmp    0x7facf77

----------------
IN: 
0x07facf77:  pop    %ebx
0x07facf78:  pop    %esi
0x07facf79:  ret    

----------------
IN: 
0x07fb9269:  mov    %eax,%ebx
0x07fb926b:  movzbl %al,%edx
0x07fb926e:  mov    $0x2f8,%eax
0x07fb9273:  call   0x7facf36

----------------
IN: 
0x07facf75:  xor    %eax,%eax
0x07facf77:  pop    %ebx
0x07facf78:  pop    %esi
0x07facf79:  ret    

----------------
IN: 
0x07fb9278:  add    %eax,%ebx
0x07fb927a:  movzbl %bl,%edx
0x07fb927d:  mov    $0x3e8,%eax
0x07fb9282:  call   0x7facf36

----------------
IN: 
0x07fb9287:  add    %eax,%ebx
0x07fb9289:  movzbl %bl,%edx
0x07fb928c:  mov    $0x2e8,%eax
0x07fb9291:  call   0x7facf36

----------------
IN: 
0x07fb9296:  add    %eax,%ebx
0x07fb9298:  movzwl %bx,%eax
0x07fb929b:  push   %eax
0x07fb929c:  push   $0xf36ad
0x07fb92a1:  call   0xec4d8

----------------
IN: 
0x07fb92a6:  mov    0x410,%eax
0x07fb92ab:  and    $0xf1,%ah
0x07fb92ae:  shl    $0x9,%ebx
0x07fb92b1:  or     %ebx,%eax
0x07fb92b3:  mov    %ax,0x410
0x07fb92b9:  add    $0x24,%esp
0x07fb92bc:  pop    %ebx
0x07fb92bd:  pop    %esi
0x07fb92be:  pop    %edi
0x07fb92bf:  pop    %ebp
0x07fb92c0:  ret    

----------------
IN: 
0x07fbbea8:  call   0x7fad8b7

----------------
IN: 
0x07fad8b7:  cmpl   $0xf616c,0xf616c
0x07fad8c1:  je     0x7fad8ca

----------------
IN: 
0x07fad8c3:  call   0xec186

----------------
IN: 
0x07fb9cc5:  lea    0x6c(%esp),%edx
0x07fb9cc9:  lea    0x40(%esp),%eax
0x07fb9ccd:  call   0x7fae489

----------------
IN: 
0x07fb9cd2:  mov    %eax,%ebx
0x07fb9cd4:  test   %eax,%eax
0x07fb9cd6:  je     0x7fb9cb4

----------------
IN: 
0x07fb9cd8:  movb   $0x21,(%eax)
0x07fb9cdb:  movw   $0x800,0x1a(%eax)
0x07fb9ce1:  movl   $0xffffffff,0xc(%eax)
0x07fb9ce8:  movl   $0xffffffff,0x10(%eax)
0x07fb9cef:  movzbl 0x6d(%esp),%edi
0x07fb9cf4:  and    $0x1f,%edi
0x07fb9cf7:  mov    $0xf3897,%ebp
0x07fb9cfc:  cmp    $0x5,%di
0x07fb9d00:  je     0x7fb9d07

----------------
IN: 
0x07fb9d07:  lea    0x6c(%esp),%eax
0x07fb9d0b:  call   0x7fab8dc

----------------
IN: 
0x07fb9d10:  mov    %eax,%esi
0x07fb9d12:  lea    0x6c(%esp),%edx
0x07fb9d16:  lea    0x17(%esp),%eax
0x07fb9d1a:  call   0x7facb29

----------------
IN: 
0x07fb9d1f:  push   %ebp
0x07fb9d20:  push   %esi
0x07fb9d21:  push   %eax
0x07fb9d22:  movzbl 0x28(%ebx),%eax
0x07fb9d26:  push   %eax
0x07fb9d27:  mov    0x24(%ebx),%eax
0x07fb9d2a:  movzbl 0x8(%eax),%eax
0x07fb9d2e:  push   %eax
0x07fb9d2f:  push   $0xf38a5
0x07fb9d34:  push   $0x50
0x07fb9d36:  call   0x7fb3cc8

----------------
IN: 
0x07fb9d3b:  mov    %eax,%esi
0x07fb9d3d:  push   %eax
0x07fb9d3e:  push   $0xf38c7
0x07fb9d43:  call   0xec4d8

----------------
IN: 
0x07fb9d48:  add    $0x24,%esp
0x07fb9d4b:  cmp    $0x5,%di
0x07fb9d4f:  jne    0x7fb9eef

----------------
IN: 
0x07fb9d55:  mov    0x24(%ebx),%eax
0x07fb9d58:  movzbl 0x28(%ebx),%ecx
0x07fb9d5c:  movzbl 0x7(%eax),%edx
0x07fb9d60:  mov    0x10(%eax),%eax
0x07fb9d63:  call   0x7fb3b5c

----------------
IN: 
0x07fb9d68:  mov    %eax,%edi
0x07fb9d6a:  mov    0x24(%ebx),%eax
0x07fb9d6d:  movzbl 0x28(%ebx),%ecx
0x07fb9d71:  movzbl 0x7(%eax),%edx
0x07fb9d75:  mov    0x10(%eax),%eax
0x07fb9d78:  lea    0x2(%ebx),%ebp
0x07fb9d7b:  push   %ebp
0x07fb9d7c:  call   0x7fb3c5d

----------------
IN: 
0x07fb9d81:  mov    %edi,%ecx
0x07fb9d83:  mov    %esi,%edx
0x07fb9d85:  mov    %ebx,%eax
0x07fb9d87:  call   0x7fb9aae

----------------
IN: 
0x07fb9aae:  push   %ebp
0x07fb9aaf:  push   %edi
0x07fb9ab0:  push   %esi
0x07fb9ab1:  push   %ebx
0x07fb9ab2:  mov    %eax,%edi
0x07fb9ab4:  mov    %edx,%ebx
0x07fb9ab6:  mov    %ecx,%ebp
0x07fb9ab8:  testb  $0x1,0xf5d00
0x07fb9abf:  je     0x7fb9ae6

----------------
IN: 
0x07fb9ac1:  call   0x7fb99ed

----------------
IN: 
0x07fb99ed:  push   %ebx
0x07fb99ee:  sub    $0x814,%esp
0x07fb99f4:  mov    %eax,%ebx
0x07fb99f6:  mov    $0x14,%ecx
0x07fb99fb:  xor    %edx,%edx
0x07fb99fd:  mov    %esp,%eax
0x07fb99ff:  call   0xeab7b

----------------
IN: 
0x07fb9a04:  mov    %ebx,0x4(%esp)
0x07fb9a08:  call   0xef330

----------------
IN: 
0x000ef330:  push   %ebp
0x000ef331:  push   %edi
0x000ef332:  push   %esi
0x000ef333:  push   %ebx
0x000ef334:  sub    $0x28,%esp
0x000ef337:  mov    %eax,%ebx
0x000ef339:  mov    $0x1388,%eax
0x000ef33e:  call   0xebc88

----------------
IN: 
0x000ef343:  mov    %eax,%esi
0x000ef345:  movl   $0x0,(%esp)
0x000ef34c:  mov    $0x3,%edi
0x000ef351:  mov    %esi,%eax
0x000ef353:  call   0xebcdf

----------------
IN: 
0x000ef358:  test   %eax,%eax
0x000ef35a:  je     0xef36c

----------------
IN: 
0x000ef36c:  lea    0x16(%esp),%ebp
0x000ef370:  mov    $0x10,%ecx
0x000ef375:  xor    %edx,%edx
0x000ef377:  mov    %ebp,%eax
0x000ef379:  call   0xeab7b

----------------
IN: 
0x000ef37e:  movb   $0x0,0x16(%esp)
0x000ef383:  movb   $0x20,0x8(%ebx)
0x000ef387:  movl   $0x0,(%ebx)
0x000ef38d:  mov    %ebp,0x10(%ebx)
0x000ef390:  movl   $0x0,0xa(%ebx)
0x000ef397:  mov    %ebx,%eax
0x000ef399:  call   0xef2ee

----------------
IN: 
0x000ef2ee:  push   %esi
0x000ef2ef:  push   %ebx
0x000ef2f0:  mov    %eax,%ebx
0x000ef2f2:  movzwl 0xa(%eax),%esi
0x000ef2f6:  mov    0x4(%eax),%eax
0x000ef2f9:  movzwl 0x1a(%eax),%eax
0x000ef2fd:  imul   %esi,%eax
0x000ef300:  cmp    $0x10000,%eax
0x000ef305:  jle    0xef314

----------------
IN: 
0x000ef314:  mov    %ebx,%eax
0x000ef316:  call   0xee6cd

----------------
IN: 
0x000ee6cd:  push   %ebp
0x000ee6ce:  push   %edi
0x000ee6cf:  push   %esi
0x000ee6d0:  push   %ebx
0x000ee6d1:  sub    $0xe0,%esp
0x000ee6d7:  mov    %eax,(%esp)
0x000ee6da:  mov    0x4(%eax),%ebp
0x000ee6dd:  mov    0x0(%ebp),%al
0x000ee6e0:  cmp    $0x71,%al
0x000ee6e2:  je     0xee873

----------------
IN: 
0x000ee6e8:  ja     0xee70e

----------------
IN: 
0x000ee6ea:  cmp    $0x60,%al
0x000ee6ec:  je     0xee89f

----------------
IN: 
0x000ee6f2:  ja     0xee705

----------------
IN: 
0x000ee6f4:  cmp    $0x50,%al
0x000ee6f6:  je     0xee767

----------------
IN: 
0x000ee6f8:  cmp    $0x51,%al
0x000ee6fa:  je     0xee794

----------------
IN: 
0x000ee700:  jmp    0xeecc1

----------------
IN: 
0x000eecc1:  cmp    $0x21,%al
0x000eecc3:  je     0xeece9

----------------
IN: 
0x000eece9:  mov    (%esp),%eax
0x000eecec:  mov    0x8(%eax),%bl
0x000eecef:  lea    -0x3(%ebx),%eax
0x000eecf2:  test   $0xfd,%al
0x000eecf4:  je     0xef25d

----------------
IN: 
0x000eecfa:  mov    $0xc,%ecx
0x000eecff:  lea    0x41(%esp),%edx
0x000eed03:  mov    (%esp),%eax
0x000eed06:  call   0xeadb8

----------------
IN: 
0x000eadb8:  push   %ebp
0x000eadb9:  push   %edi
0x000eadba:  push   %esi
0x000eadbb:  push   %ebx
0x000eadbc:  mov    %eax,%ebx
0x000eadbe:  mov    %edx,%ebp
0x000eadc0:  mov    0x8(%eax),%al
0x000eadc3:  cmp    $0x3,%al
0x000eadc5:  ja     0xeadcd

----------------
IN: 
0x000eadcd:  cmp    $0x20,%al
0x000eadcf:  je     0xeae0b

----------------
IN: 
0x000eae0b:  mov    0x10(%ebx),%esi
0x000eae0e:  mov    %edx,%edi
0x000eae10:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000eae10:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000eae12:  movzwl 0xc(%ebx),%eax
0x000eae16:  pop    %ebx
0x000eae17:  pop    %esi
0x000eae18:  pop    %edi
0x000eae19:  pop    %ebp
0x000eae1a:  ret    

----------------
IN: 
0x000eed0b:  mov    %eax,%edi
0x000eed0d:  mov    %bl,%al
0x000eed0f:  test   %edi,%edi
0x000eed11:  js     0xef11a

----------------
IN: 
0x000eed17:  mov    0x24(%ebp),%eax
0x000eed1a:  mov    (%eax),%si
0x000eed1d:  mov    %si,0x8(%esp)
0x000eed22:  mov    0x2(%eax),%si
0x000eed26:  mov    $0xc,%ecx
0x000eed2b:  xor    %edx,%edx
0x000eed2d:  lea    0x74(%esp),%eax
0x000eed31:  call   0xeab7b

----------------
IN: 
0x000eed36:  mov    %di,0x77(%esp)
0x000eed3b:  movb   $0xa0,0x7a(%esp)
0x000eed40:  lea    0x2(%esi),%eax
0x000eed43:  mov    %ax,0x4(%esp)
0x000eed48:  mov    $0xa,%al
0x000eed4a:  mov    0x4(%esp),%edx
0x000eed4e:  out    %al,(%dx)
0x000eed4f:  lea    0x74(%esp),%edx
0x000eed53:  mov    %ebp,%eax
0x000eed55:  call   0xec7a8

----------------
IN: 
0x000eed5a:  mov    %eax,%ebx
0x000eed5c:  test   %eax,%eax
0x000eed5e:  jne    0xeedce

----------------
IN: 
0x000eed60:  movzwl 0x8(%esp),%ebp
0x000eed65:  mov    %ebp,%eax
0x000eed67:  call   0xec786

----------------
IN: 
0x000eed6c:  mov    %eax,%ebx
0x000eed6e:  test   %eax,%eax
0x000eed70:  jne    0xeedce

----------------
IN: 
0x000eed72:  mov    $0x6,%ecx
0x000eed77:  lea    0x41(%esp),%esi
0x000eed7b:  mov    0x8(%esp),%edx
0x000eed7f:  rep outsw %es:(%esi),(%dx)

----------------
IN: 
0x000eed7f:  rep outsw %es:(%esi),(%dx)

----------------
IN: 
0x000eed83:  mov    0x4(%esp),%edx
0x000eed87:  in     (%dx),%al
0x000eed88:  mov    %ebp,%eax
0x000eed8a:  call   0xec743

----------------
IN: 
0x000eed8f:  mov    %eax,%ebx
0x000eed91:  test   %eax,%eax
0x000eed93:  js     0xeedce

----------------
IN: 
0x000eed95:  test   $0x1,%al
0x000eed97:  je     0xeeda1

----------------
IN: 
0x000eed99:  mov    0x8(%esp),%edx
0x000eed9d:  inc    %edx
0x000eed9e:  in     (%dx),%al
0x000eed9f:  jmp    0xeedb6

----------------
IN: 
0x000eedb6:  mov    $0x8,%al
0x000eedb8:  mov    0x4(%esp),%edx
0x000eedbc:  out    %al,(%dx)
0x000eedbd:  jmp    0xef23d

----------------
IN: 
0x000ef23d:  mov    $0xc,%ebx
0x000ef242:  jmp    0xef2e1

----------------
IN: 
0x000ef2e1:  mov    %ebx,%eax
0x000ef2e3:  add    $0xe0,%esp
0x000ef2e9:  pop    %ebx
0x000ef2ea:  pop    %esi
0x000ef2eb:  pop    %edi
0x000ef2ec:  pop    %ebp
0x000ef2ed:  ret    

----------------
IN: 
0x000ef31b:  test   %eax,%eax
0x000ef31d:  je     0xef32d

----------------
IN: 
0x000ef31f:  movzwl 0xa(%ebx),%edx
0x000ef323:  cmp    %edx,%esi
0x000ef325:  jne    0xef32d

----------------
IN: 
0x000ef327:  movw   $0x0,0xa(%ebx)
0x000ef32d:  pop    %ebx
0x000ef32e:  pop    %esi
0x000ef32f:  ret    

----------------
IN: 
0x000ef39e:  test   %eax,%eax
0x000ef3a0:  je     0xef43e

----------------
IN: 
0x000ef3a6:  lea    0x6(%esp),%eax
0x000ef3aa:  mov    $0x10,%ecx
0x000ef3af:  xor    %edx,%edx
0x000ef3b1:  call   0xeab7b

----------------
IN: 
0x000ef3b6:  movb   $0x3,0x6(%esp)
0x000ef3bb:  movb   $0x12,0xa(%esp)
0x000ef3c0:  movb   $0x20,0x8(%ebx)
0x000ef3c4:  mov    %ebp,(%ebx)
0x000ef3c6:  mov    %eax,0x10(%ebx)
0x000ef3c9:  movl   $0x120001,0xa(%ebx)
0x000ef3d0:  mov    %ebx,%eax
0x000ef3d2:  call   0xef2ee

----------------
IN: 
0x000eeda1:  test   %edi,%edi
0x000eeda3:  jne    0xeedb1

----------------
IN: 
0x000eedb1:  and    $0x8,%bl
0x000eedb4:  jne    0xeedc2

----------------
IN: 
0x000eedc2:  mov    %edi,%edx
0x000eedc4:  mov    (%esp),%eax
0x000eedc7:  call   0xec885

----------------
IN: 
0x000eedcc:  mov    %eax,%ebx
0x000eedce:  mov    $0x8,%al
0x000eedd0:  mov    0x4(%esp),%edx
0x000eedd4:  out    %al,(%dx)
0x000eedd5:  jmp    0xef0ee

----------------
IN: 
0x000ef0ee:  test   %ebx,%ebx
0x000ef0f0:  je     0xef2e1

----------------
IN: 
0x000ef32d:  pop    %ebx
0x000ef32e:  pop    %esi
0x000ef32f:  ret    

----------------
IN: 
0x000ef3d7:  test   %eax,%eax
0x000ef3d9:  jne    0xef351

----------------
IN: 
0x000ef3df:  cmpb   $0x3a,0x22(%esp)
0x000ef3e4:  jne    0xef3f8

----------------
IN: 
0x000ef3e6:  dec    %edi
0x000ef3e7:  push   %edi
0x000ef3e8:  push   $0xf374c
0x000ef3ed:  call   0xec4d8

----------------
IN: 
0x000ef3f2:  pop    %edx
0x000ef3f3:  pop    %ecx
0x000ef3f4:  test   %edi,%edi
0x000ef3f6:  je     0xef43b

----------------
IN: 
0x000ef3f8:  cmpb   $0x4,0x22(%esp)
0x000ef3fd:  jne    0xef351

----------------
IN: 
0x000ef351:  mov    %esi,%eax
0x000ef353:  call   0xebcdf

----------------
IN: 
0x000ef43b:  or     $0xffffffff,%eax
0x000ef43e:  add    $0x28,%esp
0x000ef441:  pop    %ebx
0x000ef442:  pop    %esi
0x000ef443:  pop    %edi
0x000ef444:  pop    %ebp
0x000ef445:  ret    

----------------
IN: 
0x07fb9a0d:  test   %eax,%eax
0x07fb9a0f:  je     0x7fb9a18

----------------
IN: 
0x07fb9a11:  xor    %ebx,%ebx
0x07fb9a13:  jmp    0x7fb9aa4

----------------
IN: 
0x07fb9aa4:  mov    %ebx,%eax
0x07fb9aa6:  add    $0x814,%esp
0x07fb9aac:  pop    %ebx
0x07fb9aad:  ret    

----------------
IN: 
0x07fb9ac6:  mov    %eax,%esi
0x07fb9ac8:  test   %eax,%eax
0x07fb9aca:  je     0x7fb9ae6

----------------
IN: 
0x07fb9ae6:  mov    0x7fbfe4c,%edx
0x07fb9aec:  test   %ebp,%ebp
0x07fb9aee:  js     0x7fb9af2

----------------
IN: 
0x07fb9af2:  push   %ebx
0x07fb9af3:  mov    %edi,%ecx
0x07fb9af5:  mov    $0x3,%eax
0x07fb9afa:  call   0x7fae248

----------------
IN: 
0x07fae2b3:  jl     0x7fae2d9

----------------
IN: 
0x07fae2d9:  mov    %edx,(%esp)
0x07fae2dc:  mov    (%edx),%edx
0x07fae2de:  jmp    0x7fae29a

----------------
IN: 
0x07fae29a:  test   %edx,%edx
0x07fae29c:  jne    0x7fae2ae

----------------
IN: 
0x07fb9aff:  pop    %eax
0x07fb9b00:  pop    %ebx
0x07fb9b01:  pop    %esi
0x07fb9b02:  pop    %edi
0x07fb9b03:  pop    %ebp
0x07fb9b04:  ret    

----------------
IN: 
0x07fb9d8c:  pop    %eax
0x07fb9d8d:  jmp    0x7fb9eef

----------------
IN: 
0x07fb9eef:  mov    0x126(%esp),%ax
0x07fb9ef7:  mov    $0x1,%esi
0x07fb9efc:  cmpb   $0x0,0x3(%esp)
0x07fb9f01:  jne    0x7fb9f0d

----------------
IN: 
0x07fb1e4e:  movzbl (%edi),%eax
0x07fb1e51:  mov    $0xc8,%edx
0x07fb1e56:  call   0x7fb1d6e

----------------
IN: 
0x07fb1e5b:  mov    $0x1,%edx
0x07fb1e60:  test   %eax,%eax
0x07fb1e62:  je     0x7fb1e4a

----------------
IN: 
0x07fb1e4a:  cmp    %edx,%ebp
0x07fb1e4c:  jle    0x7fb1e66

----------------
IN: 
0x07fb1fcf:  test   %eax,%eax
0x07fb1fd1:  jne    0x7fb1ff5

----------------
IN: 
0x07fb1fd3:  movb   $0x61,0xe8f2c
0x07fb1fda:  xor    %edx,%edx
0x07fb1fdc:  mov    $0xf4,%eax
0x07fb1fe1:  call   0x7fb1da3

Servicing hardware INT=0x08
----------------
IN: 
0x07fad8c8:  jmp    0x7fad8b7

----------------
IN: 
0x07fb1fe6:  test   %eax,%eax
0x07fb1fe8:  jne    0x7fb1ff5

----------------
IN: 
0x07fb1fea:  push   $0xf13ec
0x07fb1fef:  call   0xec4d8

----------------
IN: 
0x07fb1ff4:  pop    %edx
0x07fb1ff5:  pop    %eax
0x07fb1ff6:  pop    %ebx
0x07fb1ff7:  pop    %esi
0x07fb1ff8:  ret    

----------------
IN: 
0x07fadbf9:  push   $0xf04cd
0x07fadbfe:  call   0xec4d8

----------------
IN: 
0x07fadc03:  pop    %eax
0x07fadc04:  ret    

Servicing hardware INT=0x08
----------------
IN: 
0x07fad8ca:  ret    

----------------
IN: 
0x07fbbead:  call   0x7fb528c

----------------
IN: 
0x07fb528c:  push   %edi
0x07fb528d:  lea    0x8(%esp),%edi
0x07fb5291:  and    $0xfffffff8,%esp
0x07fb5294:  pushl  -0x4(%edi)
0x07fb5297:  push   %ebp
0x07fb5298:  mov    %esp,%ebp
0x07fb529a:  push   %edi
0x07fb529b:  push   %esi
0x07fb529c:  push   %ebx
0x07fb529d:  sub    $0x314,%esp
0x07fb52a3:  push   $0xf1d1d
0x07fb52a8:  call   0xec4d8

----------------
IN: 
0x07fb52ad:  mov    $0x300,%ecx
0x07fb52b2:  xor    %edx,%edx
0x07fb52b4:  lea    -0x310(%ebp),%eax
0x07fb52ba:  call   0xeab7b

----------------
IN: 
0x07fb52bf:  mov    0x7fbfe60,%esi
0x07fb52c5:  mov    0x7fbfde8,%eax
0x07fb52ca:  lea    -0x4(%eax),%ebx
0x07fb52cd:  pop    %ecx
0x07fb52ce:  cmp    $0xfffffffc,%ebx
0x07fb52d1:  je     0x7fb52fb

----------------
IN: 
0x07fb52d3:  mov    0x14(%ebx),%eax
0x07fb52d6:  and    $0x7f,%al
0x07fb52d8:  cmp    $0x300,%ax
0x07fb52dc:  je     0x7fb52f3

----------------
IN: 
0x07fb52de:  cmpl   $0x0,0x1c(%ebx)
0x07fb52e2:  jne    0x7fb52f3

----------------
IN: 
0x07fb52e4:  lea    -0x310(%ebp),%ecx
0x07fb52ea:  xor    %edx,%edx
0x07fb52ec:  mov    %ebx,%eax
0x07fb52ee:  call   0x7fb515d

----------------
IN: 
0x07faf375:  mov    %esi,%ecx
0x07faf377:  mov    $0x30,%edx
0x07faf37c:  mov    (%esp),%eax
0x07faf37f:  call   0xea07a

----------------
IN: 
0x07faf384:  xor    %ebx,%ebx
0x07faf386:  mov    %ebx,%eax
0x07faf388:  add    $0x8,%esp
0x07faf38b:  pop    %ebx
0x07faf38c:  pop    %esi
0x07faf38d:  pop    %edi
0x07faf38e:  pop    %ebp
0x07faf38f:  ret    

----------------
IN: 
0x07fb52f3:  mov    0x4(%ebx),%ebx
0x07fb52f6:  sub    $0x4,%ebx
0x07fb52f9:  jmp    0x7fb52ce

----------------
IN: 
0x07fb52ce:  cmp    $0xfffffffc,%ebx
0x07fb52d1:  je     0x7fb52fb

----------------
IN: 
0x07fab9f5:  mov    %ecx,%eax
0x07fab9f7:  add    $0x10,%eax
0x07fab9fa:  mov    %eax,0x8(%ebx)
0x07fab9fd:  mov    %edx,%eax
0x07fab9ff:  jmp    0x7faba03

----------------
IN: 
0x07fb51f6:  test   %ebp,%ebp
0x07fb51f8:  je     0x7fb520f

----------------
IN: 
0x07fb51fa:  lea    -0xc0000(%eax),%edx
0x07fb5200:  shr    $0xb,%edx
0x07fb5203:  mov    %ebx,0x0(%ebp,%edx,8)
0x07fb5207:  movl   $0x2,0x4(%ebp,%edx,8)
0x07fb520f:  movzwl (%ebx),%edx
0x07fb5212:  mov    (%esp),%ecx
0x07fb5215:  mov    %eax,0x10(%esp)
0x07fb5219:  call   0x7fb5004

----------------
IN: 
0x07fb50ae:  movzwl 0x1a(%ebx),%eax
0x07fb50b2:  cmpl   $0x506e5024,(%ebx,%eax,1)
0x07fb50b9:  jne    0x7fb50cb

----------------
IN: 
0x000ca003:  jmp    0xca0a8

----------------
IN: 
0x000ca0a8:  pusha  
0x000ca0a9:  push   %ds
0x000ca0aa:  push   %es
0x000ca0ab:  push   %fs
0x000ca0ad:  push   %gs
0x000ca0af:  cld    
0x000ca0b0:  push   %cs
0x000ca0b1:  pop    %ds
0x000ca0b2:  mov    $0x327,%si
0x000ca0b5:  xor    %di,%di
0x000ca0b7:  call   0xca507

----------------
IN: 
0x000ca507:  push   %ax
0x000ca508:  lods   %ds:(%si),%al
0x000ca509:  test   %al,%al
0x000ca50b:  je     0xca512

----------------
IN: 
0x000ca50d:  call   0xca4e0

----------------
IN: 
0x000ca4e0:  push   %ax
0x000ca4e1:  push   %bx
0x000ca4e2:  push   %bp
0x000ca4e3:  test   %di,%di
0x000ca4e5:  je     0xca4ec

----------------
IN: 
0x000ca4ec:  mov    $0x7,%bx
0x000ca4ef:  mov    $0xe,%ah
0x000ca4f1:  cmp    $0xa,%al
0x000ca4f3:  jne    0xca4f9

----------------
IN: 
0x000ca4f5:  int    $0x10

----------------
IN: 
0x000ca4f7:  mov    $0xd,%al
0x000ca4f9:  int    $0x10

----------------
IN: 
0x000ca4fb:  pop    %bp
0x000ca4fc:  pop    %bx
0x000ca4fd:  pop    %ax
0x000ca4fe:  ret    

----------------
IN: 
0x000ca510:  jmp    0xca508

----------------
IN: 
0x000ca508:  lods   %ds:(%si),%al
0x000ca509:  test   %al,%al
0x000ca50b:  je     0xca512

----------------
IN: 
0x000ca4f9:  int    $0x10

----------------
IN: 
0x000ca512:  pop    %ax
0x000ca513:  ret    

----------------
IN: 
0x000ca0ba:  mov    %bx,%gs
0x000ca0bc:  xor    %di,%di
0x000ca0be:  call   0xca4ff

----------------
IN: 
0x000ca4ff:  push   %ax
0x000ca500:  mov    $0x20,%al
0x000ca502:  call   0xca4e0

----------------
IN: 
0x000ca505:  pop    %ax
0x000ca506:  ret    

----------------
IN: 
0x000ca0c1:  mov    %ax,0x37a
0x000ca0c4:  call   0xca53c

----------------
IN: 
0x000ca53c:  push   %ax
0x000ca53d:  xchg   %al,%ah
0x000ca53f:  call   0xca526

----------------
IN: 
0x000ca526:  ror    $0x4,%al
0x000ca529:  call   0xca52f

----------------
IN: 
0x000ca52f:  push   %ax
0x000ca530:  and    $0xf,%al
0x000ca532:  cmp    $0xa,%al
0x000ca534:  sbb    $0x69,%al
0x000ca536:  das    
0x000ca537:  call   0xca4e0

----------------
IN: 
0x000ca53a:  pop    %ax
0x000ca53b:  ret    

----------------
IN: 
0x000ca52c:  ror    $0x4,%al
0x000ca52f:  push   %ax
0x000ca530:  and    $0xf,%al
0x000ca532:  cmp    $0xa,%al
0x000ca534:  sbb    $0x69,%al
0x000ca536:  das    
0x000ca537:  call   0xca4e0

----------------
IN: 
0x000ca542:  mov    $0x3a,%al
0x000ca544:  call   0xca4e0

----------------
IN: 
0x000ca547:  mov    %ah,%al
0x000ca549:  shr    $0x3,%al
0x000ca54c:  call   0xca526

----------------
IN: 
0x000ca54f:  mov    $0x2e,%al
0x000ca551:  call   0xca4e0

----------------
IN: 
0x000ca554:  mov    %ah,%al
0x000ca556:  and    $0x7,%al
0x000ca558:  call   0xca52f

----------------
IN: 
0x000ca55b:  pop    %ax
0x000ca55c:  ret    

----------------
IN: 
0x000ca0c7:  mov    $0x7b,%di
0x000ca0ca:  call   0xca53c

----------------
IN: 
0x000ca4e7:  mov    %al,(%di)
0x000ca4e9:  inc    %di
0x000ca4ea:  jmp    0xca4fb

----------------
IN: 
0x000ca0cd:  movb   $0x20,0x75
0x000ca0d2:  xor    %di,%di
0x000ca0d4:  call   0xca4ff

----------------
IN: 
0x000ca0d7:  mov    %cs,%ax
0x000ca0d9:  call   0xca51f

----------------
IN: 
0x000ca51f:  xchg   %al,%ah
0x000ca521:  call   0xca526

----------------
IN: 
0x000ca524:  xchg   %al,%ah
0x000ca526:  ror    $0x4,%al
0x000ca529:  call   0xca52f

----------------
IN: 
0x000ca0dc:  push   %ebx
0x000ca0de:  push   %edx
0x000ca0e0:  push   %edi
0x000ca0e2:  stc    
0x000ca0e3:  mov    $0xb101,%ax
0x000ca0e6:  int    $0x1a

----------------
IN: 
0x000ffe6e:  cmp    $0xb1,%ah
0x000ffe71:  je     0xfd20a

----------------
IN: 
0x000fd20a:  cli    
0x000fd20b:  cld    
0x000fd20c:  push   %eax
0x000fd20e:  push   %ecx
0x000fd210:  push   %edx
0x000fd212:  push   %ebx
0x000fd214:  push   %ebp
0x000fd216:  push   %esi
0x000fd218:  push   %edi
0x000fd21a:  push   %es
0x000fd21b:  push   %ds
0x000fd21c:  mov    %ss,%ax
0x000fd21e:  mov    %ax,%ds
0x000fd220:  mov    %esp,%ebx
0x000fd223:  movzwl %sp,%esp
0x000fd227:  mov    %esp,%eax
0x000fd22a:  calll  0xfcb1c

----------------
IN: 
0x000fcb1c:  push   %ebp
0x000fcb1e:  push   %edi
0x000fcb20:  push   %esi
0x000fcb22:  push   %ebx
0x000fcb24:  mov    %eax,%ebx
0x000fcb27:  addr32 mov 0x1c(%eax),%al
0x000fcb2b:  cmp    $0xa,%al
0x000fcb2d:  je     0xfcd57

----------------
IN: 
0x000fcb31:  ja     0xfcbb0

----------------
IN: 
0x000fcb33:  cmp    $0x3,%al
0x000fcb35:  je     0xfcc93

----------------
IN: 
0x000fcb39:  ja     0xfcb67

----------------
IN: 
0x000fcb3b:  cmp    $0x1,%al
0x000fcb3d:  je     0xfcc0a

----------------
IN: 
0x000fcc0a:  addr32 movw $0x210,0x10(%ebx)
0x000fcc10:  mov    %cs:0x5d0c,%eax
0x000fcc15:  addr32 mov %al,0x18(%ebx)
0x000fcc19:  addr32 movl $0x20494350,0x14(%ebx)
0x000fcc22:  addr32 movl $0xfd1dc,0x4(%ebx)
0x000fcc2b:  jmp    0xfce6b

----------------
IN: 
0x000fce6b:  mov    %ebx,%eax
0x000fce6e:  pop    %ebx
0x000fce70:  pop    %esi
0x000fce72:  pop    %edi
0x000fce74:  pop    %ebp
0x000fce76:  jmp    0xfe3f2

----------------
IN: 
0x000fe3f2:  addr32 movb $0x0,0x1d(%eax)
0x000fe3f7:  addr32 andw $0xfffffffe,0x24(%eax)
0x000fe3fc:  retl   

----------------
IN: 
0x000fd230:  mov    %ebx,%esp
0x000fd233:  pop    %ds
0x000fd234:  pop    %es
0x000fd235:  pop    %edi
0x000fd237:  pop    %esi
0x000fd239:  pop    %ebp
0x000fd23b:  pop    %ebx
0x000fd23d:  pop    %edx
0x000fd23f:  pop    %ecx
0x000fd241:  pop    %eax
0x000fd243:  iret   

Servicing hardware INT=0x08
----------------
IN: 
0x000ca0e8:  jb     0xca140

----------------
IN: 
0x000ca0ea:  cmp    $0x20494350,%edx
0x000ca0f1:  jne    0xca140

----------------
IN: 
0x000ca0f3:  test   %ah,%ah
0x000ca0f5:  jne    0xca140

----------------
IN: 
0x000ca0f7:  mov    $0x341,%si
0x000ca0fa:  xor    %di,%di
0x000ca0fc:  call   0xca507

----------------
IN: 
0x000ca0ff:  mov    %bh,%al
0x000ca101:  call   0xca52f

----------------
IN: 
0x000ca104:  mov    $0x2e,%al
0x000ca106:  call   0xca4e0

----------------
IN: 
0x000ca109:  mov    %bl,%al
0x000ca10b:  call   0xca526

----------------
IN: 
0x000ca10e:  cmp    $0x3,%bh
0x000ca111:  jb     0xca140

----------------
IN: 
0x000ca140:  push   %cs
0x000ca141:  pop    %gs
0x000ca143:  pop    %edi
0x000ca145:  pop    %edx
0x000ca147:  pop    %ebx
0x000ca149:  mov    $0xefff,%bx
0x000ca14c:  inc    %bx
0x000ca14d:  je     0xca179

----------------
IN: 
0x000ca14f:  mov    %bx,%es
0x000ca151:  cmpl   $0x506e5024,%es:0x0
0x000ca15b:  jne    0xca14c

----------------
IN: 
0x000ca14c:  inc    %bx
0x000ca14d:  je     0xca179

----------------
IN: 
0x000ca15d:  xor    %dx,%dx
0x000ca15f:  xor    %si,%si
0x000ca161:  movzbw %es:0x5,%cx
0x000ca167:  lods   %es:(%si),%al
0x000ca169:  add    %al,%dl
0x000ca16b:  loop   0xca167

----------------
IN: 
0x000ca167:  lods   %es:(%si),%al
0x000ca169:  add    %al,%dl
0x000ca16b:  loop   0xca167

----------------
IN: 
0x000ca16d:  jne    0xca14c

----------------
IN: 
0x000ca16f:  mov    $0x346,%si
0x000ca172:  xor    %di,%di
0x000ca174:  call   0xca507

----------------
IN: 
0x000ca177:  jmp    0xca179

----------------
IN: 
0x000ca179:  mov    $0xdfff,%bx
0x000ca17c:  inc    %bx
0x000ca17d:  je     0xca22e

----------------
IN: 
0x000ca181:  mov    %bx,%es
0x000ca183:  cmpl   $0x4d4d5024,%es:0x0
0x000ca18d:  jne    0xca17c

----------------
IN: 
0x000ca17c:  inc    %bx
0x000ca17d:  je     0xca22e

----------------
IN: 
0x000ca18f:  xor    %dx,%dx
0x000ca191:  xor    %si,%si
0x000ca193:  movzbw %es:0x5,%cx
0x000ca199:  lods   %es:(%si),%al
0x000ca19b:  add    %al,%dl
0x000ca19d:  loop   0xca199

----------------
IN: 
0x000ca199:  lods   %es:(%si),%al
0x000ca19b:  add    %al,%dl
0x000ca19d:  loop   0xca199

----------------
IN: 
0x000ca19f:  jne    0xca17c

----------------
IN: 
0x000ca1a1:  mov    $0x34b,%si
0x000ca1a4:  xor    %di,%di
0x000ca1a6:  call   0xca507

----------------
IN: 
0x000ca1a9:  pushal 
0x000ca1ab:  movzbl 0x2,%ecx
0x000ca1b1:  add    0x380,%cx
0x000ca1b5:  add    $0x7,%cx
0x000ca1b8:  and    $0xfffffff8,%cx
0x000ca1bb:  shl    $0x5,%ecx
0x000ca1bf:  mov    $0x18ae1000,%ebx
0x000ca1c5:  mov    $0x30e,%bp
0x000ca1c8:  call   0xca2ba

----------------
IN: 
0x000ca2ba:  push   %eax
0x000ca2bc:  push   %di
0x000ca2bd:  mov    $0x20,%di
0x000ca2c0:  push   %ebx
0x000ca2c2:  push   $0x1
0x000ca2c4:  lcall  *%es:0x7

----------------
IN: 
0x07fbee07:  mov    0x2(%esi),%ecx
0x07fbee0a:  cmp    $0xffffffff,%ecx
0x07fbee0d:  je     0x7fbed29

----------------
IN: 
0x07fbee13:  xor    %edx,%edx
0x07fbee15:  mov    0x7fbfe64(,%edx,4),%eax
0x07fbee1c:  mov    (%eax),%eax
0x07fbee1e:  test   %eax,%eax
0x07fbee20:  je     0x7fbee31

----------------
IN: 
0x07fbee22:  cmp    0x8(%eax),%eax
0x07fbee25:  jne    0x7fbee1c

----------------
IN: 
0x07fbee1c:  mov    (%eax),%eax
0x07fbee1e:  test   %eax,%eax
0x07fbee20:  je     0x7fbee31

----------------
IN: 
0x07fbee31:  inc    %edx
0x07fbee32:  cmp    $0x5,%edx
0x07fbee35:  jne    0x7fbee15

----------------
IN: 
0x07fbee15:  mov    0x7fbfe64(,%edx,4),%eax
0x07fbee1c:  mov    (%eax),%eax
0x07fbee1e:  test   %eax,%eax
0x07fbee20:  je     0x7fbee31

----------------
IN: 
0x07fbee27:  cmp    0x28(%eax),%ecx
0x07fbee2a:  jne    0x7fbee1c

----------------
IN: 
0x07fbee37:  jmp    0x7fbed29

----------------
IN: 
0x07fbed29:  xor    %ebx,%ebx
0x07fbed2b:  jmp    0x7fbee4b

----------------
IN: 
0x000ca2c9:  add    $0x6,%sp
0x000ca2cc:  push   %dx
0x000ca2cd:  push   %ax
0x000ca2ce:  pop    %esi
0x000ca2d0:  inc    %esi
0x000ca2d2:  je     0xca2e0

----------------
IN: 
0x000ca2d4:  dec    %esi
0x000ca2d6:  je     0xca2e0

----------------
IN: 
0x000ca2e0:  push   $0x2
0x000ca2e2:  push   %ebx
0x000ca2e4:  push   %ecx
0x000ca2e6:  push   $0x0
0x000ca2e8:  lcall  *%es:0x7

----------------
IN: 
0x07fbeccb:  mov    $0x7fbfe78,%ebp
0x07fbecd0:  mov    $0x7fbfe7c,%eax
0x07fbecd5:  test   %ebx,%ebx
0x07fbecd7:  jne    0x7fbed1d

----------------
IN: 
0x07fbed6e:  mov    %ecx,0x8(%esp)
0x07fbed72:  mov    %edx,0x4(%esp)
0x07fbed76:  mov    %ebp,%eax
0x07fbed78:  call   0x7fadfb2

----------------
IN: 
0x07fbed7d:  mov    %eax,%ebx
0x07fbed7f:  test   %eax,%eax
0x07fbed81:  jne    0x7fbede8

----------------
IN: 
0x07fbeded:  mov    %ebx,%eax
0x07fbedef:  call   0x7fab916

----------------
IN: 
0x07fbedf4:  test   %eax,%eax
0x07fbedf6:  je     0x7fbee4b

----------------
IN: 
0x07fbedf8:  cmp    %ebx,%eax
0x07fbedfa:  je     0x7fbee4b

----------------
IN: 
0x07fbedfc:  cmpl   $0x0,0x10(%eax)
0x07fbee00:  je     0x7fbee4b

----------------
IN: 
0x07fbee02:  mov    %esi,0x14(%eax)
0x07fbee05:  jmp    0x7fbee4b

----------------
IN: 
0x000ca2ed:  add    $0xc,%sp
0x000ca2f0:  push   %dx
0x000ca2f1:  push   %ax
0x000ca2f2:  pop    %esi
0x000ca2f4:  mov    $0x2b,%di
0x000ca2f7:  mov    %di,%ax
0x000ca2f9:  xor    %di,%di
0x000ca2fb:  call   0xca4e0

Servicing hardware INT=0x08
----------------
IN: 
0x000ca2fe:  mov    %esi,%eax
0x000ca301:  call   0xca514

----------------
IN: 
0x000ca514:  ror    $0x10,%eax
0x000ca518:  call   0xca51f

----------------
IN: 
0x000ca51b:  ror    $0x10,%eax
0x000ca51f:  xchg   %al,%ah
0x000ca521:  call   0xca526

----------------
IN: 
0x000ca304:  inc    %esi
0x000ca306:  je     0xca30a

----------------
IN: 
0x000ca308:  dec    %esi
0x000ca30a:  pop    %di
0x000ca30b:  pop    %eax
0x000ca30d:  ret    

----------------
IN: 
0x000ca1cb:  mov    %esi,0x37c
0x000ca1d0:  je     0xca1f2

----------------
IN: 
0x000ca1d2:  push   %es
0x000ca1d3:  xor    %ax,%ax
0x000ca1d5:  mov    %ax,%es
0x000ca1d7:  mov    %esi,%edi
0x000ca1da:  xor    %esi,%esi
0x000ca1dd:  movzbl 0x2,%ecx
0x000ca1e3:  shl    $0x7,%ecx
0x000ca1e7:  rep addr32 movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000ca1e7:  rep addr32 movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000ca1eb:  pop    %es
0x000ca1ec:  mov    0xa2,%al
0x000ca1ef:  mov    %al,0x2
0x000ca1f2:  mov    $0xabd9,%ecx
0x000ca1f8:  add    $0x20ff,%ecx
0x000ca1ff:  and    $0xffffe000,%ecx
0x000ca206:  mov    %ecx,%ebx
0x000ca209:  shr    $0xc,%bx
0x000ca20c:  or     $0x18ae2000,%ebx
0x000ca213:  mov    $0x325,%bp
0x000ca216:  call   0xca2ba

----------------
IN: 
0x000ca219:  add    $0xfff,%esi
0x000ca220:  and    $0xfffff000,%esi
0x000ca227:  mov    %esi,0x382
0x000ca22c:  popal  
0x000ca22e:  xor    %bx,%bx
0x000ca230:  xor    %si,%si
0x000ca232:  movzbw 0x2,%cx
0x000ca237:  shl    $0x9,%cx
0x000ca23a:  lods   %ds:(%si),%al
0x000ca23b:  add    %al,%bl
0x000ca23d:  loop   0xca23a

----------------
IN: 
0x000ca23a:  lods   %ds:(%si),%al
0x000ca23b:  add    %al,%bl
0x000ca23d:  loop   0xca23a

----------------
IN: 
0x000ca23f:  sub    %bl,0x6
0x000ca243:  mov    %gs,%ax
0x000ca245:  mov    %ax,%es
0x000ca247:  movzbw 0x2,%cx
0x000ca24c:  xor    %di,%di
0x000ca24e:  call   0xca4ff

----------------
IN: 
0x000ca251:  call   0xca51f

----------------
IN: 
0x000ca254:  mov    %cs,%si
0x000ca256:  cmp    %si,%ax
0x000ca258:  je     0xca267

----------------
IN: 
0x000ca267:  shl    $0x9,%cx
0x000ca26a:  xor    %si,%si
0x000ca26c:  xor    %di,%di
0x000ca26e:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000ca26e:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000ca26e:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000ca26e:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000ca26e:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000ca26e:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000ca26e:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000ca26e:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000ca271:  testb  $0x7,0x37a
0x000ca276:  jne    0xca2a8

----------------
IN: 
0x000ca278:  mov    $0x357,%si
0x000ca27b:  xor    %di,%di
0x000ca27d:  call   0xca507

----------------
IN: 
0x000ca507:  push   %ax
0x000ca508:  lods   %ds:(%si),%al
0x000ca509:  test   %al,%al
0x000ca50b:  je     0xca512

----------------
IN: 
0x000ca50d:  call   0xca4e0

----------------
IN: 
0x000ca4e0:  push   %ax
0x000ca4e1:  push   %bx
0x000ca4e2:  push   %bp
0x000ca4e3:  test   %di,%di
0x000ca4e5:  je     0xca4ec

----------------
IN: 
0x000ca4ec:  mov    $0x7,%bx
0x000ca4ef:  mov    $0xe,%ah
0x000ca4f1:  cmp    $0xa,%al
0x000ca4f3:  jne    0xca4f9

----------------
IN: 
0x000ca4f5:  int    $0x10

----------------
IN: 
0x000ca4f7:  mov    $0xd,%al
0x000ca4f9:  int    $0x10

----------------
IN: 
0x000ca4fb:  pop    %bp
0x000ca4fc:  pop    %bx
0x000ca4fd:  pop    %ax
0x000ca4fe:  ret    

----------------
IN: 
0x000ca510:  jmp    0xca508

----------------
IN: 
0x000ca508:  lods   %ds:(%si),%al
0x000ca509:  test   %al,%al
0x000ca50b:  je     0xca512

----------------
IN: 
0x000ca4f9:  int    $0x10

----------------
IN: 
0x000ca512:  pop    %ax
0x000ca513:  ret    

----------------
IN: 
0x000ca280:  mov    $0x71,%si
0x000ca283:  call   0xca507

----------------
IN: 
0x000ca286:  mov    $0x373,%si
0x000ca289:  call   0xca507

----------------
IN: 
0x000ca28c:  mov    $0xff02,%bx
0x000ca28f:  call   0xca45a

----------------
IN: 
0x000ca45a:  push   %cx
0x000ca45b:  push   %ax
0x000ca45c:  mov    $0x1,%ah
0x000ca45e:  int    $0x16

----------------
IN: 
0x000fe82e:  pushl  $0xb9b6
0x000fe834:  jmp    0xfd371

----------------
IN: 
0x000fd371:  cli    
0x000fd372:  cld    
0x000fd373:  push   %ds
0x000fd374:  push   %eax
0x000fd376:  mov    $0xd980,%eax
0x000fd37c:  mov    %ax,%ds
0x000fd37e:  mov    0xf790,%eax
0x000fd382:  sub    $0x30,%eax
0x000fd386:  addr32 popl 0x1c(%eax)
0x000fd38b:  addr32 popw (%eax)
0x000fd38e:  addr32 mov %edi,0x4(%eax)
0x000fd393:  addr32 mov %esi,0x8(%eax)
0x000fd398:  addr32 mov %ebp,0xc(%eax)
0x000fd39d:  addr32 mov %ebx,0x10(%eax)
0x000fd3a2:  addr32 mov %edx,0x14(%eax)
0x000fd3a7:  addr32 mov %ecx,0x18(%eax)
0x000fd3ac:  addr32 mov %es,0x2(%eax)
0x000fd3b0:  pop    %ecx
0x000fd3b2:  addr32 mov %esp,0x28(%eax)
0x000fd3b7:  addr32 mov %ss,0x2c(%eax)
0x000fd3bb:  addr32 popl 0x20(%eax)
0x000fd3c0:  addr32 popw 0x24(%eax)
0x000fd3c4:  mov    %ds,%dx
0x000fd3c6:  mov    %dx,%ss

----------------
IN: 
0x000fd3c8:  mov    %eax,%esp

----------------
IN: 
0x000fd3cb:  calll  *%ecx

----------------
IN: 
0x000fb9b6:  push   %ebx
0x000fb9b8:  mov    %eax,%ebx
0x000fb9bb:  calll  0xfef60

----------------
IN: 
0x000fef60:  push   %esi
0x000fef62:  push   %ebx
0x000fef64:  push   %edx
0x000fef66:  mov    $0x40,%esi
0x000fef6c:  mov    %si,%es
0x000fef6e:  mov    %es:0x17,%ax
0x000fef72:  shr    $0x4,%ax
0x000fef75:  and    $0x7,%eax
0x000fef79:  addr32 mov %al,0x3(%esp)
0x000fef7e:  mov    %es:0x97,%bl
0x000fef83:  mov    %bl,%dl
0x000fef85:  and    $0x7,%edx
0x000fef89:  cmp    %dl,%al
0x000fef8b:  je     0xfefbe

----------------
IN: 
0x000fefbe:  pop    %eax
0x000fefc0:  pop    %ebx
0x000fefc2:  pop    %esi
0x000fefc4:  retl   

----------------
IN: 
0x000fb9c1:  addr32 mov 0x1d(%ebx),%al
0x000fb9c5:  cmp    $0xa,%al
0x000fb9c7:  je     0xfba52

----------------
IN: 
0x000fb9cb:  ja     0xfb9f5

----------------
IN: 
0x000fb9cd:  cmp    $0x2,%al
0x000fb9cf:  je     0xfba25

----------------
IN: 
0x000fb9d1:  ja     0xfb9e3

----------------
IN: 
0x000fb9d3:  test   %al,%al
0x000fb9d5:  je     0xfba20

----------------
IN: 
0x000fb9d7:  dec    %al
0x000fb9d9:  jne    0xfbaa9

----------------
IN: 
0x000fb9dd:  xor    %ecx,%ecx
0x000fb9e0:  jmp    0xfba68

----------------
IN: 
0x000fba68:  xor    %edx,%edx
0x000fba6b:  mov    %ebx,%eax
0x000fba6e:  pop    %ebx
0x000fba70:  jmp    0xfb5ac

----------------
IN: 
0x000fb5ac:  push   %ebp
0x000fb5ae:  push   %edi
0x000fb5b0:  push   %esi
0x000fb5b2:  push   %ebx
0x000fb5b4:  mov    %eax,%ebx
0x000fb5b7:  mov    %edx,%esi
0x000fb5ba:  mov    %ecx,%edi
0x000fb5bd:  calll  0xf88d8

----------------
IN: 
0x000f88e3:  mov    $0x88d8,%ecx
0x000f88e9:  xor    %edx,%edx
0x000f88ec:  xor    %eax,%eax
0x000f88ef:  jmp    0xf7bd2

----------------
IN: 
0x000fb5c3:  mov    $0x40,%ebp
0x000fb5c9:  mov    %bp,%es
0x000fb5cb:  mov    %es:0x1a,%dx
0x000fb5d0:  mov    %es:0x1c,%ax
0x000fb5d4:  cmp    %dx,%ax
0x000fb5d6:  jne    0xfb5ed

----------------
IN: 
0x000fb5d8:  test   %esi,%esi
0x000fb5db:  jne    0xfb5e5

----------------
IN: 
0x000fb5dd:  addr32 orw $0x40,0x24(%ebx)
0x000fb5e2:  jmp    0xfb67e

----------------
IN: 
0x000fb67e:  pop    %ebx
0x000fb680:  pop    %esi
0x000fb682:  pop    %edi
0x000fb684:  pop    %ebp
0x000fb686:  retl   

----------------
IN: 
0x000fd3ce:  mov    %esp,%eax
0x000fd3d1:  addr32 mov 0x2c(%eax),%ss

----------------
IN: 
0x000fd3d5:  addr32 mov 0x28(%eax),%esp

----------------
IN: 
0x000fd3da:  pop    %edx
0x000fd3dc:  pop    %dx
0x000fd3dd:  addr32 pushw 0x24(%eax)
0x000fd3e1:  addr32 pushl 0x20(%eax)
0x000fd3e6:  addr32 mov 0x4(%eax),%edi
0x000fd3eb:  addr32 mov 0x8(%eax),%esi
0x000fd3f0:  addr32 mov 0xc(%eax),%ebp
0x000fd3f5:  addr32 mov 0x10(%eax),%ebx
0x000fd3fa:  addr32 mov 0x14(%eax),%edx
0x000fd3ff:  addr32 mov 0x18(%eax),%ecx
0x000fd404:  addr32 mov 0x2(%eax),%es
0x000fd408:  addr32 pushl 0x1c(%eax)
0x000fd40d:  addr32 mov (%eax),%ds
0x000fd410:  pop    %eax
0x000fd412:  iret   

Servicing hardware INT=0x08
----------------
IN: 
0x000ca460:  je     0xca468

----------------
IN: 
0x000ca468:  mov    $0x0,%cx
0x000ca46b:  dec    %cx
0x000ca46c:  js     0xca483

----------------
IN: 
0x000ca483:  pop    %ax
0x000ca484:  pop    %cx
0x000ca485:  ret    

----------------
IN: 
0x000ca292:  pushf  
0x000ca293:  xor    %di,%di
0x000ca295:  call   0xca55d

----------------
IN: 
0x000ca55d:  push   %ax
0x000ca55e:  push   %cx
0x000ca55f:  mov    $0xd,%al
0x000ca561:  call   0xca4e0

----------------
IN: 
0x000ca564:  mov    $0x4f,%cx
0x000ca567:  call   0xca4ff

----------------
IN: 
0x000ca4ff:  push   %ax
0x000ca500:  mov    $0x20,%al
0x000ca502:  call   0xca4e0

----------------
IN: 
0x000ca505:  pop    %ax
0x000ca506:  ret    

----------------
IN: 
0x000ca56a:  loop   0xca567

----------------
IN: 
0x000ca567:  call   0xca4ff

----------------
IN: 
0x000ca56c:  call   0xca4e0

----------------
IN: 
0x000ca56f:  pop    %cx
0x000ca570:  pop    %ax
0x000ca571:  ret    

----------------
IN: 
0x000ca298:  mov    $0x377,%si
0x000ca29b:  call   0xca507

----------------
IN: 
0x000ca29e:  popf   

----------------
IN: 
0x000ca29f:  jne    0xca2a8

----------------
IN: 
0x000ca2a8:  mov    $0xa,%al
0x000ca2aa:  xor    %di,%di
0x000ca2ac:  call   0xca4e0

----------------
IN: 
0x000ca2af:  pop    %gs
0x000ca2b1:  pop    %fs
0x000ca2b3:  pop    %es
0x000ca2b4:  pop    %ds
0x000ca2b5:  popa   
0x000ca2b6:  mov    $0x20,%ax
0x000ca2b9:  lret   

----------------
IN: 
0x07fb52fb:  lea    -0x310(%ebp),%ecx
0x07fb5301:  xor    %edx,%edx
0x07fb5303:  mov    $0xf1d33,%eax
0x07fb5308:  call   0x7fb5111

----------------
IN: 
0x07fb512c:  call   0x7fadc26

----------------
IN: 
0x07fadc26:  push   %esi
0x07fadc27:  push   %ebx
0x07fadc28:  push   %ecx
0x07fadc29:  mov    %eax,%esi
0x07fadc2b:  mov    0x84(%eax),%ecx
0x07fadc31:  mov    %ecx,%eax
0x07fadc33:  mov    %ecx,(%esp)
0x07fadc36:  call   0x7fab9c9

----------------
IN: 
0x07fadc3b:  mov    %eax,%ebx
0x07fadc3d:  test   %eax,%eax
0x07fadc3f:  mov    (%esp),%ecx
0x07fadc42:  jne    0x7fadc55

----------------
IN: 
0x07fadc55:  mov    %eax,%edx
0x07fadc57:  mov    %esi,%eax
0x07fadc59:  call   *0x88(%esi)

----------------
IN: 
0x07fadc5f:  test   %eax,%eax
0x07fadc61:  jg     0x7fadc65

----------------
IN: 
0x07fadc65:  mov    %ebx,%eax
0x07fadc67:  pop    %edx
0x07fadc68:  pop    %ebx
0x07fadc69:  pop    %esi
0x07fadc6a:  ret    

----------------
IN: 
0x07fb5131:  test   %eax,%eax
0x07fb5133:  je     0x7fb511d

----------------
IN: 
0x07fb5135:  test   %esi,%esi
0x07fb5137:  je     0x7fb514d

----------------
IN: 
0x07fb5139:  lea    -0xc0000(%eax),%edx
0x07fb513f:  shr    $0xb,%edx
0x07fb5142:  mov    %ebx,(%esi,%edx,8)
0x07fb5145:  movl   $0x0,0x4(%esi,%edx,8)
0x07fb514d:  mov    %edi,%ecx
0x07fb514f:  xor    %edx,%edx
0x07fb5151:  call   0x7fb5004

----------------
IN: 
0x07fb5156:  jmp    0x7fb511d

----------------
IN: 
0x07fb511d:  mov    %ebx,%edx
0x07fb511f:  mov    %ebp,%eax
0x07fb5121:  call   0x7faba53

----------------
IN: 
0x07fb530d:  xor    %eax,%eax
0x07fb530f:  call   0x7fab9c9

----------------
IN: 
0x07fb5314:  cmp    0x7fbfe60,%esi
0x07fb531a:  jae    0x7fb5493

----------------
IN: 
0x07fb5320:  mov    %esi,%eax
0x07fb5322:  call   0xeda0e

----------------
IN: 
0x07fb5327:  test   %eax,%eax
0x07fb5329:  jne    0x7fb533c

----------------
IN: 
0x07fb533c:  movzbl 0x2(%esi),%eax
0x07fb5340:  shl    $0x9,%eax
0x07fb5343:  add    $0x7ff,%eax
0x07fb5348:  and    $0xfffff800,%eax
0x07fb534d:  add    %esi,%eax
0x07fb534f:  mov    %eax,-0x314(%ebp)
0x07fb5355:  movzwl 0x1a(%esi),%ebx
0x07fb5359:  add    %esi,%ebx
0x07fb535b:  mov    %esi,%edi
0x07fb535d:  shr    $0x4,%edi
0x07fb5360:  mov    %edi,%eax
0x07fb5362:  cmpl   $0x506e5024,(%ebx)
0x07fb5368:  jne    0x7fb5385

----------------
IN: 
0x07fb536a:  movl   $0x1,-0x318(%ebp)
0x07fb5374:  shl    $0x10,%eax
0x07fb5377:  mov    %eax,-0x31c(%ebp)
0x07fb537d:  test   %ebx,%ebx
0x07fb537f:  jne    0x7fb5428

----------------
IN: 
0x07fb5428:  mov    -0x318(%ebp),%eax
0x07fb542e:  lea    -0x1(%eax),%ecx
0x07fb5431:  cmpw   $0x0,0x1a(%ebx)
0x07fb5436:  jne    0x7fb53bd

----------------
IN: 
0x07fb53bd:  mov    %esi,%edx
0x07fb53bf:  lea    -0x310(%ebp),%eax
0x07fb53c5:  call   0x7fb3ac6

----------------
IN: 
0x07fb3ac6:  push   %esi
0x07fb3ac7:  push   %ebx
0x07fb3ac8:  sub    $0x100,%esp
0x07fb3ace:  mov    %ecx,%ebx
0x07fb3ad0:  sub    $0xc0000,%edx
0x07fb3ad6:  shr    $0xb,%edx
0x07fb3ad9:  mov    (%eax,%edx,8),%ecx
0x07fb3adc:  mov    0x4(%eax,%edx,8),%eax
0x07fb3ae0:  mov    %eax,%esi
0x07fb3ae2:  or     %ecx,%esi
0x07fb3ae4:  je     0x7fb3b2e

----------------
IN: 
0x07fb3ae6:  test   $0x2,%al
0x07fb3ae8:  je     0x7fb3b1c

----------------
IN: 
0x07fb3aea:  mov    $0xf1834,%edx
0x07fb3aef:  mov    %esp,%eax
0x07fb3af1:  call   0x7fb3960

----------------
IN: 
0x07fb3af6:  test   %ebx,%ebx
0x07fb3af8:  je     0x7fb3b13

----------------
IN: 
0x07fb3b13:  mov    %esp,%eax
0x07fb3b15:  call   0x7faf3d9

----------------
IN: 
0x07fb3b1a:  jmp    0x7fb3b31

----------------
IN: 
0x07fb3b31:  add    $0x100,%esp
0x07fb3b37:  pop    %ebx
0x07fb3b38:  pop    %esi
0x07fb3b39:  ret    

----------------
IN: 
0x07fb53ca:  mov    %eax,%edi
0x07fb53cc:  movzwl 0x10(%ebx),%edx
0x07fb53d0:  movzwl 0x1a(%ebx),%ecx
0x07fb53d4:  mov    $0xf1d03,%eax
0x07fb53d9:  test   %dx,%dx
0x07fb53dc:  je     0x7fb53e7

----------------
IN: 
0x07fb53de:  mov    %esi,%eax
0x07fb53e0:  and    $0xffff0,%eax
0x07fb53e5:  add    %edx,%eax
0x07fb53e7:  or     -0x31c(%ebp),%ecx
0x07fb53ed:  mov    0x7fbfe44,%edx
0x07fb53f3:  test   %edi,%edi
0x07fb53f5:  js     0x7fb53f9

----------------
IN: 
0x07fb53f9:  push   %eax
0x07fb53fa:  mov    $0x80,%eax
0x07fb53ff:  call   0x7fae248

----------------
IN: 
0x07fb5404:  movl   $0x270f,0x7fbfe44
0x07fb540e:  pop    %eax
0x07fb540f:  movzwl 0x6(%ebx),%ebx
0x07fb5413:  test   %bx,%bx
0x07fb5416:  je     0x7fb5488

----------------
IN: 
0x07fb5488:  mov    -0x314(%ebp),%esi
0x07fb548e:  jmp    0x7fb5314

----------------
IN: 
0x07fb5385:  xor    %ecx,%ecx
0x07fb5387:  mov    %esi,%edx
0x07fb5389:  lea    -0x310(%ebp),%eax
0x07fb538f:  call   0x7fb3ac6

----------------
IN: 
0x07fb3b1c:  lea    0x4(%ecx),%eax
0x07fb3b1f:  mov    %ebx,%edx
0x07fb3b21:  add    $0x100,%esp
0x07fb3b27:  pop    %ebx
0x07fb3b28:  pop    %esi
0x07fb3b29:  jmp    0x7fb2497

----------------
IN: 
0x07fb2497:  push   %esi
0x07fb2498:  push   %ebx
0x07fb2499:  sub    $0x100,%esp
0x07fb249f:  mov    %edx,%esi
0x07fb24a1:  push   %eax
0x07fb24a2:  push   $0xf15aa
0x07fb24a7:  push   $0x100
0x07fb24ac:  lea    0xc(%esp),%ebx
0x07fb24b0:  push   %ebx
0x07fb24b1:  call   0x7fb244c

----------------
IN: 
0x07fb24b6:  mov    %ebx,%esp
0x07fb24b8:  test   %esi,%esi
0x07fb24ba:  je     0x7fb24d6

----------------
IN: 
0x07fb24d6:  mov    %ebx,%eax
0x07fb24d8:  call   0x7faf3d9

----------------
IN: 
0x07fb24dd:  add    $0x100,%esp
0x07fb24e3:  pop    %ebx
0x07fb24e4:  pop    %esi
0x07fb24e5:  ret    

----------------
IN: 
0x07fb5394:  shl    $0x10,%edi
0x07fb5397:  mov    %edi,%ecx
0x07fb5399:  or     $0x3,%ecx
0x07fb539c:  mov    0x7fbfe48,%edx
0x07fb53a2:  test   %eax,%eax
0x07fb53a4:  js     0x7fb53a8

----------------
IN: 
0x07fb53a8:  push   $0xf1d0b
0x07fb53ad:  mov    $0x81,%eax
0x07fb53b2:  call   0x7fae248

----------------
IN: 
0x07fae2b5:  mov    -0x10(%edx),%ebp
0x07fae2b8:  cmp    %ebx,%ebp
0x07fae2ba:  jg     0x7fae29e

----------------
IN: 
0x07fae2bc:  cmp    $0x3,%ebx
0x07fae2bf:  jg     0x7fae2d9

----------------
IN: 
0x07fb53b7:  pop    %edx
0x07fb53b8:  jmp    0x7fb5488

----------------
IN: 
0x07fb5493:  lea    -0xc(%ebp),%esp
0x07fb5496:  pop    %ebx
0x07fb5497:  pop    %esi
0x07fb5498:  pop    %edi
0x07fb5499:  pop    %ebp
0x07fb549a:  lea    -0x8(%edi),%esp
0x07fb549d:  pop    %edi
0x07fb549e:  ret    

----------------
IN: 
0x07fbbeb2:  mov    $0x1,%edx
0x07fbbeb7:  xor    %ecx,%ecx
0x07fbbeb9:  mov    $0xf1698,%eax
0x07fbbebe:  call   0x7fad81f

----------------
IN: 
0x07fbbec3:  test   %eax,%eax
0x07fbbec5:  je     0x7fbdc4b

----------------
IN: 
0x07fbdc4b:  call   0x7fad8b7

----------------
IN: 
0x07fbdc50:  mov    0xf5404,%al
0x07fbdc55:  cmp    $0x1,%al
0x07fbdc57:  je     0x7fbdc62

----------------
IN: 
0x07fbdc59:  cmp    $0x2,%al
0x07fbdc5b:  je     0x7fbdc8b

----------------
IN: 
0x07fbdc5d:  jmp    0x7fbde31

----------------
IN: 
0x07fbde31:  mov    $0xf46a3,%edx
0x07fbde36:  mov    $0x4,%eax
0x07fbde3b:  call   0xeb423

----------------
IN: 
0x000eb423:  push   %ebx
0x000eb424:  push   %ecx
0x000eb425:  mov    %eax,%ebx
0x000eb427:  mov    %edx,%eax
0x000eb429:  mov    %edx,(%esp)
0x000eb42c:  call   0xe9960

----------------
IN: 
0x000eb431:  push   %eax
0x000eb432:  mov    0x4(%esp),%ecx
0x000eb436:  push   %ecx
0x000eb437:  push   %eax
0x000eb438:  mov    $0x5,%edx
0x000eb43d:  mov    %ebx,%eax
0x000eb43f:  call   0xeb389

----------------
IN: 
0x000eb389:  cmpb   $0x0,0xe8f01
0x000eb390:  je     0xeb422

----------------
IN: 
0x000eb422:  ret    

----------------
IN: 
0x000eb444:  add    $0x10,%esp
0x000eb447:  pop    %ebx
0x000eb448:  ret    

----------------
IN: 
0x07fbde40:  xor    %ebx,%ebx
0x07fbde42:  push   $0x4
0x07fbde44:  push   $0x7fbf4d8
0x07fbde49:  push   $0x4
0x07fbde4b:  mov    $0x7fbf4d8,%ecx
0x07fbde50:  mov    $0x4,%edx
0x07fbde55:  mov    %ebx,%eax
0x07fbde57:  call   0xeb389

----------------
IN: 
0x07fbde5c:  inc    %ebx
0x07fbde5d:  add    $0xc,%esp
0x07fbde60:  cmp    $0x8,%ebx
0x07fbde63:  jne    0x7fbde42

----------------
IN: 
0x07fbde42:  push   $0x4
0x07fbde44:  push   $0x7fbf4d8
0x07fbde49:  push   $0x4
0x07fbde4b:  mov    $0x7fbf4d8,%ecx
0x07fbde50:  mov    $0x4,%edx
0x07fbde55:  mov    %ebx,%eax
0x07fbde57:  call   0xeb389

----------------
IN: 
0x07fbde65:  mov    $0xf070b,%eax
0x07fbde6a:  call   0x7faf3d9

----------------
IN: 
0x07fbde6f:  mov    %eax,%edx
0x07fbde71:  test   %eax,%eax
0x07fbde73:  js     0x7fbde87

----------------
IN: 
0x07fbde87:  mov    0x7fbfe40,%eax
0x07fbde8c:  sub    $0x10,%eax
0x07fbde8f:  mov    %eax,(%esp)
0x07fbde92:  cmpl   $0xfffffff0,(%esp)
0x07fbde96:  je     0x7fbe2d5

----------------
IN: 
0x07fbde9c:  mov    (%esp),%eax
0x07fbde9f:  mov    (%eax),%eax
0x07fbdea1:  cmp    $0x3,%eax
0x07fbdea4:  je     0x7fbe2a8

----------------
IN: 
0x07fbdeaa:  jg     0x7fbdebb

----------------
IN: 
0x07fbdeac:  cmp    $0x1,%eax
0x07fbdeaf:  je     0x7fbdee0

----------------
IN: 
0x07fbdeb1:  cmp    $0x2,%eax
0x07fbdeb4:  je     0x7fbdf35

----------------
IN: 
0x07fbdf35:  mov    (%esp),%eax
0x07fbdf38:  mov    0x4(%eax),%ebx
0x07fbdf3b:  movzbl 0x475,%eax
0x07fbdf42:  mov    %al,0x14(%esp)
0x07fbdf46:  mov    %eax,0x18(%esp)
0x07fbdf4a:  mov    %ebx,%ecx
0x07fbdf4c:  mov    $0x475,%edx
0x07fbdf51:  mov    $0xf60e0,%eax
0x07fbdf56:  call   0x7fadc05

----------------
IN: 
0x07fadc05:  push   %ebx
0x07fadc06:  mov    %eax,%ebx
0x07fadc08:  movzbl (%edx),%eax
0x07fadc0b:  cmp    $0xf,%al
0x07fadc0d:  jbe    0x7fadc1f

----------------
IN: 
0x07fadc1f:  mov    %ecx,(%ebx,%eax,4)
0x07fadc22:  incb   (%edx)
0x07fadc24:  pop    %ebx
0x07fadc25:  ret    

----------------
IN: 
0x07fbdf5b:  mov    0x2(%ebx),%si
0x07fbdf5f:  cmp    $0xff,%si
0x07fbdf64:  ja     0x7fbdf79

----------------
IN: 
0x07fbdf66:  mov    0x6(%ebx),%ax
0x07fbdf6a:  lea    -0x1(%eax),%edx
0x07fbdf6d:  mov    $0x4,%al
0x07fbdf6f:  cmp    $0x3e,%dx
0x07fbdf73:  jbe    0x7fbe02d

----------------
IN: 
0x07fbdf79:  cmpb   $0x20,(%ebx)
0x07fbdf7c:  jne    0x7fbdfa2

----------------
IN: 
0x07fbdf7e:  mov    0x14(%ebx),%ecx
0x07fbdf81:  mov    %ecx,%eax
0x07fbdf83:  shr    $0x2,%eax
0x07fbdf86:  add    $0x39,%eax
0x07fbdf89:  or     $0xffffff80,%eax
0x07fbdf8c:  out    %al,$0x70
0x07fbdf8e:  in     $0x71,%al
0x07fbdf90:  movzbl %al,%eax
0x07fbdf93:  and    $0x3,%ecx
0x07fbdf96:  add    %ecx,%ecx
0x07fbdf98:  sar    %cl,%eax
0x07fbdf9a:  and    $0x3,%eax
0x07fbdf9d:  jmp    0x7fbe02d

----------------
IN: 
0x07fbe02d:  mov    %al,0x19(%ebx)
0x07fbe030:  mov    0x1c(%ebx),%edi
0x07fbe033:  mov    %di,0xc(%esp)
0x07fbe038:  mov    0x1e(%ebx),%di
0x07fbe03c:  mov    %di,0x8(%esp)
0x07fbe041:  mov    0x20(%ebx),%edi
0x07fbe044:  mov    %di,0x10(%esp)
0x07fbe049:  mov    0xc(%ebx),%edi
0x07fbe04c:  mov    0x10(%ebx),%edx
0x07fbe04f:  cmp    $0x3,%al
0x07fbe051:  je     0x7fbe0fa

----------------
IN: 
0x07fbe057:  cmp    $0x4,%al
0x07fbe059:  je     0x7fbe154

----------------
IN: 
0x07fbe05f:  cmp    $0x1,%al
0x07fbe061:  je     0x7fbe081

----------------
IN: 
0x07fbe063:  cmp    $0x2,%al
0x07fbe065:  je     0x7fbe125

----------------
IN: 
0x07fbe125:  mov    0x8(%esp),%eax
0x07fbe129:  mov    0xc(%esp),%esi
0x07fbe12d:  mov    $0xf3eac,%edx
0x07fbe132:  jmp    0x7fbe141

----------------
IN: 
0x07fbe141:  cmp    $0x400,%ax
0x07fbe145:  jbe    0x7fbe178

----------------
IN: 
0x07fbe178:  mov    0x10(%esp),%ebp
0x07fbe17c:  mov    %eax,%ecx
0x07fbe17e:  cmp    $0x400,%ax
0x07fbe182:  jbe    0x7fbe189

----------------
IN: 
0x07fbe189:  push   %edi
0x07fbe18a:  movzwl %bp,%eax
0x07fbe18d:  push   %eax
0x07fbe18e:  movzwl %si,%eax
0x07fbe191:  push   %eax
0x07fbe192:  movzwl %cx,%eax
0x07fbe195:  mov    %ecx,0x28(%esp)
0x07fbe199:  push   %eax
0x07fbe19a:  push   %edx
0x07fbe19b:  movzwl 0x24(%esp),%eax
0x07fbe1a0:  push   %eax
0x07fbe1a1:  movzwl 0x24(%esp),%eax
0x07fbe1a6:  push   %eax
0x07fbe1a7:  movzwl 0x24(%esp),%eax
0x07fbe1ac:  push   %eax
0x07fbe1ad:  push   %ebx
0x07fbe1ae:  push   $0xf46b3
0x07fbe1b3:  call   0xec4d8

----------------
IN: 
0x07fbe1b8:  mov    %si,0x2(%ebx)
0x07fbe1bc:  mov    0x44(%esp),%ecx
0x07fbe1c0:  mov    %cx,0x4(%ebx)
0x07fbe1c4:  mov    %bp,0x6(%ebx)
0x07fbe1c8:  add    $0x28,%esp
0x07fbe1cb:  cmpl   $0x1,0x18(%esp)
0x07fbe1d0:  jg     0x7fbe29f

----------------
IN: 
0x07fbe1d6:  mov    0x1e(%ebx),%ax
0x07fbe1da:  mov    0x1c(%ebx),%edi
0x07fbe1dd:  mov    %di,0x8(%esp)
0x07fbe1e2:  mov    0x20(%ebx),%edi
0x07fbe1e5:  mov    %di,0xc(%esp)
0x07fbe1ea:  movzwl 0x40e,%ebx
0x07fbe1f1:  shl    $0x4,%ebx
0x07fbe1f4:  movzbl 0x14(%esp),%edx
0x07fbe1f9:  mov    %edx,%edi
0x07fbe1fb:  shl    $0x4,%edi
0x07fbe1fe:  lea    0x3d(%ebx,%edi,1),%edi
0x07fbe202:  shl    $0x4,%edx
0x07fbe205:  add    %edx,%ebx
0x07fbe207:  movw   $0xffff,0x42(%ebx)
0x07fbe20d:  cmpw   $0x9,0x8(%esp)
0x07fbe213:  sbb    %edx,%edx
0x07fbe215:  and    $0xfffffff8,%edx
0x07fbe218:  sub    $0x38,%edx
0x07fbe21b:  mov    %dl,0x45(%ebx)
0x07fbe21e:  mov    %ax,0x49(%ebx)
0x07fbe222:  mov    %cx,0x3d(%ebx)
0x07fbe226:  mov    %esi,%edx
0x07fbe228:  mov    %dl,0x3f(%ebx)
0x07fbe22b:  mov    %ebp,%edx
0x07fbe22d:  mov    %dl,0x4b(%ebx)
0x07fbe230:  cmp    %si,0x8(%esp)
0x07fbe235:  setne  0x10(%esp)
0x07fbe23a:  cmp    %bp,0xc(%esp)
0x07fbe23f:  setne  %dl
0x07fbe242:  or     0x10(%esp),%dl
0x07fbe246:  jne    0x7fbe24d

----------------
IN: 
0x07fbe248:  cmp    %cx,%ax
0x07fbe24b:  je     0x7fbe272

----------------
IN: 
0x07fbe272:  mov    0x40e,%ax
0x07fbe278:  cmpl   $0x0,0x18(%esp)
0x07fbe27d:  jne    0x7fbe290

----------------
IN: 
0x07fbe27f:  movw   $0x3d,0x104
0x07fbe288:  mov    %ax,0x106
0x07fbe28e:  jmp    0x7fbe29f

----------------
IN: 
0x07fbe29f:  xor    %edx,%edx
0x07fbe2a1:  mov    $0x2,%eax
0x07fbe2a6:  jmp    0x7fbe2c5

----------------
IN: 
0x07fbe2c5:  call   0x7fabb0a

----------------
IN: 
0x07fabb0a:  push   %ebx
0x07fabb0b:  mov    %edx,%ecx
0x07fabb0d:  cmp    $0x2,%eax
0x07fabb10:  jne    0x7fabb49

----------------
IN: 
0x07fabb12:  mov    0x7fbff2c,%edx
0x07fabb18:  lea    0x1(%edx),%ebx
0x07fabb1b:  mov    %ebx,0x7fbff2c
0x07fabb21:  test   %edx,%edx
0x07fabb23:  jne    0x7fabb5f

----------------
IN: 
0x07fabb25:  mov    0xf5408,%edx
0x07fabb2b:  cmp    $0x13,%edx
0x07fabb2e:  ja     0x7fabb5f

----------------
IN: 
0x07fabb30:  lea    0x1(%edx),%ebx
0x07fabb33:  mov    %ebx,0xf5408
0x07fabb39:  mov    %eax,0xf5420(,%edx,8)
0x07fabb40:  mov    %ecx,0xf5424(,%edx,8)
0x07fabb47:  jmp    0x7fabb5f

----------------
IN: 
0x07fabb5f:  pop    %ebx
0x07fabb60:  ret    

----------------
IN: 
0x07fbe2ca:  mov    (%esp),%eax
0x07fbe2cd:  mov    0x10(%eax),%eax
0x07fbe2d0:  jmp    0x7fbde8c

----------------
IN: 
0x07fbde8c:  sub    $0x10,%eax
0x07fbde8f:  mov    %eax,(%esp)
0x07fbde92:  cmpl   $0xfffffff0,(%esp)
0x07fbde96:  je     0x7fbe2d5

----------------
IN: 
0x07fbdebb:  cmp    $0x81,%eax
0x07fbdec0:  jne    0x7fbe2bd

----------------
IN: 
0x07fbdec6:  mov    (%esp),%eax
0x07fbdec9:  movzwl 0x4(%eax),%edx
0x07fbdecd:  movzwl 0x6(%eax),%eax
0x07fbded1:  shl    $0x4,%eax
0x07fbded4:  xor    %ecx,%ecx
0x07fbded6:  call   0xee4d2

Servicing hardware INT=0x08
----------------
IN: 
0x000cb003:  push   %es
0x000cb004:  push   %cs
0x000cb005:  pop    %es
0x000cb006:  xor    %ax,%ax
0x000cb008:  mov    $0x1000,%cx
0x000cb00b:  lea    0x300,%di
0x000cb00f:  cld    
0x000cb010:  rep stos %ax,%es:(%di)

----------------
IN: 
0x000cb010:  rep stos %ax,%es:(%di)

----------------
IN: 
0x000cb012:  pop    %es
0x000cb013:  mov    $0x20,%ax
0x000cb016:  out    %ax,$0x7e
0x000cb018:  lret   

----------------
IN: 
0x07fbdedb:  jmp    0x7fbe29f

----------------
IN: 
0x07fbdee0:  mov    (%esp),%eax
0x07fbdee3:  mov    0x4(%eax),%ecx
0x07fbdee6:  mov    $0xf6160,%edx
0x07fbdeeb:  mov    $0xf60a0,%eax
0x07fbdef0:  call   0x7fadc05

----------------
IN: 
0x07fbdef5:  cmpb   $0x1,0xf6160
0x07fbdefc:  jne    0x7fbdf18

----------------
IN: 
0x07fbdefe:  mov    0x410,%eax
0x07fbdf03:  and    $0xffffffbe,%eax
0x07fbdf06:  or     $0x1,%eax
0x07fbdf09:  mov    %ax,0x410
0x07fbdf0f:  movb   $0x7,0x48f
0x07fbdf16:  jmp    0x7fbdf29

----------------
IN: 
0x07fbdf29:  xor    %edx,%edx
0x07fbdf2b:  mov    $0x1,%eax
0x07fbdf30:  jmp    0x7fbe2c5

----------------
IN: 
0x07fabb49:  cmp    $0x1,%eax
0x07fabb4c:  jne    0x7fabb25

----------------
IN: 
0x07fabb4e:  mov    0x7fbff28,%edx
0x07fabb54:  lea    0x1(%edx),%ebx
0x07fabb57:  mov    %ebx,0x7fbff28
0x07fabb5d:  jmp    0x7fabb21

----------------
IN: 
0x07fabb21:  test   %edx,%edx
0x07fabb23:  jne    0x7fabb5f

----------------
IN: 
0x07fbe2a8:  mov    (%esp),%eax
0x07fbe2ab:  mov    0x4(%eax),%ecx
0x07fbe2ae:  mov    $0x7fbff48,%edx
0x07fbe2b3:  mov    $0xf6120,%eax
0x07fbe2b8:  call   0x7fadc05

----------------
IN: 
0x07fbe2bd:  mov    (%esp),%eax
0x07fbe2c0:  mov    0x4(%eax),%edx
0x07fbe2c3:  mov    (%eax),%eax
0x07fbe2c5:  call   0x7fabb0a

----------------
IN: 
0x07fbe2d5:  xor    %edx,%edx
0x07fbe2d7:  mov    $0x1,%eax
0x07fbe2dc:  call   0x7fabb0a

----------------
IN: 
0x07fbe2e1:  xor    %edx,%edx
0x07fbe2e3:  mov    $0x2,%eax
0x07fbe2e8:  call   0x7fabb0a

----------------
IN: 
0x07fbe2ed:  cmpb   $0x0,0x7fbff48
0x07fbe2f4:  je     0x7fbe346

----------------
IN: 
0x07fbe2f6:  call   0x7fae452

----------------
IN: 
0x07fae452:  push   %ebx
0x07fae453:  xor    %ebx,%ebx
0x07fae455:  cmpl   $0x0,0xf608c
0x07fae45c:  jne    0x7fae485

----------------
IN: 
0x07fae45e:  mov    $0x800,%eax
0x07fae463:  call   0x7fae0c3

----------------
IN: 
0x07fae0c3:  mov    %eax,%edx
0x07fae0c5:  mov    $0x10,%ecx
0x07fae0ca:  mov    $0x7fbfe88,%eax
0x07fae0cf:  jmp    0x7fadfb2

----------------
IN: 
0x07fae468:  test   %eax,%eax
0x07fae46a:  jne    0x7fae480

----------------
IN: 
0x07fae480:  mov    %eax,0xf608c
0x07fae485:  mov    %ebx,%eax
0x07fae487:  pop    %ebx
0x07fae488:  ret    

----------------
IN: 
0x07fbe2fb:  test   %eax,%eax
0x07fbe2fd:  js     0x7fbe346

----------------
IN: 
0x07fbe2ff:  mov    $0x24,%eax
0x07fbe304:  call   0x7fae0d4

----------------
IN: 
0x07fbe309:  test   %eax,%eax
0x07fbe30b:  jne    0x7fbe31e

----------------
IN: 
0x07fbe31e:  mov    %eax,0xf6088
0x07fbe323:  mov    $0x24,%ecx
0x07fbe328:  xor    %edx,%edx
0x07fbe32a:  call   0xeab7b

----------------
IN: 
0x07fbe32f:  movb   $0x40,(%eax)
0x07fbe332:  movw   $0x200,0x1a(%eax)
0x07fbe338:  movl   $0xffffffff,0xc(%eax)
0x07fbe33f:  movl   $0xffffffff,0x10(%eax)
0x07fbe346:  movl   $0x0,0xf5d10
0x07fbe350:  movl   $0x0,0xf5d17
0x07fbe35a:  call   0xe99b2

----------------
IN: 
0x07fbe35f:  mov    %eax,%esi
0x07fbe361:  mov    0x7fbfe60,%eax
0x07fbe366:  mov    %esi,%ecx
0x07fbe368:  sub    %eax,%ecx
0x07fbe36a:  xor    %edx,%edx
0x07fbe36c:  call   0xeab7b

----------------
IN: 
0x07fbe371:  movw   $0xaa55,(%esi)
0x07fbe376:  mov    $0xf0000,%eax
0x07fbe37b:  sub    %esi,%eax
0x07fbe37d:  mov    %eax,%edx
0x07fbe37f:  shr    $0x9,%edx
0x07fbe382:  cmp    $0x1ffff,%eax
0x07fbe387:  jbe    0x7fbe38e

----------------
IN: 
0x07fbe38e:  mov    %dl,0x2(%esi)
0x07fbe391:  movzwl 0x413,%ebx
0x07fbe398:  shl    $0xa,%ebx
0x07fbe39b:  mov    %ebx,%eax
0x07fbe39d:  cltd   
0x07fbe39e:  push   $0x2
0x07fbe3a0:  mov    $0xa0000,%ecx
0x07fbe3a5:  sub    %ebx,%ecx
0x07fbe3a7:  xor    %ebx,%ebx
0x07fbe3a9:  push   %ebx
0x07fbe3aa:  push   %ecx
0x07fbe3ab:  call   0x7fadf0b

----------------
IN: 
0x07fade80:  lea    0x8(%ecx),%edi
0x07fade83:  mov    %edi,0x14(%esp)
0x07fade87:  add    0x8(%ecx),%eax
0x07fade8a:  adc    0xc(%ecx),%edx
0x07fade8d:  cmp    %eax,(%esp)
0x07fade90:  mov    0x4(%esp),%edi
0x07fade94:  sbb    %edx,%edi
0x07fade96:  jb     0x7fadea3

----------------
IN: 
0x07fade98:  mov    0x8(%esp),%eax
0x07fade9c:  call   0x7fad5bb

----------------
IN: 
0x07fad5bb:  push   %ebx
0x07fad5bc:  mov    0xf5d24,%ebx
0x07fad5c2:  lea    -0x1(%ebx),%ecx
0x07fad5c5:  mov    %ecx,0xf5d24
0x07fad5cb:  lea    0x1(%eax),%edx
0x07fad5ce:  imul   $0x14,%edx,%edx
0x07fad5d1:  sub    %eax,%ecx
0x07fad5d3:  imul   $0x14,%ecx,%ecx
0x07fad5d6:  lea    0xf5d40(%edx),%ebx
0x07fad5dc:  lea    0xf5d2c(%edx),%eax
0x07fad5e2:  mov    %ebx,%edx
0x07fad5e4:  pop    %ebx
0x07fad5e5:  jmp    0x7fad59d

----------------
IN: 
0x07fad5a5:  mov    %eax,%edi
0x07fad5a7:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fad5a7:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fad5a9:  jmp    0x7fad5b8

----------------
IN: 
0x07fadea1:  jmp    0x7fade57

----------------
IN: 
0x07fade57:  mov    0x8(%esp),%eax
0x07fade5b:  cmp    0xf5d24,%eax
0x07fade61:  jge    0x7faded2

----------------
IN: 
0x07fbe3b0:  mov    0x7fbfe80,%ebx
0x07fbe3b6:  add    $0xc,%esp
0x07fbe3b9:  xor    %edi,%edi
0x07fbe3bb:  test   %ebx,%ebx
0x07fbe3bd:  je     0x7fbe3c5

----------------
IN: 
0x07fbe3bf:  mov    %ebx,%edi
0x07fbe3c1:  mov    (%ebx),%ebx
0x07fbe3c3:  jmp    0x7fbe3bb

----------------
IN: 
0x07fbe3bb:  test   %ebx,%ebx
0x07fbe3bd:  je     0x7fbe3c5

----------------
IN: 
0x07fbe3c5:  mov    0x8(%edi),%eax
0x07fbe3c8:  mov    0xc(%edi),%ecx
0x07fbe3cb:  sub    %eax,%ecx
0x07fbe3cd:  xor    %edx,%edx
0x07fbe3cf:  call   0xeab7b

----------------
IN: 
0x07fbe3d4:  pushl  0xc(%edi)
0x07fbe3d7:  pushl  0x8(%edi)
0x07fbe3da:  push   %esi
0x07fbe3db:  pushl  0x7fbfe60
0x07fbe3e1:  push   $0xf46ee
0x07fbe3e6:  call   0xec4d8

----------------
IN: 
0x07fbe3eb:  mov    0x7fbfe84,%eax
0x07fbe3f0:  add    $0x14,%esp
0x07fbe3f3:  test   %eax,%eax
0x07fbe3f5:  je     0x7fbe3fd

----------------
IN: 
0x07fbe3f7:  mov    %eax,%ebx
0x07fbe3f9:  mov    (%eax),%eax
0x07fbe3fb:  jmp    0x7fbe3f3

----------------
IN: 
0x07fbe3f3:  test   %eax,%eax
0x07fbe3f5:  je     0x7fbe3fd

----------------
IN: 
0x07fbe3fd:  test   %ebx,%ebx
0x07fbe3ff:  je     0x7fbe42a

----------------
IN: 
0x07fbe401:  mov    0x8(%ebx),%eax
0x07fbe404:  mov    0xc(%ebx),%ebx
0x07fbe407:  sub    %eax,%ebx
0x07fbe409:  and    $0xfffff000,%ebx
0x07fbe40f:  xor    %edx,%edx
0x07fbe411:  push   $0x1
0x07fbe413:  xor    %edi,%edi
0x07fbe415:  push   %edi
0x07fbe416:  push   %ebx
0x07fbe417:  call   0x7fadf0b

----------------
IN: 
0x07faddc5:  incl   0x8(%esp)
0x07faddc9:  jmp    0x7fadd80

----------------
IN: 
0x07fadd80:  cmp    %edx,0x8(%esp)
0x07fadd84:  jge    0x7faded2

----------------
IN: 
0x07fadde7:  mov    (%esp),%esi
0x07faddea:  mov    0x4(%esp),%edi
0x07faddee:  sub    %ecx,%esi
0x07faddf0:  sbb    %ebx,%edi
0x07faddf2:  mov    %esi,0x1c(%esp)
0x07faddf6:  mov    %edi,0x20(%esp)
0x07faddfa:  mov    %ecx,0xc(%esp)
0x07faddfe:  mov    %ebx,0x10(%esp)
0x07fade02:  jmp    0x7fade52

----------------
IN: 
0x07fadea3:  mov    (%esp),%ebx
0x07fadea6:  mov    0x4(%esp),%esi
0x07fadeaa:  mov    %ebx,(%ecx)
0x07fadeac:  mov    %esi,0x4(%ecx)
0x07fadeaf:  sub    %ebx,%eax
0x07fadeb1:  sbb    %esi,%edx
0x07fadeb3:  mov    0x14(%esp),%ebx
0x07fadeb7:  mov    %eax,(%ebx)
0x07fadeb9:  mov    %edx,0x4(%ebx)
0x07fadebc:  cmp    0x10(%ecx),%ebp
0x07fadebf:  jne    0x7faded2

----------------
IN: 
0x07fbe41c:  push   %ebx
0x07fbe41d:  push   $0xf4715
0x07fbe422:  call   0xec4d8

----------------
IN: 
0x07fbe427:  add    $0x14,%esp
0x07fbe42a:  call   0x7faba05

----------------
IN: 
0x07fbe42f:  pushl  0xf5d24
0x07fbe435:  push   $0xf4734
0x07fbe43a:  call   0xec4d8

----------------
IN: 
0x07fbe43f:  mov    $0xf5d40,%ebx
0x07fbe444:  pop    %edx
0x07fbe445:  pop    %ecx
0x07fbe446:  xor    %esi,%esi
0x07fbe448:  cmp    0xf5d24,%esi
0x07fbe44e:  jge    0x7fbe49d

----------------
IN: 
0x07fbe450:  mov    (%ebx),%eax
0x07fbe452:  mov    0x4(%ebx),%edx
0x07fbe455:  mov    %eax,%edi
0x07fbe457:  mov    %edx,%ebp
0x07fbe459:  add    0x8(%ebx),%edi
0x07fbe45c:  adc    0xc(%ebx),%ebp
0x07fbe45f:  mov    %edi,(%esp)
0x07fbe462:  mov    %ebp,0x4(%esp)
0x07fbe466:  mov    0x10(%ebx),%ecx
0x07fbe469:  lea    -0x1(%ecx),%ebp
0x07fbe46c:  mov    $0xf3ec9,%edi
0x07fbe471:  cmp    $0x4,%ebp
0x07fbe474:  ja     0x7fbe47d

----------------
IN: 
0x07fbe476:  mov    0x7fbef68(,%ebp,4),%edi
0x07fbe47d:  push   %edi
0x07fbe47e:  push   %ecx
0x07fbe47f:  pushl  0xc(%esp)
0x07fbe483:  pushl  0xc(%esp)
0x07fbe487:  push   %edx
0x07fbe488:  push   %eax
0x07fbe489:  push   %esi
0x07fbe48a:  push   $0xf474c
0x07fbe48f:  call   0xec4d8

----------------
IN: 
0x07fbe494:  inc    %esi
0x07fbe495:  add    $0x14,%ebx
0x07fbe498:  add    $0x20,%esp
0x07fbe49b:  jmp    0x7fbe448

----------------
IN: 
0x07fbe448:  cmp    0xf5d24,%esi
0x07fbe44e:  jge    0x7fbe49d

----------------
IN: 
0x000ebee2:  sub    $0x8,%ecx
0x000ebee5:  push   %edi
0x000ebee6:  push   %eax
0x000ebee7:  mov    %ebx,%eax
0x000ebee9:  call   0xe990b

----------------
IN: 
0x000ebeee:  push   %edi
0x000ebeef:  mov    $0x8,%ecx
0x000ebef4:  mov    0x10(%esp),%edx
0x000ebef8:  mov    %ebx,%eax
0x000ebefa:  call   0xe9872

----------------
IN: 
0x000ebeff:  add    $0xc,%esp
0x000ebf02:  jmp    0xebf19

----------------
IN: 
0x000ebf19:  mov    (%esp),%ebp
0x000ebf1c:  jmp    0xebf72

----------------
IN: 
0x07fbe49d:  movl   $0x2,0xf61c8
0x07fbe4a7:  mov    $0x10000,%edx
0x07fbe4ac:  mov    $0xf0000,%eax
0x07fbe4b1:  call   0xeaaa5

----------------
IN: 
0x07fbe4b6:  sub    %al,0xfffff
0x07fbe4bc:  call   0xedb78

----------------
IN: 
0x000edb78:  push   %ebx
0x000edb79:  call   0xe97da

----------------
IN: 
0x000edb7e:  test   %eax,%eax
0x000edb80:  jne    0xedbc0

----------------
IN: 
0x000edb82:  mov    0xf5158,%ebx
0x000edb88:  test   %ebx,%ebx
0x000edb8a:  jns    0xedb99

----------------
IN: 
0x000edb99:  movzwl %bx,%ebx
0x000edb9c:  mov    $0x2,%edx
0x000edba1:  mov    %ebx,%eax
0x000edba3:  call   0xea491

----------------
IN: 
0x000edba8:  mov    $0x59,%edx
0x000edbad:  cmp    $0x1237,%ax
0x000edbb1:  je     0xedbb8

----------------
IN: 
0x000edbb8:  mov    %ebx,%eax
0x000edbba:  pop    %ebx
0x000edbbb:  jmp    0xea36b

----------------
IN: 
0x000ea36b:  push   %ebp
0x000ea36c:  push   %edi
0x000ea36d:  push   %esi
0x000ea36e:  push   %ebx
0x000ea36f:  sub    $0x10,%esp
0x000ea372:  mov    %edx,%esi
0x000ea374:  wbinvd 
0x000ea376:  mov    %edx,%ebx
0x000ea378:  and    $0xfffffffc,%ebx
0x000ea37b:  movzwl %ax,%eax
0x000ea37e:  mov    %eax,(%esp)
0x000ea381:  mov    %ebx,%edx
0x000ea383:  call   0xea337

----------------
IN: 
0x000ea388:  mov    %eax,0x8(%esp)
0x000ea38c:  lea    0x4(%ebx),%eax
0x000ea38f:  mov    %eax,0x4(%esp)
0x000ea393:  mov    %eax,%edx
0x000ea395:  mov    (%esp),%eax
0x000ea398:  call   0xea337

----------------
IN: 
0x000ea39d:  mov    %eax,0xc(%esp)
0x000ea3a1:  and    $0x3,%esi
0x000ea3a4:  mov    %esi,%edx
0x000ea3a6:  lea    0x8(%esp,%esi,1),%edi
0x000ea3aa:  call   0xe99b2

----------------
IN: 
0x000ea3af:  mov    %eax,%ecx
0x000ea3b1:  xor    %eax,%eax
0x000ea3b3:  mov    %eax,%esi
0x000ea3b5:  shl    $0xf,%esi
0x000ea3b8:  lea    0xc8000(%esi),%ebp
0x000ea3be:  cmp    %ebp,%ecx
0x000ea3c0:  jae    0xea3d3

----------------
IN: 
0x000ea3d3:  movb   $0x11,0x1(%edi,%eax,1)
0x000ea3d8:  inc    %eax
0x000ea3d9:  cmp    $0x6,%eax
0x000ea3dc:  jne    0xea3b3

----------------
IN: 
0x000ea3b3:  mov    %eax,%esi
0x000ea3b5:  shl    $0xf,%esi
0x000ea3b8:  lea    0xc8000(%esi),%ebp
0x000ea3be:  cmp    %ebp,%ecx
0x000ea3c0:  jae    0xea3d3

----------------
IN: 
0x000ea3c2:  add    $0xc4000,%esi
0x000ea3c8:  cmp    %ecx,%esi
0x000ea3ca:  ja     0xea3de

----------------
IN: 
0x000ea3de:  movb   $0x10,0x8(%esp,%edx,1)
0x000ea3e3:  mov    0x8(%esp),%ecx
0x000ea3e7:  mov    %ebx,%edx
0x000ea3e9:  mov    (%esp),%eax
0x000ea3ec:  call   0xea07a

----------------
IN: 
0x000ea3f1:  mov    0xc(%esp),%ecx
0x000ea3f5:  mov    0x4(%esp),%edx
0x000ea3f9:  mov    (%esp),%eax
0x000ea3fc:  add    $0x10,%esp
0x000ea3ff:  pop    %ebx
0x000ea400:  pop    %esi
0x000ea401:  pop    %edi
0x000ea402:  pop    %ebp
0x000ea403:  jmp    0xea07a

----------------
IN: 
0x07fbe4c1:  add    $0x124,%esp
0x07fbe4c7:  pop    %ebx
0x07fbe4c8:  pop    %esi
0x07fbe4c9:  pop    %edi
0x07fbe4ca:  pop    %ebp
0x07fbe4cb:  jmp    0xefbe2

----------------
IN: 
0x000efbe2:  sub    $0x28,%esp
0x000efbe5:  mov    $0x89000,%ecx
0x000efbea:  xor    %edx,%edx
0x000efbec:  mov    $0x7000,%eax
0x000efbf1:  call   0xeab7b

----------------
IN: 
0x000efbf6:  mov    $0x26,%ecx
0x000efbfb:  lea    0x2(%esp),%eax
0x000efbff:  call   0xeab7b

----------------
IN: 
0x000efc04:  movw   $0x200,0x26(%esp)
0x000efc0b:  mov    $0xfe6ee,%edx
0x000efc10:  movzwl %dx,%edx
0x000efc13:  call   0xec42f

Servicing hardware INT=0x08
----------------
IN: 
0x000fe6ee:  int    $0x19

----------------
IN: 
0x000fe6f2:  jmp    0xfd452

----------------
IN: 
0x000fd452:  xor    %dx,%dx
0x000fd454:  mov    %dx,%ss

----------------
IN: 
0x000fd456:  mov    $0x7000,%esp

----------------
IN: 
0x000fd45c:  mov    $0xefd1d,%edx
0x000fd462:  jmp    0xfcf2b

----------------
IN: 
0x000fcf2b:  cli    
0x000fcf2c:  cld    
0x000fcf2d:  mov    %eax,%ecx
0x000fcf30:  mov    $0x8f,%eax
0x000fcf36:  out    %al,$0x70
0x000fcf38:  in     $0x71,%al
0x000fcf3a:  in     $0x92,%al
0x000fcf3c:  or     $0x2,%al
0x000fcf3e:  out    %al,$0x92
0x000fcf40:  mov    %ecx,%eax
0x000fcf43:  lidtw  %cs:0x61b8
0x000fcf49:  lgdtw  %cs:0x6178
0x000fcf4f:  mov    %cr0,%ecx
0x000fcf52:  and    $0x1fffffff,%ecx
0x000fcf59:  or     $0x1,%ecx
0x000fcf5d:  mov    %ecx,%cr0

----------------
IN: 
0x000fcf68:  mov    $0x10,%ecx
0x000fcf6d:  mov    %ecx,%ds

----------------
IN: 
0x000fcf6f:  mov    %ecx,%es

----------------
IN: 
0x000efd1d:  push   $0xf4f64
0x000efd22:  push   $0xf49db
0x000efd27:  call   0xec4d8

----------------
IN: 
0x000efd2c:  push   $0xf49e6
0x000efd31:  call   0xec4d8

----------------
IN: 
0x000efd36:  movl   $0x0,0xe8f18
0x000efd40:  add    $0xc,%esp
0x000efd43:  xor    %eax,%eax
0x000efd45:  jmp    0xef73b

----------------
IN: 
0x000ef73b:  push   %edi
0x000ef73c:  push   %esi
0x000ef73d:  push   %ebx
0x000ef73e:  sub    $0x2c,%esp
0x000ef741:  cmp    %eax,0xf5408
0x000ef747:  jle    0xef884

----------------
IN: 
0x000ef74d:  mov    0xf5420(,%eax,8),%edx
0x000ef754:  cmp    $0x3,%edx
0x000ef757:  je     0xef7b9

----------------
IN: 
0x000ef759:  jg     0xef77f

----------------
IN: 
0x000ef75b:  cmp    $0x1,%edx
0x000ef75e:  je     0xef79c

----------------
IN: 
0x000ef760:  cmp    $0x2,%edx
0x000ef763:  jne    0xef889

----------------
IN: 
0x000ef769:  push   $0xf3805
0x000ef76e:  call   0xee44a

----------------
IN: 
0x000ec136:  mov    $0xfcf79,%ecx
0x000ec13b:  cmpl   $0x1,0xf61c8
0x000ec142:  jne    0xec149

----------------
IN: 
0x000fcf79:  mov    $0x20,%ecx
0x000fcf7e:  mov    %ecx,%ds

----------------
IN: 
0x000fcf80:  mov    %ecx,%es

----------------
IN: 
0x000fcf82:  mov    %ecx,%ss

----------------
IN: 
0x000fcf84:  mov    %ecx,%fs

----------------
IN: 
0x000fcf86:  mov    %ecx,%gs
0x000fcf88:  ljmpw  $0x18,$0xcfa3

----------------
IN: 
0x000ef773:  mov    $0x1,%edx
0x000ef778:  mov    $0x80,%eax
0x000ef77d:  jmp    0xef7ae

----------------
IN: 
0x000ef7ae:  call   0xee5c5

----------------
IN: 
0x000ee5c5:  push   %esi
0x000ee5c6:  push   %ebx
0x000ee5c7:  sub    $0x28,%esp
0x000ee5ca:  mov    %eax,%ebx
0x000ee5cc:  mov    %edx,%esi
0x000ee5ce:  mov    $0x26,%ecx
0x000ee5d3:  xor    %edx,%edx
0x000ee5d5:  lea    0x2(%esp),%eax
0x000ee5d9:  call   0xeab7b

----------------
IN: 
0x000ee5de:  movw   $0x200,0x26(%esp)
0x000ee5e5:  mov    %bl,0x16(%esp)
0x000ee5e9:  movw   $0x7c0,0x4(%esp)
0x000ee5f0:  movw   $0x201,0x1e(%esp)
0x000ee5f7:  movb   $0x1,0x1a(%esp)
0x000ee5fc:  mov    $0xfd05d,%edx
0x000ee601:  movzwl %dx,%edx
0x000ee604:  call   0xec42f

----------------
IN: 
0x000fd05d:  int    $0x13

----------------
IN: 
0x000fe3fe:  jmp    0xfd413

----------------
IN: 
0x000fd413:  pushl  $0xb83a
0x000fd419:  jmp    0xfd371

----------------
IN: 
0x000fb83a:  push   %edi
0x000fb83c:  push   %esi
0x000fb83e:  push   %ebx
0x000fb840:  addr32 mov 0x14(%eax),%dl
0x000fb844:  mov    $0xd980,%ebx
0x000fb84a:  addr32 cmpb $0x4b,0x1d(%eax)
0x000fb84f:  jne    0xfb88e

----------------
IN: 
0x000fb88e:  mov    %bx,%es
0x000fb890:  mov    %es:-0x893,%cl
0x000fb895:  test   %cl,%cl
0x000fb897:  je     0xfb8cf

----------------
IN: 
0x000fb8cf:  movzbl %dl,%edx
0x000fb8d3:  pop    %ebx
0x000fb8d5:  pop    %esi
0x000fb8d7:  pop    %edi
0x000fb8d9:  jmp    0xfb4ff

----------------
IN: 
0x000fb4ff:  test   %dl,%dl
0x000fb501:  js     0xfb540

----------------
IN: 
0x000fb540:  cmp    $0xdf,%dl
0x000fb543:  jbe    0xfb555

----------------
IN: 
0x000fb555:  addr32 lea -0x80(%edx),%ecx
0x000fb55a:  cmp    $0xf,%cl
0x000fb55d:  ja     0xfb583

----------------
IN: 
0x000fb55f:  sub    $0x70,%edx
0x000fb563:  movzbl %dl,%edx
0x000fb567:  addr32 mov %cs:0x60a0(,%edx,4),%edx
0x000fb571:  test   %edx,%edx
0x000fb574:  je     0xfb583

----------------
IN: 
0x000fb576:  jmp    0xfb1d6

----------------
IN: 
0x000fb1d6:  push   %ebx
0x000fb1d8:  mov    %eax,%ebx
0x000fb1db:  mov    $0x40,%ecx
0x000fb1e1:  mov    %cx,%es
0x000fb1e3:  xor    %eax,%eax
0x000fb1e6:  mov    %al,%es:0x8e
0x000fb1ea:  addr32 mov 0x1d(%ebx),%al
0x000fb1ee:  cmp    $0x14,%al
0x000fb1f0:  je     0xfb341

----------------
IN: 
0x000fb1f4:  ja     0xfb26c

----------------
IN: 
0x000fb1f6:  cmp    $0x8,%al
0x000fb1f8:  je     0xfb31f

----------------
IN: 
0x000fb1fc:  ja     0xfb23a

----------------
IN: 
0x000fb1fe:  cmp    $0x3,%al
0x000fb200:  je     0xfb309

----------------
IN: 
0x000fb204:  ja     0xfb226

----------------
IN: 
0x000fb206:  cmp    $0x1,%al
0x000fb208:  je     0xfb2d7

----------------
IN: 
0x000fb20c:  mov    $0x2,%ecx
0x000fb212:  cmp    $0x2,%al
0x000fb214:  je     0xfb30f

----------------
IN: 
0x000fb30f:  mov    %ebx,%eax
0x000fb312:  pop    %ebx
0x000fb314:  jmp    0xfae6f

----------------
IN: 
0x000fae6f:  push   %edi
0x000fae71:  push   %esi
0x000fae73:  push   %ebx
0x000fae75:  sub    $0x18,%esp
0x000fae79:  mov    %eax,%ebx
0x000fae7c:  mov    %edx,%edi
0x000fae7f:  addr32 mov %edx,0x8(%esp)
0x000fae85:  addr32 mov %cl,0xc(%esp)
0x000fae8a:  addr32 mov 0x1c(%eax),%al
0x000fae8e:  addr32 mov %al,0x3(%esp)
0x000fae93:  addr32 movzbl 0x19(%ebx),%edx
0x000fae99:  addr32 mov 0x18(%ebx),%cl
0x000fae9d:  mov    %cl,%al
0x000fae9f:  and    $0x3f,%eax
0x000faea3:  addr32 mov %al,0x1(%esp)
0x000faea8:  addr32 mov 0x15(%ebx),%al
0x000faeac:  addr32 mov %al,0x2(%esp)
0x000faeb1:  addr32 mov 0x3(%esp),%al
0x000faeb6:  dec    %al
0x000faeb8:  js     0xfaec2

----------------
IN: 
0x000faeba:  addr32 cmpb $0x0,0x1(%esp)
0x000faec0:  jne    0xfaecb

----------------
IN: 
0x000faecb:  addr32 lea 0x0(,%ecx,4),%esi
0x000faed4:  and    $0x300,%si
0x000faed8:  or     %edx,%esi
0x000faedb:  addr32 movzbl 0x3(%esp),%eax
0x000faee2:  addr32 mov %ax,0xe(%esp)
0x000faee7:  mov    %edi,%eax
0x000faeea:  calll  0xf6dc9

----------------
IN: 
0x000f6dc9:  mov    %eax,%edx
0x000f6dcc:  mov    %cs:0x6088,%eax
0x000f6dd1:  cmp    %eax,%edx
0x000f6dd4:  jne    0xf6e1d

----------------
IN: 
0x000f6e1d:  push   %ebx
0x000f6e1f:  addr32 lea 0x4(%edx),%eax
0x000f6e24:  mov    %eax,%ecx
0x000f6e27:  shr    $0x4,%ecx
0x000f6e2b:  mov    %cx,%es
0x000f6e2d:  and    $0xf,%eax
0x000f6e31:  addr32 mov %es:(%eax),%cx
0x000f6e35:  addr32 lea 0x2(%edx),%eax
0x000f6e3a:  mov    %eax,%ebx
0x000f6e3d:  shr    $0x4,%ebx
0x000f6e41:  mov    %bx,%es
0x000f6e43:  and    $0xf,%eax
0x000f6e47:  addr32 mov %es:(%eax),%ax
0x000f6e4b:  add    $0x6,%edx
0x000f6e4f:  mov    %edx,%ebx
0x000f6e52:  shr    $0x4,%ebx
0x000f6e56:  mov    %bx,%es
0x000f6e58:  and    $0xf,%edx
0x000f6e5c:  addr32 mov %es:(%edx),%dx
0x000f6e60:  shl    $0x10,%ecx
0x000f6e64:  movzwl %ax,%eax
0x000f6e68:  or     %ecx,%eax
0x000f6e6b:  movzwl %dx,%edx
0x000f6e6f:  pop    %ebx
0x000f6e71:  retl   

----------------
IN: 
0x000faef0:  mov    %eax,%edi
0x000faef3:  addr32 movzbl 0x2(%esp),%eax
0x000faefa:  cmp    %di,%ax
0x000faefc:  setae  %cl
0x000faeff:  addr32 movzbl 0x1(%esp),%eax
0x000faf06:  cmp    %dx,%ax
0x000faf08:  seta   %al
0x000faf0b:  or     %cl,%al
0x000faf0d:  jne    0xfaf1a

----------------
IN: 
0x000faf0f:  mov    %edi,%eax
0x000faf12:  shr    $0x10,%eax
0x000faf16:  cmp    %ax,%si
0x000faf18:  jb     0xfaf22

----------------
IN: 
0x000faf22:  movswl %si,%esi
0x000faf26:  movzwl %di,%edi
0x000faf2a:  imul   %edi,%esi
0x000faf2e:  addr32 movzbl 0x2(%esp),%eax
0x000faf35:  add    %eax,%esi
0x000faf38:  movzwl %dx,%edx
0x000faf3c:  imul   %edx,%esi
0x000faf40:  addr32 movzbl 0x1(%esp),%ecx
0x000faf47:  addr32 lea -0x1(%esi,%ecx,1),%eax
0x000faf4d:  addr32 mov %eax,0x10(%esp)
0x000faf53:  addr32 movl $0x0,0x14(%esp)
0x000faf5d:  addr32 movzwl 0x2(%ebx),%eax
0x000faf63:  shl    $0x4,%eax
0x000faf67:  addr32 movzwl 0x10(%ebx),%edx
0x000faf6d:  add    %edx,%eax
0x000faf70:  addr32 mov %eax,0x4(%esp)
0x000faf76:  addr32 lea 0x4(%esp),%eax
0x000faf7c:  calll  0xfaaa0

----------------
IN: 
0x000faaa0:  push   %ebp
0x000faaa2:  push   %edi
0x000faaa4:  push   %esi
0x000faaa6:  push   %ebx
0x000faaa8:  push   %ecx
0x000faaaa:  mov    %eax,%esi
0x000faaad:  addr32 movzwl 0xa(%eax),%edi
0x000faab3:  addr32 mov 0x4(%eax),%ebx
0x000faab8:  addr32 lea 0x1a(%ebx),%eax
0x000faabd:  mov    %eax,%edx
0x000faac0:  shr    $0x4,%edx
0x000faac4:  mov    %dx,%es
0x000faac6:  and    $0xf,%eax
0x000faaca:  addr32 mov %es:(%eax),%ax
0x000faace:  movzwl %ax,%eax
0x000faad2:  imul   %edi,%eax
0x000faad6:  cmp    $0x10000,%eax
0x000faadc:  jle    0xfaaed

----------------
IN: 
0x000faaed:  mov    %ebx,%eax
0x000faaf0:  shr    $0x4,%eax
0x000faaf4:  mov    %ax,%es
0x000faaf6:  mov    %ebx,%eax
0x000faaf9:  and    $0xf,%eax
0x000faafd:  addr32 mov %es:(%eax),%al
0x000fab01:  cmp    $0x30,%al
0x000fab03:  je     0xfad18

----------------
IN: 
0x000fab07:  ja     0xfab16

----------------
IN: 
0x000fab09:  cmp    $0x10,%al
0x000fab0b:  je     0xfab1f

----------------
IN: 
0x000fab0d:  cmp    $0x20,%al
0x000fab0f:  je     0xfabc5

----------------
IN: 
0x000fabc5:  addr32 mov 0x8(%esi),%al
0x000fabc9:  cmp    $0x3,%al
0x000fabcb:  je     0xfac0b

----------------
IN: 
0x000fabcd:  ja     0xfabdd

----------------
IN: 
0x000fabcf:  test   %al,%al
0x000fabd1:  je     0xfac1d

----------------
IN: 
0x000fabd3:  xor    %edx,%edx
0x000fabd6:  cmp    $0x2,%al
0x000fabd8:  je     0xfac11

----------------
IN: 
0x000fac11:  mov    %esi,%eax
0x000fac14:  calll  0xfa794

----------------
IN: 
0x000fa794:  push   %ebp
0x000fa796:  push   %edi
0x000fa798:  push   %esi
0x000fa79a:  push   %ebx
0x000fa79c:  sub    $0x14,%esp
0x000fa7a0:  mov    %eax,%ebx
0x000fa7a3:  mov    %edx,%ebp
0x000fa7a6:  addr32 mov 0xc(%eax),%esi
0x000fa7ab:  addr32 mov 0x10(%eax),%edi
0x000fa7b0:  mov    $0xc,%ecx
0x000fa7b6:  xor    %edx,%edx
0x000fa7b9:  addr32 lea 0x8(%esp),%eax
0x000fa7bf:  calll  0xf7245

----------------
IN: 
0x000fa7c5:  addr32 mov 0xa(%ebx),%cx
0x000fa7c9:  cmp    $0xff,%cx
0x000fa7cd:  ja     0xfa800

----------------
IN: 
0x000fa7cf:  movzwl %cx,%eax
0x000fa7d3:  xor    %edx,%edx
0x000fa7d6:  add    %esi,%eax
0x000fa7d9:  adc    %edi,%edx
0x000fa7dc:  addr32 mov %eax,(%esp)
0x000fa7e1:  addr32 mov %edx,0x4(%esp)
0x000fa7e7:  mov    $0xfffffff,%eax
0x000fa7ed:  addr32 cmp (%esp),%eax
0x000fa7f2:  mov    $0x0,%eax
0x000fa7f8:  addr32 sbb 0x4(%esp),%eax
0x000fa7fe:  jae    0xfa846

----------------
IN: 
0x000fa846:  cmp    $0x1,%ebp
0x000fa84a:  sbb    %eax,%eax
0x000fa84d:  and    $0xfffffff0,%eax
0x000fa851:  add    $0x30,%eax
0x000fa855:  addr32 mov %al,0xe(%esp)
0x000fa85a:  addr32 mov %cl,0x9(%esp)
0x000fa85f:  addr32 mov %si,0xa(%esp)
0x000fa864:  mov    %esi,%eax
0x000fa867:  mov    %edi,%edx
0x000fa86a:  shrd   $0x10,%edx,%eax
0x000fa86f:  shr    $0x10,%edx
0x000fa873:  addr32 mov %al,0xc(%esp)
0x000fa878:  shrd   $0x18,%edi,%esi
0x000fa87d:  shr    $0x18,%edi
0x000fa881:  and    $0xf,%esi
0x000fa885:  mov    %esi,%eax
0x000fa888:  or     $0x40,%eax
0x000fa88c:  addr32 mov %al,0xd(%esp)
0x000fa891:  addr32 mov 0x4(%ebx),%ecx
0x000fa896:  addr32 mov %cs:-0xeffdc(%ecx),%eax
0x000fa89f:  addr32 mov %cs:-0xf0000(%eax),%di
0x000fa8a7:  addr32 mov %cs:-0xefffe(%eax),%si
0x000fa8af:  add    $0x2,%esi
0x000fa8b3:  mov    $0xa,%al
0x000fa8b5:  mov    %esi,%edx
0x000fa8b8:  out    %al,(%dx)
0x000fa8b9:  addr32 lea 0x8(%esp),%edx
0x000fa8bf:  mov    %ecx,%eax
0x000fa8c2:  calll  0xfa535

----------------
IN: 
0x000fa535:  push   %ebp
0x000fa537:  push   %edi
0x000fa539:  push   %esi
0x000fa53b:  push   %ebx
0x000fa53d:  sub    $0x8,%esp
0x000fa541:  mov    %edx,%esi
0x000fa544:  addr32 mov %cs:-0xeffdc(%eax),%edx
0x000fa54d:  addr32 mov %cs:-0xeffd8(%eax),%bl
0x000fa555:  addr32 mov %cs:-0xf0000(%edx),%bp
0x000fa55d:  movzwl %bp,%edi
0x000fa561:  mov    %edi,%eax
0x000fa564:  calll  0xfa4a9

----------------
IN: 
0x000fa4a9:  movzwl %ax,%ecx
0x000fa4ad:  xor    %edx,%edx
0x000fa4b0:  mov    $0x80,%eax
0x000fa4b6:  jmp    0xfa438

----------------
IN: 
0x000fa438:  push   %ebp
0x000fa43a:  push   %edi
0x000fa43c:  push   %esi
0x000fa43e:  push   %ebx
0x000fa440:  mov    %eax,%esi
0x000fa443:  mov    %edx,%edi
0x000fa446:  mov    %ecx,%ebp
0x000fa449:  mov    $0x7d00,%eax
0x000fa44f:  calll  0xf7562

----------------
IN: 
0x000f7562:  push   %ebx
0x000f7564:  mov    %eax,%ebx
0x000f7567:  calll  0xf74c5

----------------
IN: 
0x000f74c5:  mov    %cs:0x6038,%dx
0x000f74ca:  test   %dx,%dx
0x000f74cc:  jne    0xf74e9

----------------
IN: 
0x000f74e9:  mov    $0xd980,%ecx
0x000f74ef:  cmp    $0x40,%dx
0x000f74f2:  je     0xf751e

----------------
IN: 
0x000f74f4:  in     (%dx),%eax
0x000f74f6:  mov    %cx,%es
0x000f74f8:  mov    %es:-0x8cc,%edx
0x000f74fe:  xor    %edx,%eax
0x000f7501:  and    $0xffffff,%eax
0x000f7507:  xor    %edx,%eax
0x000f750a:  cmp    %eax,%edx
0x000f750d:  jbe    0xf7515

----------------
IN: 
0x000f7515:  mov    %cx,%es
0x000f7517:  mov    %eax,%es:0xf734
0x000f751c:  retl   

----------------
IN: 
0x000f756d:  mov    %cs:0x603c,%edx
0x000f7573:  imul   %edx,%ebx
0x000f7577:  add    %ebx,%eax
0x000f757a:  pop    %ebx
0x000f757c:  retl   

----------------
IN: 
0x000fa455:  mov    %eax,%ebx
0x000fa458:  addr32 lea 0x7(%ebp),%edx
0x000fa45d:  in     (%dx),%al
0x000fa45e:  mov    %esi,%edx
0x000fa461:  and    %eax,%edx
0x000fa464:  mov    %edi,%ecx
0x000fa467:  cmp    %cl,%dl
0x000fa469:  jne    0xfa471

----------------
IN: 
0x000fa46b:  movzbl %al,%eax
0x000fa46f:  jmp    0xfa49f

----------------
IN: 
0x000fa49f:  pop    %ebx
0x000fa4a1:  pop    %esi
0x000fa4a3:  pop    %edi
0x000fa4a5:  pop    %ebp
0x000fa4a7:  retl   

----------------
IN: 
0x000fa56a:  test   %eax,%eax
0x000fa56d:  js     0xfa653

----------------
IN: 
0x000fa571:  addr32 mov 0x5(%esi),%dl
0x000fa575:  and    $0x4f,%edx
0x000fa579:  cmp    $0x1,%bl
0x000fa57c:  sbb    %eax,%eax
0x000fa57f:  and    $0xfffffff0,%eax
0x000fa583:  sub    $0x50,%eax
0x000fa587:  or     %edx,%eax
0x000fa58a:  mov    %al,%cl
0x000fa58c:  addr32 lea 0x6(%ebp),%edx
0x000fa591:  in     (%dx),%al
0x000fa592:  mov    %al,%bl
0x000fa594:  mov    %cl,%al
0x000fa596:  out    %al,(%dx)
0x000fa597:  xor    %ebx,%eax
0x000fa59a:  test   $0x10,%al
0x000fa59c:  jne    0xfa60a

----------------
IN: 
0x000fa60a:  mov    %edi,%eax
0x000fa60d:  calll  0xfa4b9

----------------
IN: 
0x000fa4b9:  push   %esi
0x000fa4bb:  push   %ebx
0x000fa4bd:  mov    %eax,%esi
0x000fa4c0:  calll  0xf74c5

----------------
IN: 
0x000fa4c6:  mov    %eax,%ecx
0x000fa4c9:  mov    %cs:0x603c,%eax
0x000fa4ce:  imul   $0x190,%eax,%eax
0x000fa4d5:  add    $0xf423f,%eax
0x000fa4db:  mov    $0xf4240,%ebx
0x000fa4e1:  xor    %edx,%edx
0x000fa4e4:  div    %ebx
0x000fa4e7:  addr32 lea (%eax,%ecx,1),%ebx
0x000fa4ec:  mov    %ebx,%eax
0x000fa4ef:  calll  0xf75ae

----------------
IN: 
0x000f75ae:  push   %ebx
0x000f75b0:  mov    %eax,%ebx
0x000f75b3:  calll  0xf74c5

----------------
IN: 
0x000f75b9:  sub    %ebx,%eax
0x000f75bc:  test   %eax,%eax
0x000f75bf:  setg   %al
0x000f75c2:  movzbl %al,%eax
0x000f75c6:  pop    %ebx
0x000f75c8:  retl   

----------------
IN: 
0x000fa4f5:  test   %eax,%eax
0x000fa4f8:  jne    0xfa4fe

----------------
IN: 
0x000fa4fe:  movzwl %si,%eax
0x000fa502:  pop    %ebx
0x000fa504:  pop    %esi
0x000fa506:  jmp    0xfa4a9

----------------
IN: 
0x000fa613:  test   %eax,%eax
0x000fa616:  jns    0xfa59e

----------------
IN: 
0x000fa59e:  addr32 mov 0x6(%esi),%cl
0x000fa5a2:  addr32 lea 0x1(%ebp),%eax
0x000fa5a7:  addr32 mov %ax,0x2(%esp)
0x000fa5ac:  addr32 lea 0x2(%ebp),%edi
0x000fa5b1:  addr32 lea 0x3(%ebp),%ebx
0x000fa5b6:  addr32 lea 0x4(%ebp),%eax
0x000fa5bb:  addr32 mov %ax,0x4(%esp)
0x000fa5c0:  addr32 lea 0x5(%ebp),%eax
0x000fa5c5:  addr32 mov %ax,0x6(%esp)
0x000fa5ca:  mov    %ecx,%eax
0x000fa5cd:  and    $0xee,%eax
0x000fa5d3:  cmp    $0x24,%eax
0x000fa5d7:  jne    0xfa61a

----------------
IN: 
0x000fa61a:  addr32 mov (%esi),%al
0x000fa61d:  addr32 mov 0x2(%esp),%dx
0x000fa622:  out    %al,(%dx)
0x000fa623:  addr32 mov 0x1(%esi),%al
0x000fa627:  mov    %edi,%edx
0x000fa62a:  out    %al,(%dx)
0x000fa62b:  addr32 mov 0x2(%esi),%al
0x000fa62f:  mov    %ebx,%edx
0x000fa632:  out    %al,(%dx)
0x000fa633:  addr32 mov 0x3(%esi),%al
0x000fa637:  addr32 mov 0x4(%esp),%edx
0x000fa63d:  out    %al,(%dx)
0x000fa63e:  addr32 mov 0x4(%esi),%al
0x000fa642:  addr32 mov 0x6(%esp),%dx
0x000fa647:  out    %al,(%dx)
0x000fa648:  addr32 lea 0x7(%ebp),%edx
0x000fa64d:  mov    %cl,%al
0x000fa64f:  out    %al,(%dx)
0x000fa650:  xor    %eax,%eax
0x000fa653:  add    $0x8,%esp
0x000fa657:  pop    %ebx
0x000fa659:  pop    %esi
0x000fa65b:  pop    %edi
0x000fa65d:  pop    %ebp
0x000fa65f:  retl   

----------------
IN: 
0x000fa8c8:  mov    %eax,%ecx
0x000fa8cb:  test   %eax,%eax
0x000fa8ce:  jne    0xfa8f7

----------------
IN: 
0x000fa8d0:  movzwl %di,%eax
0x000fa8d4:  calll  0xfa509

----------------
IN: 
0x000fa509:  movzwl %ax,%eax
0x000fa50d:  calll  0xfa4b9

----------------
IN: 
0x000fa513:  test   %eax,%eax
0x000fa516:  js     0xfa533

----------------
IN: 
0x000fa518:  test   $0x1,%al
0x000fa51a:  jne    0xfa52d

----------------
IN: 
0x000fa51c:  and    $0x8,%eax
0x000fa520:  cmp    $0x1,%eax
0x000fa524:  sbb    %eax,%eax
0x000fa527:  and    $0xfffffffb,%eax
0x000fa52b:  retl   

----------------
IN: 
0x000fa8da:  mov    %eax,%ecx
0x000fa8dd:  test   %eax,%eax
0x000fa8e0:  jne    0xfa8f7

----------------
IN: 
0x000fa8e2:  mov    $0x200,%ecx
0x000fa8e8:  mov    %ebp,%edx
0x000fa8eb:  mov    %ebx,%eax
0x000fa8ee:  calll  0xfa661

----------------
IN: 
0x000fa661:  push   %ebp
0x000fa663:  push   %edi
0x000fa665:  push   %esi
0x000fa667:  push   %ebx
0x000fa669:  sub    $0x18,%esp
0x000fa66d:  mov    %eax,%ebx
0x000fa670:  addr32 mov %edx,0x8(%esp)
0x000fa676:  addr32 mov %ecx,0xc(%esp)
0x000fa67c:  addr32 mov 0x4(%eax),%eax
0x000fa681:  addr32 mov %cs:-0xeffdc(%eax),%eax
0x000fa68a:  addr32 mov %cs:-0xf0000(%eax),%si
0x000fa692:  addr32 mov %si,0x10(%esp)
0x000fa697:  addr32 mov %cs:-0xefffe(%eax),%ax
0x000fa69f:  addr32 mov %ax,0x12(%esp)
0x000fa6a4:  addr32 movzwl 0xa(%ebx),%ebp
0x000fa6aa:  addr32 mov (%ebx),%eax
0x000fa6ae:  addr32 mov %eax,(%esp)
0x000fa6b3:  mov    $0x2,%ecx
0x000fa6b9:  addr32 mov 0xc(%esp),%eax
0x000fa6bf:  cltd   
0x000fa6c1:  idiv   %ecx
0x000fa6c4:  movzwl %ax,%eax
0x000fa6c8:  addr32 mov %eax,0x4(%esp)
0x000fa6ce:  movzwl %si,%eax
0x000fa6d2:  addr32 mov %eax,0x14(%esp)
0x000fa6d8:  addr32 mov (%esp),%eax
0x000fa6dd:  shr    $0x4,%eax
0x000fa6e1:  addr32 mov (%esp),%edi
0x000fa6e6:  and    $0xf,%edi
0x000fa6ea:  addr32 cmpl $0x0,0x8(%esp)
0x000fa6f1:  je     0xfa70a

----------------
IN: 
0x000fa70a:  mov    %ax,%es
0x000fa70c:  addr32 mov 0x4(%esp),%ecx
0x000fa712:  addr32 mov 0x10(%esp),%edx
0x000fa718:  rep addr32 insw (%dx),%es:(%edi)

----------------
IN: 
0x000fa718:  rep addr32 insw (%dx),%es:(%edi)

----------------
IN: 
0x000fa71b:  addr32 mov 0xc(%esp),%esi
0x000fa721:  addr32 add %esi,(%esp)
0x000fa726:  addr32 mov 0x12(%esp),%ax
0x000fa72b:  addr32 lea 0x2(%eax),%edx
0x000fa730:  in     (%dx),%al
0x000fa731:  addr32 mov 0x14(%esp),%eax
0x000fa737:  calll  0xfa4a9

----------------
IN: 
0x000fa73d:  test   %eax,%eax
0x000fa740:  jns    0xfa748

----------------
IN: 
0x000fa748:  dec    %ebp
0x000fa74a:  je     0xfa764

----------------
IN: 
0x000fa764:  addr32 cmpl $0x0,0x8(%esp)
0x000fa76b:  je     0xfa775

----------------
IN: 
0x000fa775:  and    $0x89,%eax
0x000fa77b:  test   %eax,%eax
0x000fa77e:  je     0xfa786

----------------
IN: 
0x000fa786:  add    $0x18,%esp
0x000fa78a:  pop    %ebx
0x000fa78c:  pop    %esi
0x000fa78e:  pop    %edi
0x000fa790:  pop    %ebp
0x000fa792:  retl   

----------------
IN: 
0x000fa8f4:  mov    %eax,%ecx
0x000fa8f7:  mov    $0x8,%al
0x000fa8f9:  mov    %esi,%edx
0x000fa8fc:  out    %al,(%dx)
0x000fa8fd:  test   %ecx,%ecx
0x000fa900:  je     0xfa908

----------------
IN: 
0x000fa908:  mov    %ecx,%eax
0x000fa90b:  add    $0x14,%esp
0x000fa90f:  pop    %ebx
0x000fa911:  pop    %esi
0x000fa913:  pop    %edi
0x000fa915:  pop    %ebp
0x000fa917:  retl   

----------------
IN: 
0x000fac1a:  jmp    0xfad2c

----------------
IN: 
0x000fad2c:  test   %eax,%eax
0x000fad2f:  jne    0xfae16

----------------
IN: 
0x000fad33:  xor    %eax,%eax
0x000fad36:  jmp    0xfae27

----------------
IN: 
0x000fae27:  pop    %edx
0x000fae29:  pop    %ebx
0x000fae2b:  pop    %esi
0x000fae2d:  pop    %edi
0x000fae2f:  pop    %ebp
0x000fae31:  retl   

----------------
IN: 
0x000faf82:  addr32 mov 0xe(%esp),%dx
0x000faf87:  addr32 mov %dl,0x1c(%ebx)
0x000faf8b:  or     $0x9e,%ah
0x000faf8e:  mov    %eax,%edx
0x000faf91:  mov    %ebx,%eax
0x000faf94:  calll  0xf6ed8

----------------
IN: 
0x000f6ed8:  mov    $0x40,%ecx
0x000f6ede:  addr32 cmpb $0x0,0x14(%eax)
0x000f6ee3:  js     0xf6eee

----------------
IN: 
0x000f6eee:  mov    %cx,%es
0x000f6ef0:  mov    %dl,%es:0x74
0x000f6ef5:  test   %dl,%dl
0x000f6ef7:  je     0xf6f04

----------------
IN: 
0x000f6f04:  jmp    0xfe3f2

----------------
IN: 
0x000faf9a:  add    $0x18,%esp
0x000faf9e:  pop    %ebx
0x000fafa0:  pop    %esi
0x000fafa2:  pop    %edi
0x000fafa4:  retl   

Servicing hardware INT=0x08
----------------
IN: 
0x000fd05f:  lret   

----------------
IN: 
0x000ee609:  testb  $0x1,0x26(%esp)
0x000ee60e:  je     0xee617

----------------
IN: 
0x000ee617:  test   %esi,%esi
0x000ee619:  je     0xee636

----------------
IN: 
0x000ee61b:  cmpw   $0xaa55,0x7dfe
0x000ee624:  je     0xee636

----------------
IN: 
0x000ee636:  cmpb   $0x0,0xe8f01
0x000ee63d:  je     0xee6aa

----------------
IN: 
0x000ee6aa:  movzbl %bl,%edx
0x000ee6ad:  mov    $0x7c00,%eax
0x000ee6b2:  call   0xee563

----------------
IN: 
0x000ee563:  push   %esi
0x000ee564:  push   %ebx
0x000ee565:  sub    $0x28,%esp
0x000ee568:  mov    %eax,%ebx
0x000ee56a:  mov    %edx,%esi
0x000ee56c:  movzwl %ax,%eax
0x000ee56f:  push   %eax
0x000ee570:  mov    %ebx,%eax
0x000ee572:  shr    $0x10,%eax
0x000ee575:  push   %eax
0x000ee576:  push   $0xf1d3c
0x000ee57b:  call   0xec4d8

----------------
IN: 
0x000ee580:  mov    $0x26,%ecx
0x000ee585:  xor    %edx,%edx
0x000ee587:  lea    0xe(%esp),%eax
0x000ee58b:  call   0xeab7b

----------------
IN: 
0x000ee590:  movw   $0x200,0x32(%esp)
0x000ee597:  mov    %ebx,0x2e(%esp)
0x000ee59b:  mov    %esi,%eax
0x000ee59d:  mov    %al,0x22(%esp)
0x000ee5a1:  movw   $0xaa55,0x2a(%esp)
0x000ee5a8:  xor    %eax,%eax
0x000ee5aa:  call   0xebf98

----------------
IN: 
0x000ebfca:  movb   $0x1,0xe979e
0x000ebfd1:  pop    %ebx
0x000ebfd2:  ret    

----------------
IN: 
0x000ee5af:  mov    $0xf8148,%ecx
0x000ee5b4:  xor    %edx,%edx
0x000ee5b6:  lea    0xe(%esp),%eax
0x000ee5ba:  call   0xec0df

----------------
IN: 
0x00007c00:  cli    
0x00007c01:  cld    
0x00007c02:  xor    %ax,%ax
0x00007c04:  mov    %ax,%ds
0x00007c06:  mov    %ax,%es
0x00007c08:  mov    %ax,%ss

Servicing hardware INT=0x08
----------------
IN: 
0x000ffea5:  pushl  $0xf0fc
0x000ffeab:  jmp    0xfd2e4

----------------
IN: 
0x000fd2e4:  cli    
0x000fd2e5:  cld    
0x000fd2e6:  push   %ds
0x000fd2e7:  push   %eax
0x000fd2e9:  mov    $0xd980,%eax
0x000fd2ef:  mov    %ax,%ds
0x000fd2f1:  mov    0xf790,%eax
0x000fd2f5:  sub    $0x28,%eax
0x000fd2f9:  addr32 popl 0x1c(%eax)
0x000fd2fe:  addr32 popw (%eax)
0x000fd301:  addr32 mov %edi,0x4(%eax)
0x000fd306:  addr32 mov %esi,0x8(%eax)
0x000fd30b:  addr32 mov %ebp,0xc(%eax)
0x000fd310:  addr32 mov %ebx,0x10(%eax)
0x000fd315:  addr32 mov %edx,0x14(%eax)
0x000fd31a:  addr32 mov %ecx,0x18(%eax)
0x000fd31f:  addr32 mov %es,0x2(%eax)
0x000fd323:  pop    %ecx
0x000fd325:  addr32 mov %esp,0x20(%eax)
0x000fd32a:  addr32 mov %ss,0x24(%eax)
0x000fd32e:  mov    %ds,%dx
0x000fd330:  mov    %dx,%ss

----------------
IN: 
0x000fd332:  mov    %eax,%esp

----------------
IN: 
0x000fd335:  calll  *%ecx

----------------
IN: 
0x000ff0fc:  push   %ebp
0x000ff0fe:  push   %edi
0x000ff100:  push   %esi
0x000ff102:  push   %ebx
0x000ff104:  sub    $0x38,%esp
0x000ff108:  mov    $0x40,%eax
0x000ff10e:  mov    %ax,%es
0x000ff110:  mov    %es:0x6c,%eax
0x000ff115:  inc    %eax
0x000ff117:  cmp    $0x1800af,%eax
0x000ff11d:  jbe    0xff12c

----------------
IN: 
0x000ff12c:  mov    $0x40,%edx
0x000ff132:  mov    %dx,%es
0x000ff134:  mov    %eax,%es:0x6c
0x000ff139:  mov    %dx,%es
0x000ff13b:  mov    %es:0x40,%al
0x000ff13f:  test   %al,%al
0x000ff141:  je     0xff15c

----------------
IN: 
0x000ff15c:  mov    %cs:0x6030,%eax
0x000ff161:  addr32 mov %eax,(%esp)
0x000ff166:  test   %eax,%eax
0x000ff169:  je     0xff2e6

----------------
IN: 
0x000ff2e6:  mov    %cs:0x602c,%esi
0x000ff2ec:  test   %esi,%esi
0x000ff2ef:  je     0xff35f

----------------
IN: 
0x000ff35f:  mov    $0xd980,%eax
0x000ff365:  mov    %eax,%ebx
0x000ff368:  mov    %ax,%es
0x000ff36a:  mov    %es:-0x8ac,%bp
0x000ff36f:  test   %bp,%bp
0x000ff371:  je     0xff4c7

----------------
IN: 
0x000ff4c7:  mov    $0x26,%ecx
0x000ff4cd:  xor    %edx,%edx
0x000ff4d0:  addr32 lea 0x12(%esp),%eax
0x000ff4d6:  calll  0xf7245

----------------
IN: 
0x000f7245:  test   %ecx,%ecx
0x000f7248:  je     0xf7252

----------------
IN: 
0x000f724a:  dec    %ecx
0x000f724c:  addr32 mov %dl,(%eax,%ecx,1)
0x000f7250:  jmp    0xf7245

----------------
IN: 
0x000f7252:  retl   

----------------
IN: 
0x000ff4dc:  addr32 movw $0x200,0x36(%esp)
0x000ff4e3:  mov    $0xe829,%edx
0x000ff4e9:  movzwl %dx,%edx
0x000ff4ed:  calll  0xf8193

----------------
IN: 
0x000f8193:  addr32 mov %dx,0x20(%eax)
0x000f8197:  mov    %cs,%dx
0x000f8199:  addr32 mov %dx,0x22(%eax)
0x000f819d:  mov    %ss,%dx
0x000f819f:  movzwl %dx,%edx
0x000f81a3:  jmp    0xf8148

----------------
IN: 
0x000f8148:  push   %edi
0x000f814a:  push   %esi
0x000f814c:  push   %ebx
0x000f814e:  push   %esi
0x000f8150:  mov    %eax,%ebx
0x000f8153:  addr32 mov %edx,(%esp)
0x000f8158:  calll  0xf6da5

----------------
IN: 
0x000f6da5:  mov    %ss,%ax
0x000f6da7:  movzwl %ax,%edx
0x000f6dab:  xor    %eax,%eax
0x000f6dae:  cmp    $0xd980,%edx
0x000f6db5:  jne    0xf6dc7

----------------
IN: 
0x000f6db7:  mov    %esp,%eax
0x000f6dba:  cmp    $0xf798,%eax
0x000f6dc0:  seta   %al
0x000f6dc3:  movzbl %al,%eax
0x000f6dc7:  retl   

----------------
IN: 
0x000f815e:  test   %eax,%eax
0x000f8161:  addr32 mov (%esp),%edx
0x000f8166:  je     0xf8180

----------------
IN: 
0x000f8168:  movzwl %dx,%edx
0x000f816c:  mov    $0x8148,%ecx
0x000f8172:  mov    %ebx,%eax
0x000f8175:  pop    %ebx
0x000f8177:  pop    %ebx
0x000f8179:  pop    %esi
0x000f817b:  pop    %edi
0x000f817d:  jmp    0xf7bd2

----------------
IN: 
0x000f7bd2:  push   %edi
0x000f7bd4:  push   %esi
0x000f7bd6:  push   %ebx
0x000f7bd8:  mov    %ss,%bx
0x000f7bda:  movzwl %bx,%ebx
0x000f7bde:  cmp    $0xd980,%ebx
0x000f7be5:  jne    0xf7c25

----------------
IN: 
0x000f7be7:  mov    %esp,%ebx
0x000f7bea:  cmp    $0xf798,%ebx
0x000f7bf1:  jbe    0xf7c25

----------------
IN: 
0x000f7bf3:  mov    -0x870,%esi
0x000f7bf8:  mov    %ss,%bx
0x000f7bfa:  mov    %esp,-0x870
0x000f7bff:  addr32 mov -0x4(%esi),%edi
0x000f7c04:  mov    %di,%ss

----------------
IN: 
0x000f7c06:  addr32 mov -0x8(%esi),%sp

----------------
IN: 
0x000f7c0a:  mov    %di,%ds
0x000f7c0c:  calll  *%ecx

----------------
IN: 
0x000f6dc7:  retl   

----------------
IN: 
0x000f8180:  mov    %ebx,%eax
0x000f8183:  calll  0xfcfc7

----------------
IN: 
0x000fcfc7:  push   %ebp
0x000fcfc9:  push   %eax
0x000fcfcb:  push   %edx
0x000fcfcd:  mov    %dx,%ds
0x000fcfcf:  push   %cs
0x000fcfd0:  push   $0xd009
0x000fcfd3:  addr32 pushw 0x24(%eax)
0x000fcfd7:  addr32 pushl 0x20(%eax)
0x000fcfdc:  addr32 mov 0x4(%eax),%edi
0x000fcfe1:  addr32 mov 0x8(%eax),%esi
0x000fcfe6:  addr32 mov 0xc(%eax),%ebp
0x000fcfeb:  addr32 mov 0x10(%eax),%ebx
0x000fcff0:  addr32 mov 0x14(%eax),%edx
0x000fcff5:  addr32 mov 0x18(%eax),%ecx
0x000fcffa:  addr32 mov 0x2(%eax),%es
0x000fcffe:  addr32 pushl 0x1c(%eax)
0x000fd003:  addr32 mov (%eax),%ds
0x000fd006:  pop    %eax
0x000fd008:  iret   

----------------
IN: 
0x000fe829:  int    $0x1c

----------------
IN: 
0x000fff53:  iret   

----------------
IN: 
0x000fe82b:  lret   

----------------
IN: 
0x000fd009:  pushf  
0x000fd00a:  cli    
0x000fd00b:  cld    
0x000fd00c:  push   %ds
0x000fd00d:  push   %eax
0x000fd00f:  addr32 mov 0x8(%esp),%ds
0x000fd014:  addr32 mov 0xc(%esp),%eax
0x000fd01a:  addr32 popl 0x1c(%eax)
0x000fd01f:  addr32 popw (%eax)
0x000fd022:  addr32 mov %edi,0x4(%eax)
0x000fd027:  addr32 mov %esi,0x8(%eax)
0x000fd02c:  addr32 mov %ebp,0xc(%eax)
0x000fd031:  addr32 mov %ebx,0x10(%eax)
0x000fd036:  addr32 mov %edx,0x14(%eax)
0x000fd03b:  addr32 mov %ecx,0x18(%eax)
0x000fd040:  addr32 mov %es,0x2(%eax)
0x000fd044:  addr32 popw 0x24(%eax)
0x000fd048:  mov    %ss,%cx
0x000fd04a:  mov    %cx,%ds
0x000fd04c:  pop    %edx
0x000fd04e:  pop    %eax
0x000fd050:  pop    %ebp
0x000fd052:  retl   

----------------
IN: 
0x000f8189:  pop    %eax
0x000f818b:  pop    %ebx
0x000f818d:  pop    %esi
0x000f818f:  pop    %edi
0x000f8191:  retl   

----------------
IN: 
0x000f7c0f:  mov    %bx,%ds
0x000f7c11:  mov    %bx,%ss

----------------
IN: 
0x000f7c13:  mov    -0x870,%esp

----------------
IN: 
0x000f7c18:  mov    %esi,-0x870
0x000f7c1d:  pop    %ebx
0x000f7c1f:  pop    %esi
0x000f7c21:  pop    %edi
0x000f7c23:  retl   

----------------
IN: 
0x000ff4f3:  mov    $0x20,%al
0x000ff4f5:  out    %al,$0x20
0x000ff4f7:  add    $0x38,%esp
0x000ff4fb:  pop    %ebx
0x000ff4fd:  pop    %esi
0x000ff4ff:  pop    %edi
0x000ff501:  pop    %ebp
0x000ff503:  retl   

----------------
IN: 
0x000fd338:  mov    %esp,%eax
0x000fd33b:  addr32 mov 0x24(%eax),%ss

----------------
IN: 
0x000fd33f:  addr32 mov 0x20(%eax),%esp

----------------
IN: 
0x000fd344:  addr32 mov 0x4(%eax),%edi
0x000fd349:  addr32 mov 0x8(%eax),%esi
0x000fd34e:  addr32 mov 0xc(%eax),%ebp
0x000fd353:  addr32 mov 0x10(%eax),%ebx
0x000fd358:  addr32 mov 0x14(%eax),%edx
0x000fd35d:  addr32 mov 0x18(%eax),%ecx
0x000fd362:  addr32 mov 0x2(%eax),%es
0x000fd366:  addr32 pushl 0x1c(%eax)
0x000fd36b:  addr32 mov (%eax),%ds
0x000fd36e:  pop    %eax
0x000fd370:  iret   

----------------
IN: 
0x00007c0a:  in     $0x64,%al

----------------
IN: 
0x00007c0c:  test   $0x2,%al
0x00007c0e:  jne    0x7c0a

----------------
IN: 
0x00007c10:  mov    $0xd1,%al
0x00007c12:  out    %al,$0x64
0x00007c14:  in     $0x64,%al
0x00007c16:  test   $0x2,%al
0x00007c18:  jne    0x7c14

----------------
IN: 
0x00007c1a:  mov    $0xdf,%al
0x00007c1c:  out    %al,$0x60
0x00007c1e:  lgdtw  0x7c6c
0x00007c23:  mov    %cr0,%eax
0x00007c26:  or     $0x1,%eax
0x00007c2a:  mov    %eax,%cr0

----------------
IN: 
0x00007c2d:  ljmp   $0x8,$0x7c32

----------------
IN: 
0x00007c32:  mov    $0x10,%ax
0x00007c36:  mov    %eax,%ds

----------------
IN: 
0x00007c38:  mov    %eax,%es

----------------
IN: 
0x00007c3a:  mov    %eax,%fs
0x00007c3c:  mov    %eax,%gs
0x00007c3e:  mov    %eax,%ss

----------------
IN: 
0x00007c40:  mov    $0x0,%ebp

----------------
IN: 
0x00007c45:  mov    $0x7c00,%esp
0x00007c4a:  call   0x7d0f

----------------
IN: 
0x00007d0f:  push   %ebp
0x00007d10:  mov    0x7dec,%eax
0x00007d15:  xor    %ecx,%ecx
0x00007d17:  lea    0x0(,%eax,8),%edx
0x00007d1e:  mov    0x7de8,%eax
0x00007d23:  mov    %esp,%ebp
0x00007d25:  push   %esi
0x00007d26:  push   %ebx
0x00007d27:  call   0x7c72

----------------
IN: 
0x00007c72:  push   %ebp
0x00007c73:  mov    %esp,%ebp
0x00007c75:  push   %edi
0x00007c76:  push   %esi
0x00007c77:  push   %ebx
0x00007c78:  push   %ebx
0x00007c79:  mov    %eax,%ebx
0x00007c7b:  add    %edx,%eax
0x00007c7d:  xor    %edx,%edx
0x00007c7f:  mov    %eax,-0x10(%ebp)
0x00007c82:  mov    %ecx,%eax
0x00007c84:  divl   0x7dec
0x00007c8a:  sub    %edx,%ebx
0x00007c8c:  lea    0x1(%eax),%esi
0x00007c8f:  cmp    -0x10(%ebp),%ebx
0x00007c92:  jae    0x7d09

----------------
IN: 
0x00007c94:  mov    $0x1f7,%edx
0x00007c99:  in     (%dx),%al
0x00007c9a:  and    $0xffffffc0,%eax
0x00007c9d:  cmp    $0x40,%al
0x00007c9f:  jne    0x7c94

----------------
IN: 
0x00007ca1:  mov    $0x1f2,%edx
0x00007ca6:  mov    $0x1,%al
0x00007ca8:  out    %al,(%dx)
0x00007ca9:  mov    $0x1f3,%edx
0x00007cae:  mov    %esi,%eax
0x00007cb0:  out    %al,(%dx)
0x00007cb1:  mov    %esi,%eax
0x00007cb3:  mov    $0x1f4,%edx
0x00007cb8:  shr    $0x8,%eax
0x00007cbb:  out    %al,(%dx)
0x00007cbc:  mov    %esi,%eax
0x00007cbe:  mov    $0x1f5,%edx
0x00007cc3:  shr    $0x10,%eax
0x00007cc6:  out    %al,(%dx)
0x00007cc7:  mov    %esi,%eax
0x00007cc9:  mov    $0x1f6,%edx
0x00007cce:  shr    $0x18,%eax
0x00007cd1:  and    $0xf,%eax
0x00007cd4:  or     $0xffffffe0,%eax
0x00007cd7:  out    %al,(%dx)
0x00007cd8:  mov    $0x20,%al
0x00007cda:  mov    $0x1f7,%edx
0x00007cdf:  out    %al,(%dx)
0x00007ce0:  mov    $0x1f7,%edx
0x00007ce5:  in     (%dx),%al
0x00007ce6:  and    $0xffffffc0,%eax
0x00007ce9:  cmp    $0x40,%al
0x00007ceb:  jne    0x7ce0

----------------
IN: 
0x00007ce0:  mov    $0x1f7,%edx
0x00007ce5:  in     (%dx),%al
0x00007ce6:  and    $0xffffffc0,%eax
0x00007ce9:  cmp    $0x40,%al
0x00007ceb:  jne    0x7ce0

----------------
IN: 
0x00007ced:  mov    0x7dec,%ecx
0x00007cf3:  mov    %ebx,%edi
0x00007cf5:  mov    $0x1f0,%edx
0x00007cfa:  shr    $0x2,%ecx
0x00007cfd:  cld    
0x00007cfe:  repnz insl (%dx),%es:(%edi)

----------------
IN: 
0x00007cfe:  repnz insl (%dx),%es:(%edi)

----------------
IN: 
0x00007d00:  add    0x7dec,%ebx
0x00007d06:  inc    %esi
0x00007d07:  jmp    0x7c8f

----------------
IN: 
0x00007c8f:  cmp    -0x10(%ebp),%ebx
0x00007c92:  jae    0x7d09

----------------
IN: 
0x00007d09:  pop    %eax
0x00007d0a:  pop    %ebx
0x00007d0b:  pop    %esi
0x00007d0c:  pop    %edi
0x00007d0d:  pop    %ebp
0x00007d0e:  ret    

----------------
IN: 
0x00007d2c:  mov    0x7de8,%eax
0x00007d31:  cmpl   $0x464c457f,(%eax)
0x00007d37:  jne    0x7d72

----------------
IN: 
0x00007d39:  mov    0x1c(%eax),%ebx
0x00007d3c:  movzwl 0x2c(%eax),%esi
0x00007d40:  add    %eax,%ebx
0x00007d42:  shl    $0x5,%esi
0x00007d45:  add    %ebx,%esi
0x00007d47:  cmp    %esi,%ebx
0x00007d49:  jae    0x7d63

----------------
IN: 
0x00007d4b:  mov    0x8(%ebx),%eax
0x00007d4e:  mov    0x4(%ebx),%ecx
0x00007d51:  add    $0x20,%ebx
0x00007d54:  mov    -0xc(%ebx),%edx
0x00007d57:  and    $0xffffff,%eax
0x00007d5c:  call   0x7c72

----------------
IN: 
0x00007d61:  jmp    0x7d47

----------------
IN: 
0x00007d47:  cmp    %esi,%ebx
0x00007d49:  jae    0x7d63

----------------
IN: 
0x00007d63:  mov    0x7de8,%eax
0x00007d68:  mov    0x18(%eax),%eax
0x00007d6b:  and    $0xffffff,%eax
0x00007d70:  call   *%eax

----------------
IN: 
0x00100000:  push   %ebp
0x00100001:  mov    %esp,%ebp
0x00100003:  sub    $0x18,%esp
0x00100006:  mov    $0x110d68,%eax
0x0010000b:  sub    $0x10fa16,%eax
0x00100010:  sub    $0x4,%esp
0x00100013:  push   %eax
0x00100014:  push   $0x0
0x00100016:  push   $0x10fa16
0x0010001b:  call   0x1033d5

----------------
IN: 
0x001033d5:  push   %ebp
0x001033d6:  mov    %esp,%ebp
0x001033d8:  push   %edi
0x001033d9:  sub    $0x24,%esp
0x001033dc:  mov    0xc(%ebp),%eax
0x001033df:  mov    %al,-0x28(%ebp)
0x001033e2:  movsbl -0x28(%ebp),%eax
0x001033e6:  mov    0x8(%ebp),%edx
0x001033e9:  mov    %edx,-0x8(%ebp)
0x001033ec:  mov    %al,-0x9(%ebp)
0x001033ef:  mov    0x10(%ebp),%eax
0x001033f2:  mov    %eax,-0x10(%ebp)
0x001033f5:  mov    -0x10(%ebp),%ecx
0x001033f8:  movzbl -0x9(%ebp),%eax
0x001033fc:  mov    -0x8(%ebp),%edx
0x001033ff:  mov    %edx,%edi
0x00103401:  rep stos %al,%es:(%edi)

----------------
IN: 
0x00103401:  rep stos %al,%es:(%edi)

----------------
IN: 
0x00103403:  mov    %edi,%edx
0x00103405:  mov    %ecx,-0x14(%ebp)
0x00103408:  mov    %edx,-0x18(%ebp)
0x0010340b:  mov    -0x8(%ebp),%eax
0x0010340e:  mov    -0x4(%ebp),%edi
0x00103411:  leave  
0x00103412:  ret    

----------------
IN: 
0x00100020:  add    $0x10,%esp
0x00100023:  call   0x10157d

----------------
IN: 
0x0010157d:  push   %ebp
0x0010157e:  mov    %esp,%ebp
0x00101580:  sub    $0x8,%esp
0x00101583:  call   0x100df3

----------------
IN: 
0x00100df3:  push   %ebp
0x00100df4:  mov    %esp,%ebp
0x00100df6:  sub    $0x20,%esp
0x00100df9:  movl   $0xb8000,-0x4(%ebp)
0x00100e00:  mov    -0x4(%ebp),%eax
0x00100e03:  movzwl (%eax),%eax
0x00100e06:  mov    %ax,-0x6(%ebp)
0x00100e0a:  mov    -0x4(%ebp),%eax
0x00100e0d:  movw   $0xa55a,(%eax)
0x00100e12:  mov    -0x4(%ebp),%eax
0x00100e15:  movzwl (%eax),%eax
0x00100e18:  cmp    $0xa55a,%ax
0x00100e1c:  je     0x100e30

----------------
IN: 
0x00100e30:  mov    -0x4(%ebp),%eax
0x00100e33:  movzwl -0x6(%ebp),%edx
0x00100e37:  mov    %dx,(%eax)
0x00100e3a:  movw   $0x3d4,0x10fe66
0x00100e43:  movzwl 0x10fe66,%eax
0x00100e4a:  movzwl %ax,%eax
0x00100e4d:  mov    %ax,-0x1a(%ebp)
0x00100e51:  movb   $0xe,-0x1b(%ebp)
0x00100e55:  movzbl -0x1b(%ebp),%eax
0x00100e59:  movzwl -0x1a(%ebp),%edx
0x00100e5d:  out    %al,(%dx)
0x00100e5e:  nop    
0x00100e5f:  movzwl 0x10fe66,%eax
0x00100e66:  add    $0x1,%eax
0x00100e69:  movzwl %ax,%eax
0x00100e6c:  mov    %ax,-0x16(%ebp)
0x00100e70:  movzwl -0x16(%ebp),%eax
0x00100e74:  mov    %eax,%edx
0x00100e76:  in     (%dx),%al
0x00100e77:  mov    %al,-0x17(%ebp)
0x00100e7a:  movzbl -0x17(%ebp),%eax
0x00100e7e:  movzbl %al,%eax
0x00100e81:  shl    $0x8,%eax
0x00100e84:  mov    %eax,-0xc(%ebp)
0x00100e87:  movzwl 0x10fe66,%eax
0x00100e8e:  movzwl %ax,%eax
0x00100e91:  mov    %ax,-0x12(%ebp)
0x00100e95:  movb   $0xf,-0x13(%ebp)
0x00100e99:  movzbl -0x13(%ebp),%eax
0x00100e9d:  movzwl -0x12(%ebp),%edx
0x00100ea1:  out    %al,(%dx)
0x00100ea2:  nop    
0x00100ea3:  movzwl 0x10fe66,%eax
0x00100eaa:  add    $0x1,%eax
0x00100ead:  movzwl %ax,%eax
0x00100eb0:  mov    %ax,-0xe(%ebp)
0x00100eb4:  movzwl -0xe(%ebp),%eax
0x00100eb8:  mov    %eax,%edx
0x00100eba:  in     (%dx),%al
0x00100ebb:  mov    %al,-0xf(%ebp)
0x00100ebe:  movzbl -0xf(%ebp),%eax
0x00100ec2:  movzbl %al,%eax
0x00100ec5:  or     %eax,-0xc(%ebp)
0x00100ec8:  mov    -0x4(%ebp),%eax
0x00100ecb:  mov    %eax,0x10fe60
0x00100ed0:  mov    -0xc(%ebp),%eax
0x00100ed3:  mov    %ax,0x10fe64
0x00100ed9:  nop    
0x00100eda:  leave  
0x00100edb:  ret    

----------------
IN: 
0x00101588:  call   0x100edc

----------------
IN: 
0x00100edc:  push   %ebp
0x00100edd:  mov    %esp,%ebp
0x00100edf:  sub    $0x38,%esp
0x00100ee2:  movw   $0x3fa,-0x2e(%ebp)
0x00100ee8:  movb   $0x0,-0x2f(%ebp)
0x00100eec:  movzbl -0x2f(%ebp),%eax
0x00100ef0:  movzwl -0x2e(%ebp),%edx
0x00100ef4:  out    %al,(%dx)
0x00100ef5:  nop    
0x00100ef6:  movw   $0x3fb,-0x2a(%ebp)
0x00100efc:  movb   $0x80,-0x2b(%ebp)
0x00100f00:  movzbl -0x2b(%ebp),%eax
0x00100f04:  movzwl -0x2a(%ebp),%edx
0x00100f08:  out    %al,(%dx)
0x00100f09:  nop    
0x00100f0a:  movw   $0x3f8,-0x26(%ebp)
0x00100f10:  movb   $0xc,-0x27(%ebp)
0x00100f14:  movzbl -0x27(%ebp),%eax
0x00100f18:  movzwl -0x26(%ebp),%edx
0x00100f1c:  out    %al,(%dx)
0x00100f1d:  nop    
0x00100f1e:  movw   $0x3f9,-0x22(%ebp)
0x00100f24:  movb   $0x0,-0x23(%ebp)
0x00100f28:  movzbl -0x23(%ebp),%eax
0x00100f2c:  movzwl -0x22(%ebp),%edx
0x00100f30:  out    %al,(%dx)
0x00100f31:  nop    
0x00100f32:  movw   $0x3fb,-0x1e(%ebp)
0x00100f38:  movb   $0x3,-0x1f(%ebp)
0x00100f3c:  movzbl -0x1f(%ebp),%eax
0x00100f40:  movzwl -0x1e(%ebp),%edx
0x00100f44:  out    %al,(%dx)
0x00100f45:  nop    
0x00100f46:  movw   $0x3fc,-0x1a(%ebp)
0x00100f4c:  movb   $0x0,-0x1b(%ebp)
0x00100f50:  movzbl -0x1b(%ebp),%eax
0x00100f54:  movzwl -0x1a(%ebp),%edx
0x00100f58:  out    %al,(%dx)
0x00100f59:  nop    
0x00100f5a:  movw   $0x3f9,-0x16(%ebp)
0x00100f60:  movb   $0x1,-0x17(%ebp)
0x00100f64:  movzbl -0x17(%ebp),%eax
0x00100f68:  movzwl -0x16(%ebp),%edx
0x00100f6c:  out    %al,(%dx)
0x00100f6d:  nop    
0x00100f6e:  movw   $0x3fd,-0x12(%ebp)
0x00100f74:  movzwl -0x12(%ebp),%eax
0x00100f78:  mov    %eax,%edx
0x00100f7a:  in     (%dx),%al
0x00100f7b:  mov    %al,-0x13(%ebp)
0x00100f7e:  movzbl -0x13(%ebp),%eax
0x00100f82:  cmp    $0xff,%al
0x00100f84:  setne  %al
0x00100f87:  movzbl %al,%eax
0x00100f8a:  mov    %eax,0x10fe68
0x00100f8f:  movw   $0x3fa,-0xe(%ebp)
0x00100f95:  movzwl -0xe(%ebp),%eax
0x00100f99:  mov    %eax,%edx
0x00100f9b:  in     (%dx),%al
0x00100f9c:  mov    %al,-0xf(%ebp)
0x00100f9f:  movw   $0x3f8,-0xa(%ebp)
0x00100fa5:  movzwl -0xa(%ebp),%eax
0x00100fa9:  mov    %eax,%edx
0x00100fab:  in     (%dx),%al
0x00100fac:  mov    %al,-0xb(%ebp)
0x00100faf:  mov    0x10fe68,%eax
0x00100fb4:  test   %eax,%eax
0x00100fb6:  je     0x100fc5

----------------
IN: 
0x00100fb8:  sub    $0xc,%esp
0x00100fbb:  push   $0x4
0x00100fbd:  call   0x1016a5

----------------
IN: 
0x001016a5:  push   %ebp
0x001016a6:  mov    %esp,%ebp
0x001016a8:  mov    0x8(%ebp),%eax
0x001016ab:  mov    $0x1,%edx
0x001016b0:  mov    %eax,%ecx
0x001016b2:  shl    %cl,%edx
0x001016b4:  mov    %edx,%eax
0x001016b6:  not    %eax
0x001016b8:  mov    %eax,%edx
0x001016ba:  movzwl 0x10f550,%eax
0x001016c1:  and    %edx,%eax
0x001016c3:  movzwl %ax,%eax
0x001016c6:  push   %eax
0x001016c7:  call   0x10164a

----------------
IN: 
0x0010164a:  push   %ebp
0x0010164b:  mov    %esp,%ebp
0x0010164d:  sub    $0x14,%esp
0x00101650:  mov    0x8(%ebp),%eax
0x00101653:  mov    %ax,-0x14(%ebp)
0x00101657:  movzwl -0x14(%ebp),%eax
0x0010165b:  mov    %ax,0x10f550
0x00101661:  mov    0x11008c,%eax
0x00101666:  test   %eax,%eax
0x00101668:  je     0x1016a2

----------------
IN: 
0x001016a2:  nop    
0x001016a3:  leave  
0x001016a4:  ret    

----------------
IN: 
0x001016cc:  add    $0x4,%esp
0x001016cf:  nop    
0x001016d0:  leave  
0x001016d1:  ret    

----------------
IN: 
0x00100fc2:  add    $0x10,%esp
0x00100fc5:  nop    
0x00100fc6:  leave  
0x00100fc7:  ret    

----------------
IN: 
0x0010158d:  call   0x101562

----------------
IN: 
0x00101562:  push   %ebp
0x00101563:  mov    %esp,%ebp
0x00101565:  sub    $0x8,%esp
0x00101568:  call   0x101549

----------------
IN: 
0x00101549:  push   %ebp
0x0010154a:  mov    %esp,%ebp
0x0010154c:  sub    $0x8,%esp
0x0010154f:  sub    $0xc,%esp
0x00101552:  push   $0x1013bb
0x00101557:  call   0x1012f5

----------------
IN: 
0x001012f5:  push   %ebp
0x001012f6:  mov    %esp,%ebp
0x001012f8:  sub    $0x18,%esp
0x001012fb:  jmp    0x101330

----------------
IN: 
0x00101330:  mov    0x8(%ebp),%eax
0x00101333:  call   *%eax

----------------
IN: 
0x001013bb:  push   %ebp
0x001013bc:  mov    %esp,%ebp
0x001013be:  sub    $0x28,%esp
0x001013c1:  movw   $0x64,-0x10(%ebp)
0x001013c7:  movzwl -0x10(%ebp),%eax
0x001013cb:  mov    %eax,%edx
0x001013cd:  in     (%dx),%al
0x001013ce:  mov    %al,-0x11(%ebp)
0x001013d1:  movzbl -0x11(%ebp),%eax
0x001013d5:  movzbl %al,%eax
0x001013d8:  and    $0x1,%eax
0x001013db:  test   %eax,%eax
0x001013dd:  jne    0x1013e9

----------------
IN: 
0x001013df:  mov    $0xffffffff,%eax
0x001013e4:  jmp    0x101547

----------------
IN: 
0x00101547:  leave  
0x00101548:  ret    

----------------
IN: 
0x00101335:  mov    %eax,-0xc(%ebp)
0x00101338:  cmpl   $0xffffffff,-0xc(%ebp)
0x0010133c:  jne    0x1012fd

----------------
IN: 
0x0010133e:  nop    
0x0010133f:  nop    
0x00101340:  leave  
0x00101341:  ret    

----------------
IN: 
0x0010155c:  add    $0x10,%esp
0x0010155f:  nop    
0x00101560:  leave  
0x00101561:  ret    

----------------
IN: 
0x0010156d:  sub    $0xc,%esp
0x00101570:  push   $0x1
0x00101572:  call   0x1016a5

----------------
IN: 
0x00101577:  add    $0x10,%esp
0x0010157a:  nop    
0x0010157b:  leave  
0x0010157c:  ret    

----------------
IN: 
0x00101592:  mov    0x10fe68,%eax
0x00101597:  test   %eax,%eax
0x00101599:  jne    0x1015ab

----------------
IN: 
0x001015ab:  nop    
0x001015ac:  leave  
0x001015ad:  ret    

----------------
IN: 
0x00100028:  movl   $0x103560,-0xc(%ebp)
0x0010002f:  sub    $0x8,%esp
0x00100032:  pushl  -0xc(%ebp)
0x00100035:  push   $0x10357c
0x0010003a:  call   0x10030b

----------------
IN: 
0x0010030b:  push   %ebp
0x0010030c:  mov    %esp,%ebp
0x0010030e:  sub    $0x18,%esp
0x00100311:  lea    0xc(%ebp),%eax
0x00100314:  mov    %eax,-0x10(%ebp)
0x00100317:  mov    -0x10(%ebp),%eax
0x0010031a:  sub    $0x8,%esp
0x0010031d:  push   %eax
0x0010031e:  pushl  0x8(%ebp)
0x00100321:  call   0x1002e2

----------------
IN: 
0x001002e2:  push   %ebp
0x001002e3:  mov    %esp,%ebp
0x001002e5:  sub    $0x18,%esp
0x001002e8:  movl   $0x0,-0xc(%ebp)
0x001002ef:  pushl  0xc(%ebp)
0x001002f2:  pushl  0x8(%ebp)
0x001002f5:  lea    -0xc(%ebp),%eax
0x001002f8:  push   %eax
0x001002f9:  push   $0x1002be
0x001002fe:  call   0x102c45

----------------
IN: 
0x00102c45:  push   %ebp
0x00102c46:  mov    %esp,%ebp
0x00102c48:  push   %esi
0x00102c49:  push   %ebx
0x00102c4a:  sub    $0x20,%esp
0x00102c4d:  jmp    0x102c66

----------------
IN: 
0x00102c66:  mov    0x10(%ebp),%eax
0x00102c69:  lea    0x1(%eax),%edx
0x00102c6c:  mov    %edx,0x10(%ebp)
0x00102c6f:  movzbl (%eax),%eax
0x00102c72:  movzbl %al,%ebx
0x00102c75:  cmp    $0x25,%ebx
0x00102c78:  jne    0x102c4f

----------------
IN: 
0x00102c7a:  movb   $0x20,-0x25(%ebp)
0x00102c7e:  movl   $0xffffffff,-0x1c(%ebp)
0x00102c85:  mov    -0x1c(%ebp),%eax
0x00102c88:  mov    %eax,-0x18(%ebp)
0x00102c8b:  movl   $0x0,-0x24(%ebp)
0x00102c92:  mov    -0x24(%ebp),%eax
0x00102c95:  mov    %eax,-0x20(%ebp)
0x00102c98:  mov    0x10(%ebp),%eax
0x00102c9b:  lea    0x1(%eax),%edx
0x00102c9e:  mov    %edx,0x10(%ebp)
0x00102ca1:  movzbl (%eax),%eax
0x00102ca4:  movzbl %al,%ebx
0x00102ca7:  lea    -0x23(%ebx),%eax
0x00102caa:  cmp    $0x55,%eax
0x00102cad:  ja     0x102fb8

----------------
IN: 
0x00102cb3:  mov    0x103d14(,%eax,4),%eax
0x00102cba:  jmp    *%eax

----------------
IN: 
0x00102dc2:  mov    0x14(%ebp),%eax
0x00102dc5:  lea    0x4(%eax),%edx
0x00102dc8:  mov    %edx,0x14(%ebp)
0x00102dcb:  mov    (%eax),%esi
0x00102dcd:  test   %esi,%esi
0x00102dcf:  jne    0x102dd6

----------------
IN: 
0x00102dd6:  cmpl   $0x0,-0x18(%ebp)
0x00102dda:  jle    0x102e52

----------------
IN: 
0x00102e52:  mov    %esi,%eax
0x00102e54:  lea    0x1(%eax),%esi
0x00102e57:  movzbl (%eax),%eax
0x00102e5a:  movsbl %al,%ebx
0x00102e5d:  test   %ebx,%ebx
0x00102e5f:  je     0x102e87

----------------
IN: 
0x00102e61:  cmpl   $0x0,-0x1c(%ebp)
0x00102e65:  js     0x102e1d

----------------
IN: 
0x00102e1d:  cmpl   $0x0,-0x24(%ebp)
0x00102e21:  je     0x102e3f

----------------
IN: 
0x00102e3f:  sub    $0x8,%esp
0x00102e42:  pushl  0xc(%ebp)
0x00102e45:  push   %ebx
0x00102e46:  mov    0x8(%ebp),%eax
0x00102e49:  call   *%eax

----------------
IN: 
0x001002be:  push   %ebp
0x001002bf:  mov    %esp,%ebp
0x001002c1:  sub    $0x8,%esp
0x001002c4:  sub    $0xc,%esp
0x001002c7:  pushl  0x8(%ebp)
0x001002ca:  call   0x1015ae

----------------
IN: 
0x001015ae:  push   %ebp
0x001015af:  mov    %esp,%ebp
0x001015b1:  sub    $0x8,%esp
0x001015b4:  pushl  0x8(%ebp)
0x001015b7:  call   0x101045

----------------
IN: 
0x00101045:  push   %ebp
0x00101046:  mov    %esp,%ebp
0x00101048:  cmpl   $0x8,0x8(%ebp)
0x0010104c:  je     0x10105b

----------------
IN: 
0x0010104e:  pushl  0x8(%ebp)
0x00101051:  call   0x100fc8

----------------
IN: 
0x00100fc8:  push   %ebp
0x00100fc9:  mov    %esp,%ebp
0x00100fcb:  sub    $0x20,%esp
0x00100fce:  movl   $0x0,-0x4(%ebp)
0x00100fd5:  jmp    0x100fe0

----------------
IN: 
0x00100fe0:  movw   $0x379,-0x6(%ebp)
0x00100fe6:  movzwl -0x6(%ebp),%eax
0x00100fea:  mov    %eax,%edx
0x00100fec:  in     (%dx),%al
0x00100fed:  mov    %al,-0x7(%ebp)
0x00100ff0:  movzbl -0x7(%ebp),%eax
0x00100ff4:  test   %al,%al
0x00100ff6:  js     0x101001

----------------
IN: 
0x00101001:  mov    0x8(%ebp),%eax
0x00101004:  movzbl %al,%eax
0x00101007:  movw   $0x378,-0x12(%ebp)
0x0010100d:  mov    %al,-0x13(%ebp)
0x00101010:  movzbl -0x13(%ebp),%eax
0x00101014:  movzwl -0x12(%ebp),%edx
0x00101018:  out    %al,(%dx)
0x00101019:  nop    
0x0010101a:  movw   $0x37a,-0xe(%ebp)
0x00101020:  movb   $0xd,-0xf(%ebp)
0x00101024:  movzbl -0xf(%ebp),%eax
0x00101028:  movzwl -0xe(%ebp),%edx
0x0010102c:  out    %al,(%dx)
0x0010102d:  nop    
0x0010102e:  movw   $0x37a,-0xa(%ebp)
0x00101034:  movb   $0x8,-0xb(%ebp)
0x00101038:  movzbl -0xb(%ebp),%eax
0x0010103c:  movzwl -0xa(%ebp),%edx
0x00101040:  out    %al,(%dx)
0x00101041:  nop    
0x00101042:  nop    
0x00101043:  leave  
0x00101044:  ret    

----------------
IN: 
0x00101056:  add    $0x4,%esp
0x00101059:  jmp    0x101079

----------------
IN: 
0x00101079:  nop    
0x0010107a:  leave  
0x0010107b:  ret    

----------------
IN: 
0x001015bc:  add    $0x4,%esp
0x001015bf:  sub    $0xc,%esp
0x001015c2:  pushl  0x8(%ebp)
0x001015c5:  call   0x10107c

----------------
IN: 
0x0010107c:  push   %ebp
0x0010107d:  mov    %esp,%ebp
0x0010107f:  push   %ebx
0x00101080:  sub    $0x24,%esp
0x00101083:  mov    0x8(%ebp),%eax
0x00101086:  mov    $0x0,%al
0x00101088:  test   %eax,%eax
0x0010108a:  jne    0x101093

----------------
IN: 
0x0010108c:  orl    $0x700,0x8(%ebp)
0x00101093:  mov    0x8(%ebp),%eax
0x00101096:  movzbl %al,%eax
0x00101099:  cmp    $0xd,%eax
0x0010109c:  je     0x101109

----------------
IN: 
0x0010109e:  cmp    $0xd,%eax
0x001010a1:  jg     0x101143

----------------
IN: 
0x00101143:  mov    0x10fe60,%ecx
0x00101149:  movzwl 0x10fe64,%eax
0x00101150:  lea    0x1(%eax),%edx
0x00101153:  mov    %dx,0x10fe64
0x0010115a:  movzwl %ax,%eax
0x0010115d:  add    %eax,%eax
0x0010115f:  add    %ecx,%eax
0x00101161:  mov    0x8(%ebp),%edx
0x00101164:  mov    %dx,(%eax)
0x00101167:  jmp    0x10116a

----------------
IN: 
0x0010116a:  movzwl 0x10fe64,%eax
0x00101171:  cmp    $0x7cf,%ax
0x00101175:  jbe    0x1011d1

----------------
IN: 
0x001011d1:  movzwl 0x10fe66,%eax
0x001011d8:  movzwl %ax,%eax
0x001011db:  mov    %ax,-0x1a(%ebp)
0x001011df:  movb   $0xe,-0x1b(%ebp)
0x001011e3:  movzbl -0x1b(%ebp),%eax
0x001011e7:  movzwl -0x1a(%ebp),%edx
0x001011eb:  out    %al,(%dx)
0x001011ec:  nop    
0x001011ed:  movzwl 0x10fe64,%eax
0x001011f4:  shr    $0x8,%ax
0x001011f8:  movzbl %al,%eax
0x001011fb:  movzwl 0x10fe66,%edx
0x00101202:  add    $0x1,%edx
0x00101205:  movzwl %dx,%edx
0x00101208:  mov    %dx,-0x16(%ebp)
0x0010120c:  mov    %al,-0x17(%ebp)
0x0010120f:  movzbl -0x17(%ebp),%eax
0x00101213:  movzwl -0x16(%ebp),%edx
0x00101217:  out    %al,(%dx)
0x00101218:  nop    
0x00101219:  movzwl 0x10fe66,%eax
0x00101220:  movzwl %ax,%eax
0x00101223:  mov    %ax,-0x12(%ebp)
0x00101227:  movb   $0xf,-0x13(%ebp)
0x0010122b:  movzbl -0x13(%ebp),%eax
0x0010122f:  movzwl -0x12(%ebp),%edx
0x00101233:  out    %al,(%dx)
0x00101234:  nop    
0x00101235:  movzwl 0x10fe64,%eax
0x0010123c:  movzbl %al,%eax
0x0010123f:  movzwl 0x10fe66,%edx
0x00101246:  add    $0x1,%edx
0x00101249:  movzwl %dx,%edx
0x0010124c:  mov    %dx,-0xe(%ebp)
0x00101250:  mov    %al,-0xf(%ebp)
0x00101253:  movzbl -0xf(%ebp),%eax
0x00101257:  movzwl -0xe(%ebp),%edx
0x0010125b:  out    %al,(%dx)
0x0010125c:  nop    
0x0010125d:  nop    
0x0010125e:  mov    -0x4(%ebp),%ebx
0x00101261:  leave  
0x00101262:  ret    

----------------
IN: 
0x001015ca:  add    $0x10,%esp
0x001015cd:  sub    $0xc,%esp
0x001015d0:  pushl  0x8(%ebp)
0x001015d3:  call   0x1012be

----------------
IN: 
0x001012be:  push   %ebp
0x001012bf:  mov    %esp,%ebp
0x001012c1:  cmpl   $0x8,0x8(%ebp)
0x001012c5:  je     0x1012d4

----------------
IN: 
0x001012c7:  pushl  0x8(%ebp)
0x001012ca:  call   0x101263

----------------
IN: 
0x00101263:  push   %ebp
0x00101264:  mov    %esp,%ebp
0x00101266:  sub    $0x10,%esp
0x00101269:  movl   $0x0,-0x4(%ebp)
0x00101270:  jmp    0x10127b

----------------
IN: 
0x0010127b:  movw   $0x3fd,-0x6(%ebp)
0x00101281:  movzwl -0x6(%ebp),%eax
0x00101285:  mov    %eax,%edx
0x00101287:  in     (%dx),%al
0x00101288:  mov    %al,-0x7(%ebp)
0x0010128b:  movzbl -0x7(%ebp),%eax
0x0010128f:  movzbl %al,%eax
0x00101292:  and    $0x20,%eax
0x00101295:  test   %eax,%eax
0x00101297:  jne    0x1012a2

----------------
IN: 
0x001012a2:  mov    0x8(%ebp),%eax
0x001012a5:  movzbl %al,%eax
0x001012a8:  movw   $0x3f8,-0xa(%ebp)
0x001012ae:  mov    %al,-0xb(%ebp)
0x001012b1:  movzbl -0xb(%ebp),%eax
0x001012b5:  movzwl -0xa(%ebp),%edx
0x001012b9:  out    %al,(%dx)
0x001012ba:  nop    
0x001012bb:  nop    
0x001012bc:  leave  
0x001012bd:  ret    

----------------
IN: 
0x001012cf:  add    $0x4,%esp
0x001012d2:  jmp    0x1012f2

----------------
IN: 
0x001012f2:  nop    
0x001012f3:  leave  
0x001012f4:  ret    

----------------
IN: 
0x001015d8:  add    $0x10,%esp
0x001015db:  nop    
0x001015dc:  leave  
0x001015dd:  ret    

----------------
IN: 
0x001002cf:  add    $0x10,%esp
0x001002d2:  mov    0xc(%ebp),%eax
0x001002d5:  mov    (%eax),%eax
0x001002d7:  lea    0x1(%eax),%edx
0x001002da:  mov    0xc(%ebp),%eax
0x001002dd:  mov    %edx,(%eax)
0x001002df:  nop    
0x001002e0:  leave  
0x001002e1:  ret    

----------------
IN: 
0x00102e4b:  add    $0x10,%esp
0x00102e4e:  subl   $0x1,-0x18(%ebp)
0x00102e52:  mov    %esi,%eax
0x00102e54:  lea    0x1(%eax),%esi
0x00102e57:  movzbl (%eax),%eax
0x00102e5a:  movsbl %al,%ebx
0x00102e5d:  test   %ebx,%ebx
0x00102e5f:  je     0x102e87

----------------
IN: 
0x00102e87:  cmpl   $0x0,-0x18(%ebp)
0x00102e8b:  jg     0x102e73

----------------
IN: 
0x00102e8d:  jmp    0x102fe0

----------------
IN: 
0x00102fe0:  jmp    0x102c4d

----------------
IN: 
0x00102c4d:  jmp    0x102c66

----------------
IN: 
0x00102c4f:  test   %ebx,%ebx
0x00102c51:  je     0x102fe5

----------------
IN: 
0x00102c57:  sub    $0x8,%esp
0x00102c5a:  pushl  0xc(%ebp)
0x00102c5d:  push   %ebx
0x00102c5e:  mov    0x8(%ebp),%eax
0x00102c61:  call   *%eax

----------------
IN: 
0x001010a7:  cmp    $0x8,%eax
0x001010aa:  je     0x1010b6

----------------
IN: 
0x001010ac:  cmp    $0xa,%eax
0x001010af:  je     0x1010f9

----------------
IN: 
0x001010f9:  movzwl 0x10fe64,%eax
0x00101100:  add    $0x50,%eax
0x00101103:  mov    %ax,0x10fe64
0x00101109:  movzwl 0x10fe64,%ebx
0x00101110:  movzwl 0x10fe64,%ecx
0x00101117:  movzwl %cx,%eax
0x0010111a:  imul   $0xcccd,%eax,%eax
0x00101120:  shr    $0x10,%eax
0x00101123:  mov    %eax,%edx
0x00101125:  shr    $0x6,%dx
0x00101129:  mov    %edx,%eax
0x0010112b:  shl    $0x2,%eax
0x0010112e:  add    %edx,%eax
0x00101130:  shl    $0x4,%eax
0x00101133:  sub    %eax,%ecx
0x00101135:  mov    %ecx,%edx
0x00101137:  mov    %ebx,%eax
0x00101139:  sub    %edx,%eax
0x0010113b:  mov    %ax,0x10fe64
0x00101141:  jmp    0x10116a

----------------
IN: 
0x00102c63:  add    $0x10,%esp
0x00102c66:  mov    0x10(%ebp),%eax
0x00102c69:  lea    0x1(%eax),%edx
0x00102c6c:  mov    %edx,0x10(%ebp)
0x00102c6f:  movzbl (%eax),%eax
0x00102c72:  movzbl %al,%ebx
0x00102c75:  cmp    $0x25,%ebx
0x00102c78:  jne    0x102c4f

----------------
IN: 
0x00102fe5:  nop    
0x00102fe6:  lea    -0x8(%ebp),%esp
0x00102fe9:  pop    %ebx
0x00102fea:  pop    %esi
0x00102feb:  pop    %ebp
0x00102fec:  ret    

----------------
IN: 
0x00100303:  add    $0x10,%esp
0x00100306:  mov    -0xc(%ebp),%eax
0x00100309:  leave  
0x0010030a:  ret    

----------------
IN: 
0x00100326:  add    $0x10,%esp
0x00100329:  mov    %eax,-0xc(%ebp)
0x0010032c:  mov    -0xc(%ebp),%eax
0x0010032f:  leave  
0x00100330:  ret    

----------------
IN: 
0x0010003f:  add    $0x10,%esp
0x00100042:  call   0x100809

----------------
IN: 
0x00100809:  push   %ebp
0x0010080a:  mov    %esp,%ebp
0x0010080c:  sub    $0x8,%esp
0x0010080f:  sub    $0xc,%esp
0x00100812:  push   $0x103616
0x00100817:  call   0x10030b

----------------
IN: 
0x0010081c:  add    $0x10,%esp
0x0010081f:  sub    $0x8,%esp
0x00100822:  push   $0x100000
0x00100827:  push   $0x10362f
0x0010082c:  call   0x10030b

----------------
IN: 
0x00102cc2:  movb   $0x30,-0x25(%ebp)
0x00102cc6:  jmp    0x102c98

----------------
IN: 
0x00102c98:  mov    0x10(%ebp),%eax
0x00102c9b:  lea    0x1(%eax),%edx
0x00102c9e:  mov    %edx,0x10(%ebp)
0x00102ca1:  movzbl (%eax),%eax
0x00102ca4:  movzbl %al,%ebx
0x00102ca7:  lea    -0x23(%ebx),%eax
0x00102caa:  cmp    $0x55,%eax
0x00102cad:  ja     0x102fb8

----------------
IN: 
0x00102cc8:  movl   $0x0,-0x1c(%ebp)
0x00102ccf:  mov    -0x1c(%ebp),%edx
0x00102cd2:  mov    %edx,%eax
0x00102cd4:  shl    $0x2,%eax
0x00102cd7:  add    %edx,%eax
0x00102cd9:  add    %eax,%eax
0x00102cdb:  add    %ebx,%eax
0x00102cdd:  sub    $0x30,%eax
0x00102ce0:  mov    %eax,-0x1c(%ebp)
0x00102ce3:  mov    0x10(%ebp),%eax
0x00102ce6:  movzbl (%eax),%eax
0x00102ce9:  movsbl %al,%ebx
0x00102cec:  cmp    $0x2f,%ebx
0x00102cef:  jle    0x102d2a

----------------
IN: 
0x00102cf1:  cmp    $0x39,%ebx
0x00102cf4:  jg     0x102d2a

----------------
IN: 
0x00102d2a:  nop    
0x00102d2b:  cmpl   $0x0,-0x18(%ebp)
0x00102d2f:  jns    0x102c98

----------------
IN: 
0x00102d35:  mov    -0x1c(%ebp),%eax
0x00102d38:  mov    %eax,-0x18(%ebp)
0x00102d3b:  movl   $0xffffffff,-0x1c(%ebp)
0x00102d42:  jmp    0x102c98

----------------
IN: 
0x00102f63:  sub    $0x8,%esp
0x00102f66:  pushl  -0x20(%ebp)
0x00102f69:  lea    0x14(%ebp),%eax
0x00102f6c:  push   %eax
0x00102f6d:  call   0x102b8b

----------------
IN: 
0x00102b8b:  push   %ebp
0x00102b8c:  mov    %esp,%ebp
0x00102b8e:  cmpl   $0x1,0xc(%ebp)
0x00102b92:  jle    0x102ba8

----------------
IN: 
0x00102ba8:  cmpl   $0x0,0xc(%ebp)
0x00102bac:  je     0x102bc4

----------------
IN: 
0x00102bc4:  mov    0x8(%ebp),%eax
0x00102bc7:  mov    (%eax),%eax
0x00102bc9:  lea    0x4(%eax),%ecx
0x00102bcc:  mov    0x8(%ebp),%edx
0x00102bcf:  mov    %ecx,(%edx)
0x00102bd1:  mov    (%eax),%eax
0x00102bd3:  mov    $0x0,%edx
0x00102bd8:  pop    %ebp
0x00102bd9:  ret    

----------------
IN: 
0x00102f72:  add    $0x10,%esp
0x00102f75:  mov    %eax,-0x10(%ebp)
0x00102f78:  mov    %edx,-0xc(%ebp)
0x00102f7b:  movl   $0x10,-0x14(%ebp)
0x00102f82:  movsbl -0x25(%ebp),%edx
0x00102f86:  mov    -0x14(%ebp),%eax
0x00102f89:  sub    $0x4,%esp
0x00102f8c:  push   %edx
0x00102f8d:  pushl  -0x18(%ebp)
0x00102f90:  push   %eax
0x00102f91:  pushl  -0xc(%ebp)
0x00102f94:  pushl  -0x10(%ebp)
0x00102f97:  pushl  0xc(%ebp)
0x00102f9a:  pushl  0x8(%ebp)
0x00102f9d:  call   0x102a9f

----------------
IN: 
0x00102a9f:  push   %ebp
0x00102aa0:  mov    %esp,%ebp
0x00102aa2:  sub    $0x38,%esp
0x00102aa5:  mov    0x10(%ebp),%eax
0x00102aa8:  mov    %eax,-0x30(%ebp)
0x00102aab:  mov    0x14(%ebp),%eax
0x00102aae:  mov    %eax,-0x2c(%ebp)
0x00102ab1:  mov    -0x30(%ebp),%eax
0x00102ab4:  mov    -0x2c(%ebp),%edx
0x00102ab7:  mov    %eax,-0x18(%ebp)
0x00102aba:  mov    %edx,-0x14(%ebp)
0x00102abd:  mov    0x18(%ebp),%eax
0x00102ac0:  mov    %eax,-0x1c(%ebp)
0x00102ac3:  mov    -0x18(%ebp),%eax
0x00102ac6:  mov    -0x14(%ebp),%edx
0x00102ac9:  mov    %eax,-0x20(%ebp)
0x00102acc:  mov    %edx,-0x10(%ebp)
0x00102acf:  mov    -0x10(%ebp),%eax
0x00102ad2:  mov    %eax,-0xc(%ebp)
0x00102ad5:  cmpl   $0x0,-0x10(%ebp)
0x00102ad9:  je     0x102af7

----------------
IN: 
0x00102af7:  mov    -0x20(%ebp),%eax
0x00102afa:  mov    -0xc(%ebp),%edx
0x00102afd:  divl   -0x1c(%ebp)
0x00102b00:  mov    %eax,-0x20(%ebp)
0x00102b03:  mov    %edx,-0x24(%ebp)
0x00102b06:  mov    -0x20(%ebp),%eax
0x00102b09:  mov    -0x10(%ebp),%edx
0x00102b0c:  mov    %eax,-0x18(%ebp)
0x00102b0f:  mov    %edx,-0x14(%ebp)
0x00102b12:  mov    -0x24(%ebp),%eax
0x00102b15:  mov    %eax,-0x28(%ebp)
0x00102b18:  mov    0x18(%ebp),%eax
0x00102b1b:  mov    $0x0,%edx
0x00102b20:  mov    -0x2c(%ebp),%ecx
0x00102b23:  cmp    %eax,-0x30(%ebp)
0x00102b26:  sbb    %edx,%ecx
0x00102b28:  jb     0x102b61

----------------
IN: 
0x00102b2a:  mov    0x1c(%ebp),%eax
0x00102b2d:  sub    $0x1,%eax
0x00102b30:  sub    $0x4,%esp
0x00102b33:  pushl  0x20(%ebp)
0x00102b36:  push   %eax
0x00102b37:  pushl  0x18(%ebp)
0x00102b3a:  pushl  -0x14(%ebp)
0x00102b3d:  pushl  -0x18(%ebp)
0x00102b40:  pushl  0xc(%ebp)
0x00102b43:  pushl  0x8(%ebp)
0x00102b46:  call   0x102a9f

----------------
IN: 
0x00102b61:  subl   $0x1,0x1c(%ebp)
0x00102b65:  cmpl   $0x0,0x1c(%ebp)
0x00102b69:  jg     0x102b50

----------------
IN: 
0x00102b50:  sub    $0x8,%esp
0x00102b53:  pushl  0xc(%ebp)
0x00102b56:  pushl  0x20(%ebp)
0x00102b59:  mov    0x8(%ebp),%eax
0x00102b5c:  call   *%eax

----------------
IN: 
0x00102b5e:  add    $0x10,%esp
0x00102b61:  subl   $0x1,0x1c(%ebp)
0x00102b65:  cmpl   $0x0,0x1c(%ebp)
0x00102b69:  jg     0x102b50

----------------
IN: 
0x00102b6b:  mov    -0x28(%ebp),%eax
0x00102b6e:  add    $0x103cf0,%eax
0x00102b73:  movzbl (%eax),%eax
0x00102b76:  movsbl %al,%eax
0x00102b79:  sub    $0x8,%esp
0x00102b7c:  pushl  0xc(%ebp)
0x00102b7f:  push   %eax
0x00102b80:  mov    0x8(%ebp),%eax
0x00102b83:  call   *%eax

----------------
IN: 
0x00102b85:  add    $0x10,%esp
0x00102b88:  nop    
0x00102b89:  leave  
0x00102b8a:  ret    

----------------
IN: 
0x00102b4b:  add    $0x20,%esp
0x00102b4e:  jmp    0x102b6b

----------------
IN: 
0x00102fa2:  add    $0x20,%esp
0x00102fa5:  jmp    0x102fe0

----------------
IN: 
0x00100831:  add    $0x10,%esp
0x00100834:  sub    $0x8,%esp
0x00100837:  push   $0x10355d
0x0010083c:  push   $0x103647
0x00100841:  call   0x10030b

----------------
IN: 
0x00100846:  add    $0x10,%esp
0x00100849:  sub    $0x8,%esp
0x0010084c:  push   $0x10fa16
0x00100851:  push   $0x10365f
0x00100856:  call   0x10030b

----------------
IN: 
0x0010085b:  add    $0x10,%esp
0x0010085e:  sub    $0x8,%esp
0x00100861:  push   $0x110d68
0x00100866:  push   $0x103677
0x0010086b:  call   0x10030b

----------------
IN: 
0x00100870:  add    $0x10,%esp
0x00100873:  mov    $0x110d68,%eax
0x00100878:  sub    $0x100000,%eax
0x0010087d:  add    $0x3ff,%eax
0x00100882:  lea    0x3ff(%eax),%edx
0x00100888:  test   %eax,%eax
0x0010088a:  cmovs  %edx,%eax
0x0010088d:  sar    $0xa,%eax
0x00100890:  sub    $0x8,%esp
0x00100893:  push   %eax
0x00100894:  push   $0x103690
0x00100899:  call   0x10030b

----------------
IN: 
0x00102e92:  sub    $0x8,%esp
0x00102e95:  pushl  -0x20(%ebp)
0x00102e98:  lea    0x14(%ebp),%eax
0x00102e9b:  push   %eax
0x00102e9c:  call   0x102bda

----------------
IN: 
0x00102bda:  push   %ebp
0x00102bdb:  mov    %esp,%ebp
0x00102bdd:  cmpl   $0x1,0xc(%ebp)
0x00102be1:  jle    0x102bf7

----------------
IN: 
0x00102bf7:  cmpl   $0x0,0xc(%ebp)
0x00102bfb:  je     0x102c0f

----------------
IN: 
0x00102c0f:  mov    0x8(%ebp),%eax
0x00102c12:  mov    (%eax),%eax
0x00102c14:  lea    0x4(%eax),%ecx
0x00102c17:  mov    0x8(%ebp),%edx
0x00102c1a:  mov    %ecx,(%edx)
0x00102c1c:  mov    (%eax),%eax
0x00102c1e:  cltd   
0x00102c1f:  pop    %ebp
0x00102c20:  ret    

----------------
IN: 
0x00102ea1:  add    $0x10,%esp
0x00102ea4:  mov    %eax,-0x10(%ebp)
0x00102ea7:  mov    %edx,-0xc(%ebp)
0x00102eaa:  mov    -0x10(%ebp),%eax
0x00102ead:  mov    -0xc(%ebp),%edx
0x00102eb0:  test   %edx,%edx
0x00102eb2:  jns    0x102ed7

----------------
IN: 
0x00102ed7:  movl   $0xa,-0x14(%ebp)
0x00102ede:  jmp    0x102f82

----------------
IN: 
0x00102f82:  movsbl -0x25(%ebp),%edx
0x00102f86:  mov    -0x14(%ebp),%eax
0x00102f89:  sub    $0x4,%esp
0x00102f8c:  push   %edx
0x00102f8d:  pushl  -0x18(%ebp)
0x00102f90:  push   %eax
0x00102f91:  pushl  -0xc(%ebp)
0x00102f94:  pushl  -0x10(%ebp)
0x00102f97:  pushl  0xc(%ebp)
0x00102f9a:  pushl  0x8(%ebp)
0x00102f9d:  call   0x102a9f

----------------
IN: 
0x0010089e:  add    $0x10,%esp
0x001008a1:  nop    
0x001008a2:  leave  
0x001008a3:  ret    

----------------
IN: 
0x00100047:  call   0x1000c5

----------------
IN: 
0x001000c5:  push   %ebp
0x001000c6:  mov    %esp,%ebp
0x001000c8:  sub    $0x8,%esp
0x001000cb:  mov    $0x100000,%eax
0x001000d0:  sub    $0x4,%esp
0x001000d3:  push   $0xffff0000
0x001000d8:  push   %eax
0x001000d9:  push   $0x0
0x001000db:  call   0x1000ab

----------------
IN: 
0x001000ab:  push   %ebp
0x001000ac:  mov    %esp,%ebp
0x001000ae:  sub    $0x8,%esp
0x001000b1:  sub    $0x8,%esp
0x001000b4:  pushl  0x10(%ebp)
0x001000b7:  pushl  0x8(%ebp)
0x001000ba:  call   0x100086

----------------
IN: 
0x00100086:  push   %ebp
0x00100087:  mov    %esp,%ebp
0x00100089:  push   %ebx
0x0010008a:  sub    $0x4,%esp
0x0010008d:  lea    0xc(%ebp),%ecx
0x00100090:  mov    0xc(%ebp),%edx
0x00100093:  lea    0x8(%ebp),%ebx
0x00100096:  mov    0x8(%ebp),%eax
0x00100099:  push   %ecx
0x0010009a:  push   %edx
0x0010009b:  push   %ebx
0x0010009c:  push   %eax
0x0010009d:  call   0x10006c

----------------
IN: 
0x0010006c:  push   %ebp
0x0010006d:  mov    %esp,%ebp
0x0010006f:  sub    $0x8,%esp
0x00100072:  sub    $0x4,%esp
0x00100075:  push   $0x0
0x00100077:  push   $0x0
0x00100079:  push   $0x0
0x0010007b:  call   0x100c58

----------------
IN: 
0x00100c58:  push   %ebp
0x00100c59:  mov    %esp,%ebp
0x00100c5b:  sub    $0x8,%esp
0x00100c5e:  call   0x100951

----------------
IN: 
0x00100951:  push   %ebp
0x00100952:  mov    %esp,%ebp
0x00100954:  sub    $0x28,%esp
0x00100957:  mov    %ebp,%eax
0x00100959:  mov    %eax,-0x20(%ebp)
0x0010095c:  mov    -0x20(%ebp),%eax
0x0010095f:  mov    %eax,-0xc(%ebp)
0x00100962:  call   0x100940

----------------
IN: 
0x00100940:  push   %ebp
0x00100941:  mov    %esp,%ebp
0x00100943:  sub    $0x10,%esp
0x00100946:  mov    0x4(%ebp),%eax
0x00100949:  mov    %eax,-0x4(%ebp)
0x0010094c:  mov    -0x4(%ebp),%eax
0x0010094f:  leave  
0x00100950:  ret    

----------------
IN: 
0x00100967:  mov    %eax,-0x10(%ebp)
0x0010096a:  movl   $0x0,-0x14(%ebp)
0x00100971:  jmp    0x100a03

----------------
IN: 
0x00100a03:  cmpl   $0x0,-0xc(%ebp)
0x00100a07:  je     0x100a13

----------------
IN: 
0x00100a09:  cmpl   $0x13,-0x14(%ebp)
0x00100a0d:  jle    0x100976

----------------
IN: 
0x00100976:  sub    $0x4,%esp
0x00100979:  pushl  -0x10(%ebp)
0x0010097c:  pushl  -0xc(%ebp)
0x0010097f:  push   $0x1036e8
0x00100984:  call   0x10030b

----------------
IN: 
0x00100989:  add    $0x10,%esp
0x0010098c:  mov    -0xc(%ebp),%eax
0x0010098f:  add    $0x8,%eax
0x00100992:  mov    %eax,-0x1c(%ebp)
0x00100995:  movl   $0x0,-0x18(%ebp)
0x0010099c:  jmp    0x1009c4

----------------
IN: 
0x001009c4:  cmpl   $0x3,-0x18(%ebp)
0x001009c8:  jle    0x10099e

----------------
IN: 
0x0010099e:  mov    -0x18(%ebp),%eax
0x001009a1:  lea    0x0(,%eax,4),%edx
0x001009a8:  mov    -0x1c(%ebp),%eax
0x001009ab:  add    %edx,%eax
0x001009ad:  mov    (%eax),%eax
0x001009af:  sub    $0x8,%esp
0x001009b2:  push   %eax
0x001009b3:  push   $0x103704
0x001009b8:  call   0x10030b

----------------
IN: 
0x001009bd:  add    $0x10,%esp
0x001009c0:  addl   $0x1,-0x18(%ebp)
0x001009c4:  cmpl   $0x3,-0x18(%ebp)
0x001009c8:  jle    0x10099e

----------------
IN: 
0x001009ca:  sub    $0xc,%esp
0x001009cd:  push   $0x10370c
0x001009d2:  call   0x10030b

----------------
IN: 
0x001009d7:  add    $0x10,%esp
0x001009da:  mov    -0x10(%ebp),%eax
0x001009dd:  sub    $0x1,%eax
0x001009e0:  sub    $0xc,%esp
0x001009e3:  push   %eax
0x001009e4:  call   0x1008a4

----------------
IN: 
0x001008a4:  push   %ebp
0x001008a5:  mov    %esp,%ebp
0x001008a7:  sub    $0x128,%esp
0x001008ad:  sub    $0x8,%esp
0x001008b0:  lea    -0x24(%ebp),%eax
0x001008b3:  push   %eax
0x001008b4:  pushl  0x8(%ebp)
0x001008b7:  call   0x100507

----------------
IN: 
0x00100507:  push   %ebp
0x00100508:  mov    %esp,%ebp
0x0010050a:  sub    $0x38,%esp
0x0010050d:  mov    0xc(%ebp),%eax
0x00100510:  movl   $0x10360c,(%eax)
0x00100516:  mov    0xc(%ebp),%eax
0x00100519:  movl   $0x0,0x4(%eax)
0x00100520:  mov    0xc(%ebp),%eax
0x00100523:  movl   $0x10360c,0x8(%eax)
0x0010052a:  mov    0xc(%ebp),%eax
0x0010052d:  movl   $0x9,0xc(%eax)
0x00100534:  mov    0xc(%ebp),%eax
0x00100537:  mov    0x8(%ebp),%edx
0x0010053a:  mov    %edx,0x10(%eax)
0x0010053d:  mov    0xc(%ebp),%eax
0x00100540:  movl   $0x0,0x14(%eax)
0x00100547:  movl   $0x103e6c,-0xc(%ebp)
0x0010054e:  movl   $0x10bd50,-0x10(%ebp)
0x00100555:  movl   $0x10bd51,-0x14(%ebp)
0x0010055c:  movl   $0x10e6dc,-0x18(%ebp)
0x00100563:  mov    -0x18(%ebp),%eax
0x00100566:  cmp    -0x14(%ebp),%eax
0x00100569:  jbe    0x100578

----------------
IN: 
0x0010056b:  mov    -0x18(%ebp),%eax
0x0010056e:  sub    $0x1,%eax
0x00100571:  movzbl (%eax),%eax
0x00100574:  test   %al,%al
0x00100576:  je     0x100582

----------------
IN: 
0x00100582:  movl   $0x0,-0x1c(%ebp)
0x00100589:  mov    -0x10(%ebp),%eax
0x0010058c:  sub    -0xc(%ebp),%eax
0x0010058f:  sar    $0x2,%eax
0x00100592:  imul   $0xaaaaaaab,%eax,%eax
0x00100598:  sub    $0x1,%eax
0x0010059b:  mov    %eax,-0x20(%ebp)
0x0010059e:  pushl  0x8(%ebp)
0x001005a1:  push   $0x64
0x001005a3:  lea    -0x20(%ebp),%eax
0x001005a6:  push   %eax
0x001005a7:  lea    -0x1c(%ebp),%eax
0x001005aa:  push   %eax
0x001005ab:  pushl  -0xc(%ebp)
0x001005ae:  call   0x1003b0

----------------
IN: 
0x001003b0:  push   %ebp
0x001003b1:  mov    %esp,%ebp
0x001003b3:  sub    $0x20,%esp
0x001003b6:  mov    0xc(%ebp),%eax
0x001003b9:  mov    (%eax),%eax
0x001003bb:  mov    %eax,-0x4(%ebp)
0x001003be:  mov    0x10(%ebp),%eax
0x001003c1:  mov    (%eax),%eax
0x001003c3:  mov    %eax,-0x8(%ebp)
0x001003c6:  movl   $0x0,-0xc(%ebp)
0x001003cd:  jmp    0x1004a4

----------------
IN: 
0x001004a4:  mov    -0x4(%ebp),%eax
0x001004a7:  cmp    -0x8(%ebp),%eax
0x001004aa:  jle    0x1003d2

----------------
IN: 
0x001003d2:  mov    -0x4(%ebp),%edx
0x001003d5:  mov    -0x8(%ebp),%eax
0x001003d8:  add    %edx,%eax
0x001003da:  mov    %eax,%edx
0x001003dc:  shr    $0x1f,%edx
0x001003df:  add    %edx,%eax
0x001003e1:  sar    %eax
0x001003e3:  mov    %eax,-0x14(%ebp)
0x001003e6:  mov    -0x14(%ebp),%eax
0x001003e9:  mov    %eax,-0x10(%ebp)
0x001003ec:  jmp    0x1003f2

----------------
IN: 
0x001003f2:  mov    -0x10(%ebp),%eax
0x001003f5:  cmp    -0x4(%ebp),%eax
0x001003f8:  jl     0x100419

----------------
IN: 
0x001003fa:  mov    -0x10(%ebp),%edx
0x001003fd:  mov    %edx,%eax
0x001003ff:  add    %eax,%eax
0x00100401:  add    %edx,%eax
0x00100403:  shl    $0x2,%eax
0x00100406:  mov    %eax,%edx
0x00100408:  mov    0x8(%ebp),%eax
0x0010040b:  add    %edx,%eax
0x0010040d:  movzbl 0x4(%eax),%eax
0x00100411:  movzbl %al,%eax
0x00100414:  cmp    %eax,0x14(%ebp)
0x00100417:  jne    0x1003ee

----------------
IN: 
0x001003ee:  subl   $0x1,-0x10(%ebp)
0x001003f2:  mov    -0x10(%ebp),%eax
0x001003f5:  cmp    -0x4(%ebp),%eax
0x001003f8:  jl     0x100419

----------------
IN: 
0x00100419:  mov    -0x10(%ebp),%eax
0x0010041c:  cmp    -0x4(%ebp),%eax
0x0010041f:  jge    0x10042c

----------------
IN: 
0x0010042c:  movl   $0x1,-0xc(%ebp)
0x00100433:  mov    -0x10(%ebp),%edx
0x00100436:  mov    %edx,%eax
0x00100438:  add    %eax,%eax
0x0010043a:  add    %edx,%eax
0x0010043c:  shl    $0x2,%eax
0x0010043f:  mov    %eax,%edx
0x00100441:  mov    0x8(%ebp),%eax
0x00100444:  add    %edx,%eax
0x00100446:  mov    0x8(%eax),%eax
0x00100449:  cmp    %eax,0x18(%ebp)
0x0010044c:  jbe    0x100461

----------------
IN: 
0x00100461:  mov    -0x10(%ebp),%edx
0x00100464:  mov    %edx,%eax
0x00100466:  add    %eax,%eax
0x00100468:  add    %edx,%eax
0x0010046a:  shl    $0x2,%eax
0x0010046d:  mov    %eax,%edx
0x0010046f:  mov    0x8(%ebp),%eax
0x00100472:  add    %edx,%eax
0x00100474:  mov    0x8(%eax),%eax
0x00100477:  cmp    %eax,0x18(%ebp)
0x0010047a:  jae    0x100492

----------------
IN: 
0x0010047c:  mov    -0x10(%ebp),%eax
0x0010047f:  lea    -0x1(%eax),%edx
0x00100482:  mov    0x10(%ebp),%eax
0x00100485:  mov    %edx,(%eax)
0x00100487:  mov    -0x10(%ebp),%eax
0x0010048a:  sub    $0x1,%eax
0x0010048d:  mov    %eax,-0x8(%ebp)
0x00100490:  jmp    0x1004a4

----------------
IN: 
0x0010044e:  mov    0xc(%ebp),%eax
0x00100451:  mov    -0x10(%ebp),%edx
0x00100454:  mov    %edx,(%eax)
0x00100456:  mov    -0x14(%ebp),%eax
0x00100459:  add    $0x1,%eax
0x0010045c:  mov    %eax,-0x4(%ebp)
0x0010045f:  jmp    0x1004a4

----------------
IN: 
0x00100421:  mov    -0x14(%ebp),%eax
0x00100424:  add    $0x1,%eax
0x00100427:  mov    %eax,-0x4(%ebp)
0x0010042a:  jmp    0x1004a4

----------------
IN: 
0x001004b0:  cmpl   $0x0,-0xc(%ebp)
0x001004b4:  jne    0x1004c5

----------------
IN: 
0x001004c5:  mov    0x10(%ebp),%eax
0x001004c8:  mov    (%eax),%eax
0x001004ca:  mov    %eax,-0x4(%ebp)
0x001004cd:  jmp    0x1004d3

----------------
IN: 
0x001004d3:  mov    0xc(%ebp),%eax
0x001004d6:  mov    (%eax),%eax
0x001004d8:  cmp    %eax,-0x4(%ebp)
0x001004db:  jle    0x1004fc

----------------
IN: 
0x001004dd:  mov    -0x4(%ebp),%edx
0x001004e0:  mov    %edx,%eax
0x001004e2:  add    %eax,%eax
0x001004e4:  add    %edx,%eax
0x001004e6:  shl    $0x2,%eax
0x001004e9:  mov    %eax,%edx
0x001004eb:  mov    0x8(%ebp),%eax
0x001004ee:  add    %edx,%eax
0x001004f0:  movzbl 0x4(%eax),%eax
0x001004f4:  movzbl %al,%eax
0x001004f7:  cmp    %eax,0x14(%ebp)
0x001004fa:  jne    0x1004cf

----------------
IN: 
0x001004cf:  subl   $0x1,-0x4(%ebp)
0x001004d3:  mov    0xc(%ebp),%eax
0x001004d6:  mov    (%eax),%eax
0x001004d8:  cmp    %eax,-0x4(%ebp)
0x001004db:  jle    0x1004fc

----------------
IN: 
0x001004fc:  mov    0xc(%ebp),%eax
0x001004ff:  mov    -0x4(%ebp),%edx
0x00100502:  mov    %edx,(%eax)
0x00100504:  nop    
0x00100505:  leave  
0x00100506:  ret    

----------------
IN: 
0x001005b3:  add    $0x14,%esp
0x001005b6:  mov    -0x1c(%ebp),%eax
0x001005b9:  test   %eax,%eax
0x001005bb:  jne    0x1005c7

----------------
IN: 
0x001005c7:  mov    -0x1c(%ebp),%eax
0x001005ca:  mov    %eax,-0x24(%ebp)
0x001005cd:  mov    -0x20(%ebp),%eax
0x001005d0:  mov    %eax,-0x28(%ebp)
0x001005d3:  pushl  0x8(%ebp)
0x001005d6:  push   $0x24
0x001005d8:  lea    -0x28(%ebp),%eax
0x001005db:  push   %eax
0x001005dc:  lea    -0x24(%ebp),%eax
0x001005df:  push   %eax
0x001005e0:  pushl  -0xc(%ebp)
0x001005e3:  call   0x1003b0

----------------
IN: 
0x001005e8:  add    $0x14,%esp
0x001005eb:  mov    -0x24(%ebp),%edx
0x001005ee:  mov    -0x28(%ebp),%eax
0x001005f1:  cmp    %eax,%edx
0x001005f3:  jg     0x10066d

----------------
IN: 
0x001005f5:  mov    -0x24(%ebp),%eax
0x001005f8:  mov    %eax,%edx
0x001005fa:  mov    %edx,%eax
0x001005fc:  add    %eax,%eax
0x001005fe:  add    %edx,%eax
0x00100600:  shl    $0x2,%eax
0x00100603:  mov    %eax,%edx
0x00100605:  mov    -0xc(%ebp),%eax
0x00100608:  add    %edx,%eax
0x0010060a:  mov    (%eax),%edx
0x0010060c:  mov    -0x18(%ebp),%eax
0x0010060f:  sub    -0x14(%ebp),%eax
0x00100612:  cmp    %eax,%edx
0x00100614:  jae    0x100638

----------------
IN: 
0x00100616:  mov    -0x24(%ebp),%eax
0x00100619:  mov    %eax,%edx
0x0010061b:  mov    %edx,%eax
0x0010061d:  add    %eax,%eax
0x0010061f:  add    %edx,%eax
0x00100621:  shl    $0x2,%eax
0x00100624:  mov    %eax,%edx
0x00100626:  mov    -0xc(%ebp),%eax
0x00100629:  add    %edx,%eax
0x0010062b:  mov    (%eax),%edx
0x0010062d:  mov    -0x14(%ebp),%eax
0x00100630:  add    %eax,%edx
0x00100632:  mov    0xc(%ebp),%eax
0x00100635:  mov    %edx,0x8(%eax)
0x00100638:  mov    -0x24(%ebp),%eax
0x0010063b:  mov    %eax,%edx
0x0010063d:  mov    %edx,%eax
0x0010063f:  add    %eax,%eax
0x00100641:  add    %edx,%eax
0x00100643:  shl    $0x2,%eax
0x00100646:  mov    %eax,%edx
0x00100648:  mov    -0xc(%ebp),%eax
0x0010064b:  add    %edx,%eax
0x0010064d:  mov    0x8(%eax),%edx
0x00100650:  mov    0xc(%ebp),%eax
0x00100653:  mov    %edx,0x10(%eax)
0x00100656:  mov    0xc(%ebp),%eax
0x00100659:  mov    0x10(%eax),%eax
0x0010065c:  sub    %eax,0x8(%ebp)
0x0010065f:  mov    -0x24(%ebp),%eax
0x00100662:  mov    %eax,-0x2c(%ebp)
0x00100665:  mov    -0x28(%ebp),%eax
0x00100668:  mov    %eax,-0x30(%ebp)
0x0010066b:  jmp    0x100682

----------------
IN: 
0x00100682:  mov    0xc(%ebp),%eax
0x00100685:  mov    0x8(%eax),%eax
0x00100688:  sub    $0x8,%esp
0x0010068b:  push   $0x3a
0x0010068d:  push   %eax
0x0010068e:  call   0x103249

----------------
IN: 
0x00103249:  push   %ebp
0x0010324a:  mov    %esp,%ebp
0x0010324c:  sub    $0x4,%esp
0x0010324f:  mov    0xc(%ebp),%eax
0x00103252:  mov    %al,-0x4(%ebp)
0x00103255:  jmp    0x103266

----------------
IN: 
0x00103266:  mov    0x8(%ebp),%eax
0x00103269:  movzbl (%eax),%eax
0x0010326c:  test   %al,%al
0x0010326e:  jne    0x103257

----------------
IN: 
0x00103257:  mov    0x8(%ebp),%eax
0x0010325a:  movzbl (%eax),%eax
0x0010325d:  cmp    %al,-0x4(%ebp)
0x00103260:  je     0x103272

----------------
IN: 
0x00103262:  addl   $0x1,0x8(%ebp)
0x00103266:  mov    0x8(%ebp),%eax
0x00103269:  movzbl (%eax),%eax
0x0010326c:  test   %al,%al
0x0010326e:  jne    0x103257

----------------
IN: 
0x00103272:  nop    
0x00103273:  mov    0x8(%ebp),%eax
0x00103276:  leave  
0x00103277:  ret    

----------------
IN: 
0x00100693:  add    $0x10,%esp
0x00100696:  mov    0xc(%ebp),%edx
0x00100699:  mov    0x8(%edx),%ecx
0x0010069c:  sub    %ecx,%eax
0x0010069e:  mov    %eax,%edx
0x001006a0:  mov    0xc(%ebp),%eax
0x001006a3:  mov    %edx,0xc(%eax)
0x001006a6:  sub    $0xc,%esp
0x001006a9:  pushl  0x8(%ebp)
0x001006ac:  push   $0x44
0x001006ae:  lea    -0x30(%ebp),%eax
0x001006b1:  push   %eax
0x001006b2:  lea    -0x2c(%ebp),%eax
0x001006b5:  push   %eax
0x001006b6:  pushl  -0xc(%ebp)
0x001006b9:  call   0x1003b0

----------------
IN: 
0x001006be:  add    $0x20,%esp
0x001006c1:  mov    -0x2c(%ebp),%edx
0x001006c4:  mov    -0x30(%ebp),%eax
0x001006c7:  cmp    %eax,%edx
0x001006c9:  jg     0x1006ef

----------------
IN: 
0x001006cb:  mov    -0x30(%ebp),%eax
0x001006ce:  mov    %eax,%edx
0x001006d0:  mov    %edx,%eax
0x001006d2:  add    %eax,%eax
0x001006d4:  add    %edx,%eax
0x001006d6:  shl    $0x2,%eax
0x001006d9:  mov    %eax,%edx
0x001006db:  mov    -0xc(%ebp),%eax
0x001006de:  add    %edx,%eax
0x001006e0:  movzwl 0x6(%eax),%eax
0x001006e4:  movzwl %ax,%edx
0x001006e7:  mov    0xc(%ebp),%eax
0x001006ea:  mov    %edx,0x4(%eax)
0x001006ed:  jmp    0x100702

----------------
IN: 
0x00100702:  mov    -0x2c(%ebp),%edx
0x00100705:  mov    -0x1c(%ebp),%eax
0x00100708:  cmp    %eax,%edx
0x0010070a:  jl     0x100762

----------------
IN: 
0x0010070c:  mov    -0x2c(%ebp),%eax
0x0010070f:  mov    %eax,%edx
0x00100711:  mov    %edx,%eax
0x00100713:  add    %eax,%eax
0x00100715:  add    %edx,%eax
0x00100717:  shl    $0x2,%eax
0x0010071a:  mov    %eax,%edx
0x0010071c:  mov    -0xc(%ebp),%eax
0x0010071f:  add    %edx,%eax
0x00100721:  movzbl 0x4(%eax),%eax
0x00100725:  cmp    $0x84,%al
0x00100727:  je     0x100762

----------------
IN: 
0x00100729:  mov    -0x2c(%ebp),%eax
0x0010072c:  mov    %eax,%edx
0x0010072e:  mov    %edx,%eax
0x00100730:  add    %eax,%eax
0x00100732:  add    %edx,%eax
0x00100734:  shl    $0x2,%eax
0x00100737:  mov    %eax,%edx
0x00100739:  mov    -0xc(%ebp),%eax
0x0010073c:  add    %edx,%eax
0x0010073e:  movzbl 0x4(%eax),%eax
0x00100742:  cmp    $0x64,%al
0x00100744:  jne    0x1006f9

----------------
IN: 
0x001006f9:  mov    -0x2c(%ebp),%eax
0x001006fc:  sub    $0x1,%eax
0x001006ff:  mov    %eax,-0x2c(%ebp)
0x00100702:  mov    -0x2c(%ebp),%edx
0x00100705:  mov    -0x1c(%ebp),%eax
0x00100708:  cmp    %eax,%edx
0x0010070a:  jl     0x100762

----------------
IN: 
0x00100762:  mov    -0x2c(%ebp),%edx
0x00100765:  mov    -0x1c(%ebp),%eax
0x00100768:  cmp    %eax,%edx
0x0010076a:  jl     0x1007ae

----------------
IN: 
0x0010076c:  mov    -0x2c(%ebp),%eax
0x0010076f:  mov    %eax,%edx
0x00100771:  mov    %edx,%eax
0x00100773:  add    %eax,%eax
0x00100775:  add    %edx,%eax
0x00100777:  shl    $0x2,%eax
0x0010077a:  mov    %eax,%edx
0x0010077c:  mov    -0xc(%ebp),%eax
0x0010077f:  add    %edx,%eax
0x00100781:  mov    (%eax),%edx
0x00100783:  mov    -0x18(%ebp),%eax
0x00100786:  sub    -0x14(%ebp),%eax
0x00100789:  cmp    %eax,%edx
0x0010078b:  jae    0x1007ae

----------------
IN: 
0x0010078d:  mov    -0x2c(%ebp),%eax
0x00100790:  mov    %eax,%edx
0x00100792:  mov    %edx,%eax
0x00100794:  add    %eax,%eax
0x00100796:  add    %edx,%eax
0x00100798:  shl    $0x2,%eax
0x0010079b:  mov    %eax,%edx
0x0010079d:  mov    -0xc(%ebp),%eax
0x001007a0:  add    %edx,%eax
0x001007a2:  mov    (%eax),%edx
0x001007a4:  mov    -0x14(%ebp),%eax
0x001007a7:  add    %eax,%edx
0x001007a9:  mov    0xc(%ebp),%eax
0x001007ac:  mov    %edx,(%eax)
0x001007ae:  mov    -0x24(%ebp),%edx
0x001007b1:  mov    -0x28(%ebp),%eax
0x001007b4:  cmp    %eax,%edx
0x001007b6:  jge    0x100802

----------------
IN: 
0x001007b8:  mov    -0x24(%ebp),%eax
0x001007bb:  add    $0x1,%eax
0x001007be:  mov    %eax,-0x2c(%ebp)
0x001007c1:  jmp    0x1007db

----------------
IN: 
0x001007db:  mov    -0x2c(%ebp),%edx
0x001007de:  mov    -0x28(%ebp),%eax
0x001007e1:  cmp    %eax,%edx
0x001007e3:  jge    0x100802

----------------
IN: 
0x001007e5:  mov    -0x2c(%ebp),%eax
0x001007e8:  mov    %eax,%edx
0x001007ea:  mov    %edx,%eax
0x001007ec:  add    %eax,%eax
0x001007ee:  add    %edx,%eax
0x001007f0:  shl    $0x2,%eax
0x001007f3:  mov    %eax,%edx
0x001007f5:  mov    -0xc(%ebp),%eax
0x001007f8:  add    %edx,%eax
0x001007fa:  movzbl 0x4(%eax),%eax
0x001007fe:  cmp    $0xa0,%al
0x00100800:  je     0x1007c3

----------------
IN: 
0x00100802:  mov    $0x0,%eax
0x00100807:  leave  
0x00100808:  ret    

----------------
IN: 
0x001008bc:  add    $0x10,%esp
0x001008bf:  test   %eax,%eax
0x001008c1:  je     0x1008d8

----------------
IN: 
0x001008d8:  movl   $0x0,-0xc(%ebp)
0x001008df:  jmp    0x1008fd

----------------
IN: 
0x001008fd:  mov    -0x18(%ebp),%eax
0x00100900:  cmp    %eax,-0xc(%ebp)
0x00100903:  jl     0x1008e1

----------------
IN: 
0x001008e1:  mov    -0x1c(%ebp),%edx
0x001008e4:  mov    -0xc(%ebp),%eax
0x001008e7:  add    %edx,%eax
0x001008e9:  movzbl (%eax),%eax
0x001008ec:  lea    -0x124(%ebp),%ecx
0x001008f2:  mov    -0xc(%ebp),%edx
0x001008f5:  add    %ecx,%edx
0x001008f7:  mov    %al,(%edx)
0x001008f9:  addl   $0x1,-0xc(%ebp)
0x001008fd:  mov    -0x18(%ebp),%eax
0x00100900:  cmp    %eax,-0xc(%ebp)
0x00100903:  jl     0x1008e1

----------------
IN: 
0x00100905:  lea    -0x124(%ebp),%edx
0x0010090b:  mov    -0xc(%ebp),%eax
0x0010090e:  add    %edx,%eax
0x00100910:  movb   $0x0,(%eax)
0x00100913:  mov    -0x14(%ebp),%edx
0x00100916:  mov    0x8(%ebp),%eax
0x00100919:  sub    %edx,%eax
0x0010091b:  mov    %eax,%ecx
0x0010091d:  mov    -0x20(%ebp),%edx
0x00100920:  mov    -0x24(%ebp),%eax
0x00100923:  sub    $0xc,%esp
0x00100926:  push   %ecx
0x00100927:  lea    -0x124(%ebp),%ecx
0x0010092d:  push   %ecx
0x0010092e:  push   %edx
0x0010092f:  push   %eax
0x00100930:  push   $0x1036d6
0x00100935:  call   0x10030b

----------------
IN: 
0x0010093a:  add    $0x20,%esp
0x0010093d:  nop    
0x0010093e:  leave  
0x0010093f:  ret    

----------------
IN: 
0x001009e9:  add    $0x10,%esp
0x001009ec:  mov    -0xc(%ebp),%eax
0x001009ef:  add    $0x4,%eax
0x001009f2:  mov    (%eax),%eax
0x001009f4:  mov    %eax,-0x10(%ebp)
0x001009f7:  mov    -0xc(%ebp),%eax
0x001009fa:  mov    (%eax),%eax
0x001009fc:  mov    %eax,-0xc(%ebp)
0x001009ff:  addl   $0x1,-0x14(%ebp)
0x00100a03:  cmpl   $0x0,-0xc(%ebp)
0x00100a07:  je     0x100a13

----------------
IN: 
0x00100746:  mov    -0x2c(%ebp),%eax
0x00100749:  mov    %eax,%edx
0x0010074b:  mov    %edx,%eax
0x0010074d:  add    %eax,%eax
0x0010074f:  add    %edx,%eax
0x00100751:  shl    $0x2,%eax
0x00100754:  mov    %eax,%edx
0x00100756:  mov    -0xc(%ebp),%eax
0x00100759:  add    %edx,%eax
0x0010075b:  mov    0x8(%eax),%eax
0x0010075e:  test   %eax,%eax
0x00100760:  je     0x1006f9

----------------
IN: 
0x001007c3:  mov    0xc(%ebp),%eax
0x001007c6:  mov    0x14(%eax),%eax
0x001007c9:  lea    0x1(%eax),%edx
0x001007cc:  mov    0xc(%ebp),%eax
0x001007cf:  mov    %edx,0x14(%eax)
0x001007d2:  mov    -0x2c(%ebp),%eax
0x001007d5:  add    $0x1,%eax
0x001007d8:  mov    %eax,-0x2c(%ebp)
0x001007db:  mov    -0x2c(%ebp),%edx
0x001007de:  mov    -0x28(%ebp),%eax
0x001007e1:  cmp    %eax,%edx
0x001007e3:  jge    0x100802

----------------
IN: 
0x00101177:  mov    0x10fe60,%eax
0x0010117c:  lea    0xa0(%eax),%edx
0x00101182:  mov    0x10fe60,%eax
0x00101187:  sub    $0x4,%esp
0x0010118a:  push   $0xf00
0x0010118f:  push   %edx
0x00101190:  push   %eax
0x00101191:  call   0x103413

----------------
IN: 
0x00103413:  push   %ebp
0x00103414:  mov    %esp,%ebp
0x00103416:  push   %edi
0x00103417:  push   %esi
0x00103418:  push   %ebx
0x00103419:  sub    $0x30,%esp
0x0010341c:  mov    0x8(%ebp),%eax
0x0010341f:  mov    %eax,-0x10(%ebp)
0x00103422:  mov    0xc(%ebp),%eax
0x00103425:  mov    %eax,-0x14(%ebp)
0x00103428:  mov    0x10(%ebp),%eax
0x0010342b:  mov    %eax,-0x18(%ebp)
0x0010342e:  mov    -0x10(%ebp),%eax
0x00103431:  cmp    -0x14(%ebp),%eax
0x00103434:  jae    0x103478

----------------
IN: 
0x00103436:  mov    -0x10(%ebp),%eax
0x00103439:  mov    %eax,-0x1c(%ebp)
0x0010343c:  mov    -0x14(%ebp),%eax
0x0010343f:  mov    %eax,-0x20(%ebp)
0x00103442:  mov    -0x18(%ebp),%eax
0x00103445:  mov    %eax,-0x24(%ebp)
0x00103448:  mov    -0x24(%ebp),%eax
0x0010344b:  shr    $0x2,%eax
0x0010344e:  mov    %eax,%ecx
0x00103450:  mov    -0x1c(%ebp),%edx
0x00103453:  mov    -0x20(%ebp),%eax
0x00103456:  mov    %edx,%edi
0x00103458:  mov    %eax,%esi
0x0010345a:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0010345a:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0010345c:  mov    -0x24(%ebp),%ecx
0x0010345f:  and    $0x3,%ecx
0x00103462:  je     0x103466

----------------
IN: 
0x00103466:  mov    %esi,%eax
0x00103468:  mov    %edi,%edx
0x0010346a:  mov    %ecx,-0x28(%ebp)
0x0010346d:  mov    %edx,-0x2c(%ebp)
0x00103470:  mov    %eax,-0x30(%ebp)
0x00103473:  mov    -0x1c(%ebp),%eax
0x00103476:  jmp    0x1034ae

----------------
IN: 
0x001034ae:  add    $0x30,%esp
0x001034b1:  pop    %ebx
0x001034b2:  pop    %esi
0x001034b3:  pop    %edi
0x001034b4:  pop    %ebp
0x001034b5:  ret    

----------------
IN: 
0x00101196:  add    $0x10,%esp
0x00101199:  movl   $0x780,-0xc(%ebp)
0x001011a0:  jmp    0x1011b8

----------------
IN: 
0x001011b8:  cmpl   $0x7cf,-0xc(%ebp)
0x001011bf:  jle    0x1011a2

----------------
IN: 
0x001011a2:  mov    0x10fe60,%edx
0x001011a8:  mov    -0xc(%ebp),%eax
0x001011ab:  add    %eax,%eax
0x001011ad:  add    %edx,%eax
0x001011af:  movw   $0x720,(%eax)
0x001011b4:  addl   $0x1,-0xc(%ebp)
0x001011b8:  cmpl   $0x7cf,-0xc(%ebp)
0x001011bf:  jle    0x1011a2

----------------
IN: 
0x001011c1:  movzwl 0x10fe64,%eax
0x001011c8:  sub    $0x50,%eax
0x001011cb:  mov    %ax,0x10fe64
0x001011d1:  movzwl 0x10fe66,%eax
0x001011d8:  movzwl %ax,%eax
0x001011db:  mov    %ax,-0x1a(%ebp)
0x001011df:  movb   $0xe,-0x1b(%ebp)
0x001011e3:  movzbl -0x1b(%ebp),%eax
0x001011e7:  movzwl -0x1a(%ebp),%edx
0x001011eb:  out    %al,(%dx)
0x001011ec:  nop    
0x001011ed:  movzwl 0x10fe64,%eax
0x001011f4:  shr    $0x8,%ax
0x001011f8:  movzbl %al,%eax
0x001011fb:  movzwl 0x10fe66,%edx
0x00101202:  add    $0x1,%edx
0x00101205:  movzwl %dx,%edx
0x00101208:  mov    %dx,-0x16(%ebp)
0x0010120c:  mov    %al,-0x17(%ebp)
0x0010120f:  movzbl -0x17(%ebp),%eax
0x00101213:  movzwl -0x16(%ebp),%edx
0x00101217:  out    %al,(%dx)
0x00101218:  nop    
0x00101219:  movzwl 0x10fe66,%eax
0x00101220:  movzwl %ax,%eax
0x00101223:  mov    %ax,-0x12(%ebp)
0x00101227:  movb   $0xf,-0x13(%ebp)
0x0010122b:  movzbl -0x13(%ebp),%eax
0x0010122f:  movzwl -0x12(%ebp),%edx
0x00101233:  out    %al,(%dx)
0x00101234:  nop    
0x00101235:  movzwl 0x10fe64,%eax
0x0010123c:  movzbl %al,%eax
0x0010123f:  movzwl 0x10fe66,%edx
0x00101246:  add    $0x1,%edx
0x00101249:  movzwl %dx,%edx
0x0010124c:  mov    %dx,-0xe(%ebp)
0x00101250:  mov    %al,-0xf(%ebp)
0x00101253:  movzbl -0xf(%ebp),%eax
0x00101257:  movzwl -0xe(%ebp),%edx
0x0010125b:  out    %al,(%dx)
0x0010125c:  nop    
0x0010125d:  nop    
0x0010125e:  mov    -0x4(%ebp),%ebx
0x00101261:  leave  
0x00101262:  ret    

----------------
IN: 
0x001005bd:  mov    $0xffffffff,%eax
0x001005c2:  jmp    0x100807

----------------
IN: 
0x00100807:  leave  
0x00100808:  ret    

----------------
IN: 
0x001008c3:  sub    $0x8,%esp
0x001008c6:  pushl  0x8(%ebp)
0x001008c9:  push   $0x1036ba
0x001008ce:  call   0x10030b

----------------
IN: 
0x001008d3:  add    $0x10,%esp
0x001008d6:  jmp    0x10093d

----------------
IN: 
0x0010093d:  nop    
0x0010093e:  leave  
0x0010093f:  ret    

----------------
IN: 
0x00100a13:  nop    
0x00100a14:  leave  
0x00100a15:  ret    

----------------
IN: 
0x00100c63:  mov    $0x0,%eax
0x00100c68:  leave  
0x00100c69:  ret    

----------------
IN: 
0x00100080:  add    $0x10,%esp
0x00100083:  nop    
0x00100084:  leave  
0x00100085:  ret    

----------------
IN: 
0x001000a2:  add    $0x10,%esp
0x001000a5:  nop    
0x001000a6:  mov    -0x4(%ebp),%ebx
0x001000a9:  leave  
0x001000aa:  ret    

----------------
IN: 
0x001000bf:  add    $0x10,%esp
0x001000c2:  nop    
0x001000c3:  leave  
0x001000c4:  ret    

----------------
IN: 
0x001000e0:  add    $0x10,%esp
0x001000e3:  nop    
0x001000e4:  leave  
0x001000e5:  ret    

----------------
IN: 
0x0010004c:  call   0x102a94

----------------
IN: 
0x00102a94:  push   %ebp
0x00102a95:  mov    %esp,%ebp
0x00102a97:  call   0x102991

----------------
IN: 
0x00102991:  push   %ebp
0x00102992:  mov    %esp,%ebp
0x00102994:  sub    $0x10,%esp
0x00102997:  mov    $0x110900,%eax
0x0010299c:  add    $0x400,%eax
0x001029a1:  mov    %eax,0x110d04
0x001029a6:  movw   $0x10,0x110d08
0x001029af:  movw   $0x68,0x10fa08
0x001029b8:  mov    $0x110d00,%eax
0x001029bd:  mov    %ax,0x10fa0a
0x001029c3:  mov    $0x110d00,%eax
0x001029c8:  shr    $0x10,%eax
0x001029cb:  mov    %al,0x10fa0c
0x001029d0:  movzbl 0x10fa0d,%eax
0x001029d7:  and    $0xfffffff0,%eax
0x001029da:  or     $0x9,%eax
0x001029dd:  mov    %al,0x10fa0d
0x001029e2:  movzbl 0x10fa0d,%eax
0x001029e9:  or     $0x10,%eax
0x001029ec:  mov    %al,0x10fa0d
0x001029f1:  movzbl 0x10fa0d,%eax
0x001029f8:  and    $0xffffff9f,%eax
0x001029fb:  mov    %al,0x10fa0d
0x00102a00:  movzbl 0x10fa0d,%eax
0x00102a07:  or     $0xffffff80,%eax
0x00102a0a:  mov    %al,0x10fa0d
0x00102a0f:  movzbl 0x10fa0e,%eax
0x00102a16:  and    $0xfffffff0,%eax
0x00102a19:  mov    %al,0x10fa0e
0x00102a1e:  movzbl 0x10fa0e,%eax
0x00102a25:  and    $0xffffffef,%eax
0x00102a28:  mov    %al,0x10fa0e
0x00102a2d:  movzbl 0x10fa0e,%eax
0x00102a34:  and    $0xffffffdf,%eax
0x00102a37:  mov    %al,0x10fa0e
0x00102a3c:  movzbl 0x10fa0e,%eax
0x00102a43:  or     $0x40,%eax
0x00102a46:  mov    %al,0x10fa0e
0x00102a4b:  movzbl 0x10fa0e,%eax
0x00102a52:  and    $0x7f,%eax
0x00102a55:  mov    %al,0x10fa0e
0x00102a5a:  mov    $0x110d00,%eax
0x00102a5f:  shr    $0x18,%eax
0x00102a62:  mov    %al,0x10fa0f
0x00102a67:  movzbl 0x10fa0d,%eax
0x00102a6e:  and    $0xffffffef,%eax
0x00102a71:  mov    %al,0x10fa0d
0x00102a76:  push   $0x10fa10
0x00102a7b:  call   0x10295b

----------------
IN: 
0x0010295b:  push   %ebp
0x0010295c:  mov    %esp,%ebp
0x0010295e:  mov    0x8(%ebp),%eax
0x00102961:  lgdtl  (%eax)
0x00102964:  mov    $0x23,%eax
0x00102969:  mov    %eax,%gs
0x0010296b:  mov    $0x23,%eax
0x00102970:  mov    %eax,%fs
0x00102972:  mov    $0x10,%eax
0x00102977:  mov    %eax,%es

----------------
IN: 
0x00102979:  mov    $0x10,%eax
0x0010297e:  mov    %eax,%ds

----------------
IN: 
0x00102980:  mov    $0x10,%eax
0x00102985:  mov    %eax,%ss

----------------
IN: 
0x00102987:  ljmp   $0x8,$0x10298e

----------------
IN: 
0x0010298e:  nop    
0x0010298f:  pop    %ebp
0x00102990:  ret    

----------------
IN: 
0x00102a80:  add    $0x4,%esp
0x00102a83:  movw   $0x28,-0x2(%ebp)
0x00102a89:  movzwl -0x2(%ebp),%eax
0x00102a8d:  ltr    %ax
0x00102a90:  nop    
0x00102a91:  nop    
0x00102a92:  leave  
0x00102a93:  ret    

----------------
IN: 
0x00102a9c:  nop    
0x00102a9d:  pop    %ebp
0x00102a9e:  ret    

----------------
IN: 
0x00100051:  call   0x1016d2

----------------
IN: 
0x001016d2:  push   %ebp
0x001016d3:  mov    %esp,%ebp
0x001016d5:  sub    $0x40,%esp
0x001016d8:  movl   $0x1,0x11008c
0x001016e2:  movw   $0x21,-0x36(%ebp)
0x001016e8:  movb   $0xff,-0x37(%ebp)
0x001016ec:  movzbl -0x37(%ebp),%eax
0x001016f0:  movzwl -0x36(%ebp),%edx
0x001016f4:  out    %al,(%dx)
0x001016f5:  nop    
0x001016f6:  movw   $0xa1,-0x32(%ebp)
0x001016fc:  movb   $0xff,-0x33(%ebp)
0x00101700:  movzbl -0x33(%ebp),%eax
0x00101704:  movzwl -0x32(%ebp),%edx
0x00101708:  out    %al,(%dx)
0x00101709:  nop    
0x0010170a:  movw   $0x20,-0x2e(%ebp)
0x00101710:  movb   $0x11,-0x2f(%ebp)
0x00101714:  movzbl -0x2f(%ebp),%eax
0x00101718:  movzwl -0x2e(%ebp),%edx
0x0010171c:  out    %al,(%dx)
0x0010171d:  nop    
0x0010171e:  movw   $0x21,-0x2a(%ebp)
0x00101724:  movb   $0x20,-0x2b(%ebp)
0x00101728:  movzbl -0x2b(%ebp),%eax
0x0010172c:  movzwl -0x2a(%ebp),%edx
0x00101730:  out    %al,(%dx)
0x00101731:  nop    
0x00101732:  movw   $0x21,-0x26(%ebp)
0x00101738:  movb   $0x4,-0x27(%ebp)
0x0010173c:  movzbl -0x27(%ebp),%eax
0x00101740:  movzwl -0x26(%ebp),%edx
0x00101744:  out    %al,(%dx)
0x00101745:  nop    
0x00101746:  movw   $0x21,-0x22(%ebp)
0x0010174c:  movb   $0x3,-0x23(%ebp)
0x00101750:  movzbl -0x23(%ebp),%eax
0x00101754:  movzwl -0x22(%ebp),%edx
0x00101758:  out    %al,(%dx)
0x00101759:  nop    
0x0010175a:  movw   $0xa0,-0x1e(%ebp)
0x00101760:  movb   $0x11,-0x1f(%ebp)
0x00101764:  movzbl -0x1f(%ebp),%eax
0x00101768:  movzwl -0x1e(%ebp),%edx
0x0010176c:  out    %al,(%dx)
0x0010176d:  nop    
0x0010176e:  movw   $0xa1,-0x1a(%ebp)
0x00101774:  movb   $0x28,-0x1b(%ebp)
0x00101778:  movzbl -0x1b(%ebp),%eax
0x0010177c:  movzwl -0x1a(%ebp),%edx
0x00101780:  out    %al,(%dx)
0x00101781:  nop    
0x00101782:  movw   $0xa1,-0x16(%ebp)
0x00101788:  movb   $0x2,-0x17(%ebp)
0x0010178c:  movzbl -0x17(%ebp),%eax
0x00101790:  movzwl -0x16(%ebp),%edx
0x00101794:  out    %al,(%dx)
0x00101795:  nop    
0x00101796:  movw   $0xa1,-0x12(%ebp)
0x0010179c:  movb   $0x3,-0x13(%ebp)
0x001017a0:  movzbl -0x13(%ebp),%eax
0x001017a4:  movzwl -0x12(%ebp),%edx
0x001017a8:  out    %al,(%dx)
0x001017a9:  nop    
0x001017aa:  movw   $0x20,-0xe(%ebp)
0x001017b0:  movb   $0x68,-0xf(%ebp)
0x001017b4:  movzbl -0xf(%ebp),%eax
0x001017b8:  movzwl -0xe(%ebp),%edx
0x001017bc:  out    %al,(%dx)
0x001017bd:  nop    
0x001017be:  movw   $0x20,-0xa(%ebp)
0x001017c4:  movb   $0xa,-0xb(%ebp)
0x001017c8:  movzbl -0xb(%ebp),%eax
0x001017cc:  movzwl -0xa(%ebp),%edx
0x001017d0:  out    %al,(%dx)
0x001017d1:  nop    
0x001017d2:  movw   $0xa0,-0x6(%ebp)
0x001017d8:  movb   $0x68,-0x7(%ebp)
0x001017dc:  movzbl -0x7(%ebp),%eax
0x001017e0:  movzwl -0x6(%ebp),%edx
0x001017e4:  out    %al,(%dx)
0x001017e5:  nop    
0x001017e6:  movw   $0xa0,-0x2(%ebp)
0x001017ec:  movb   $0xa,-0x3(%ebp)
0x001017f0:  movzbl -0x3(%ebp),%eax
0x001017f4:  movzwl -0x2(%ebp),%edx
0x001017f8:  out    %al,(%dx)
0x001017f9:  nop    
0x001017fa:  movzwl 0x10f550,%eax
0x00101801:  cmp    $0xffffffff,%ax
0x00101805:  je     0x10181a

----------------
IN: 
0x00101807:  movzwl 0x10f550,%eax
0x0010180e:  movzwl %ax,%eax
0x00101811:  push   %eax
0x00101812:  call   0x10164a

----------------
IN: 
0x0010166a:  movzwl -0x14(%ebp),%eax
0x0010166e:  movzbl %al,%eax
0x00101671:  movw   $0x21,-0x6(%ebp)
0x00101677:  mov    %al,-0x7(%ebp)
0x0010167a:  movzbl -0x7(%ebp),%eax
0x0010167e:  movzwl -0x6(%ebp),%edx
0x00101682:  out    %al,(%dx)
0x00101683:  nop    
0x00101684:  movzwl -0x14(%ebp),%eax
0x00101688:  shr    $0x8,%ax
0x0010168c:  movzbl %al,%eax
0x0010168f:  movw   $0xa1,-0x2(%ebp)
0x00101695:  mov    %al,-0x3(%ebp)
0x00101698:  movzbl -0x3(%ebp),%eax
0x0010169c:  movzwl -0x2(%ebp),%edx
0x001016a0:  out    %al,(%dx)
0x001016a1:  nop    
0x001016a2:  nop    
0x001016a3:  leave  
0x001016a4:  ret    

----------------
IN: 
0x00101817:  add    $0x4,%esp
0x0010181a:  nop    
0x0010181b:  leave  
0x0010181c:  ret    

----------------
IN: 
0x00100056:  call   0x101838

----------------
IN: 
0x00101838:  push   %ebp
0x00101839:  mov    %esp,%ebp
0x0010183b:  sub    $0x10,%esp
0x0010183e:  movl   $0x0,-0x4(%ebp)
0x00101845:  jmp    0x10190d

----------------
IN: 
0x0010190d:  mov    -0x4(%ebp),%eax
0x00101910:  cmp    $0xff,%eax
0x00101915:  jbe    0x10184a

----------------
IN: 
0x0010184a:  mov    -0x4(%ebp),%eax
0x0010184d:  mov    0x10f5e0(,%eax,4),%eax
0x00101854:  mov    %eax,%edx
0x00101856:  mov    -0x4(%ebp),%eax
0x00101859:  mov    %dx,0x110100(,%eax,8)
0x00101861:  mov    -0x4(%ebp),%eax
0x00101864:  movw   $0x8,0x110102(,%eax,8)
0x0010186e:  mov    -0x4(%ebp),%eax
0x00101871:  movzbl 0x110104(,%eax,8),%edx
0x00101879:  and    $0xffffffe0,%edx
0x0010187c:  mov    %dl,0x110104(,%eax,8)
0x00101883:  mov    -0x4(%ebp),%eax
0x00101886:  movzbl 0x110104(,%eax,8),%edx
0x0010188e:  and    $0x1f,%edx
0x00101891:  mov    %dl,0x110104(,%eax,8)
0x00101898:  mov    -0x4(%ebp),%eax
0x0010189b:  movzbl 0x110105(,%eax,8),%edx
0x001018a3:  and    $0xfffffff0,%edx
0x001018a6:  or     $0xe,%edx
0x001018a9:  mov    %dl,0x110105(,%eax,8)
0x001018b0:  mov    -0x4(%ebp),%eax
0x001018b3:  movzbl 0x110105(,%eax,8),%edx
0x001018bb:  and    $0xffffffef,%edx
0x001018be:  mov    %dl,0x110105(,%eax,8)
0x001018c5:  mov    -0x4(%ebp),%eax
0x001018c8:  movzbl 0x110105(,%eax,8),%edx
0x001018d0:  and    $0xffffff9f,%edx
0x001018d3:  mov    %dl,0x110105(,%eax,8)
0x001018da:  mov    -0x4(%ebp),%eax
0x001018dd:  movzbl 0x110105(,%eax,8),%edx
0x001018e5:  or     $0xffffff80,%edx
0x001018e8:  mov    %dl,0x110105(,%eax,8)
0x001018ef:  mov    -0x4(%ebp),%eax
0x001018f2:  mov    0x10f5e0(,%eax,4),%eax
0x001018f9:  shr    $0x10,%eax
0x001018fc:  mov    %eax,%edx
0x001018fe:  mov    -0x4(%ebp),%eax
0x00101901:  mov    %dx,0x110106(,%eax,8)
0x00101909:  addl   $0x1,-0x4(%ebp)
0x0010190d:  mov    -0x4(%ebp),%eax
0x00101910:  cmp    $0xff,%eax
0x00101915:  jbe    0x10184a

----------------
IN: 
0x0010191b:  mov    0x10f7c4,%eax
0x00101920:  mov    %ax,0x1104c8
0x00101926:  movw   $0x8,0x1104ca
0x0010192f:  movzbl 0x1104cc,%eax
0x00101936:  and    $0xffffffe0,%eax
0x00101939:  mov    %al,0x1104cc
0x0010193e:  movzbl 0x1104cc,%eax
0x00101945:  and    $0x1f,%eax
0x00101948:  mov    %al,0x1104cc
0x0010194d:  movzbl 0x1104cd,%eax
0x00101954:  and    $0xfffffff0,%eax
0x00101957:  or     $0xe,%eax
0x0010195a:  mov    %al,0x1104cd
0x0010195f:  movzbl 0x1104cd,%eax
0x00101966:  and    $0xffffffef,%eax
0x00101969:  mov    %al,0x1104cd
0x0010196e:  movzbl 0x1104cd,%eax
0x00101975:  or     $0x60,%eax
0x00101978:  mov    %al,0x1104cd
0x0010197d:  movzbl 0x1104cd,%eax
0x00101984:  or     $0xffffff80,%eax
0x00101987:  mov    %al,0x1104cd
0x0010198c:  mov    0x10f7c4,%eax
0x00101991:  shr    $0x10,%eax
0x00101994:  mov    %ax,0x1104ce
0x0010199a:  movl   $0x10f560,-0x8(%ebp)
0x001019a1:  mov    -0x8(%ebp),%eax
0x001019a4:  lidtl  (%eax)
0x001019a7:  nop    
0x001019a8:  nop    
0x001019a9:  leave  
0x001019aa:  ret    

----------------
IN: 
0x0010005b:  call   0x100d3e

----------------
IN: 
0x00100d3e:  push   %ebp
0x00100d3f:  mov    %esp,%ebp
0x00100d41:  sub    $0x18,%esp
0x00100d44:  movw   $0x43,-0x12(%ebp)
0x00100d4a:  movb   $0x34,-0x13(%ebp)
0x00100d4e:  movzbl -0x13(%ebp),%eax
0x00100d52:  movzwl -0x12(%ebp),%edx
0x00100d56:  out    %al,(%dx)
0x00100d57:  nop    
0x00100d58:  movw   $0x40,-0xe(%ebp)
0x00100d5e:  movb   $0x9c,-0xf(%ebp)
0x00100d62:  movzbl -0xf(%ebp),%eax
0x00100d66:  movzwl -0xe(%ebp),%edx
0x00100d6a:  out    %al,(%dx)
0x00100d6b:  nop    
0x00100d6c:  movw   $0x40,-0xa(%ebp)
0x00100d72:  movb   $0x2e,-0xb(%ebp)
0x00100d76:  movzbl -0xb(%ebp),%eax
0x00100d7a:  movzwl -0xa(%ebp),%edx
0x00100d7e:  out    %al,(%dx)
0x00100d7f:  nop    
0x00100d80:  movl   $0x0,0x10fe44
0x00100d8a:  sub    $0xc,%esp
0x00100d8d:  push   $0x103874
0x00100d92:  call   0x10030b

----------------
IN: 
0x00100d97:  add    $0x10,%esp
0x00100d9a:  sub    $0xc,%esp
0x00100d9d:  push   $0x0
0x00100d9f:  call   0x1016a5

----------------
IN: 
0x00100da4:  add    $0x10,%esp
0x00100da7:  nop    
0x00100da8:  leave  
0x00100da9:  ret    

----------------
IN: 
0x00100060:  call   0x10163a

----------------
IN: 
0x0010163a:  push   %ebp
0x0010163b:  mov    %esp,%ebp
0x0010163d:  sti    

----------------
IN: 
0x0010163e:  nop    

Servicing hardware INT=0x20
----------------
IN: 
0x00101ffb:  push   $0x0
0x00101ffd:  push   $0x20
0x00101fff:  jmp    0x101ec9

----------------
IN: 
0x00101ec9:  push   %ds
0x00101eca:  push   %es
0x00101ecb:  push   %fs
0x00101ecd:  push   %gs
0x00101ecf:  pusha  
0x00101ed0:  mov    $0x10,%eax
0x00101ed5:  mov    %eax,%ds

----------------
IN: 
0x00101ed7:  mov    %eax,%es

----------------
IN: 
0x00101ed9:  push   %esp
0x00101eda:  call   0x101eb2

----------------
IN: 
0x00101eb2:  push   %ebp
0x00101eb3:  mov    %esp,%ebp
0x00101eb5:  sub    $0x8,%esp
0x00101eb8:  sub    $0xc,%esp
0x00101ebb:  pushl  0x8(%ebp)
0x00101ebe:  call   0x101c8b

----------------
IN: 
0x00101c8b:  push   %ebp
0x00101c8c:  mov    %esp,%ebp
0x00101c8e:  push   %edi
0x00101c8f:  push   %esi
0x00101c90:  push   %ebx
0x00101c91:  sub    $0x1c,%esp
0x00101c94:  mov    0x8(%ebp),%eax
0x00101c97:  mov    0x30(%eax),%eax
0x00101c9a:  cmp    $0x79,%eax
0x00101c9d:  je     0x101df3

----------------
IN: 
0x00101ca3:  cmp    $0x79,%eax
0x00101ca6:  ja     0x101e69

----------------
IN: 
0x00101cac:  cmp    $0x78,%eax
0x00101caf:  je     0x101d75

----------------
IN: 
0x00101cb5:  cmp    $0x78,%eax
0x00101cb8:  ja     0x101e69

----------------
IN: 
0x00101cbe:  cmp    $0x2f,%eax
0x00101cc1:  ja     0x101e69

----------------
IN: 
0x00101cc7:  cmp    $0x2e,%eax
0x00101cca:  jae    0x101e9f

----------------
IN: 
0x00101cd0:  cmp    $0x24,%eax
0x00101cd3:  je     0x101d27

----------------
IN: 
0x00101cd5:  cmp    $0x24,%eax
0x00101cd8:  ja     0x101e69

----------------
IN: 
0x00101cde:  cmp    $0x20,%eax
0x00101ce1:  je     0x101ced

----------------
IN: 
0x00101ced:  mov    0x10fe44,%eax
0x00101cf2:  add    $0x1,%eax
0x00101cf5:  mov    %eax,0x10fe44
0x00101cfa:  mov    0x10fe44,%ecx
0x00101d00:  mov    $0x51eb851f,%edx
0x00101d05:  mov    %ecx,%eax
0x00101d07:  mul    %edx
0x00101d09:  mov    %edx,%eax
0x00101d0b:  shr    $0x5,%eax
0x00101d0e:  imul   $0x64,%eax,%edx
0x00101d11:  mov    %ecx,%eax
0x00101d13:  sub    %edx,%eax
0x00101d15:  test   %eax,%eax
0x00101d17:  jne    0x101ea2

----------------
IN: 
0x00101ea2:  nop    
0x00101ea3:  jmp    0x101ea9

----------------
IN: 
0x00101ea9:  nop    
0x00101eaa:  lea    -0xc(%ebp),%esp
0x00101ead:  pop    %ebx
0x00101eae:  pop    %esi
0x00101eaf:  pop    %edi
0x00101eb0:  pop    %ebp
0x00101eb1:  ret    

----------------
IN: 
0x00101ec3:  add    $0x10,%esp
0x00101ec6:  nop    
0x00101ec7:  leave  
0x00101ec8:  ret    

----------------
IN: 
0x00101edf:  pop    %esp
0x00101ee0:  popa   
0x00101ee1:  pop    %gs
0x00101ee3:  pop    %fs
0x00101ee5:  pop    %es

----------------
IN: 
0x00101ee6:  pop    %ds

----------------
IN: 
0x00101ee7:  add    $0x8,%esp
0x00101eea:  iret   

Servicing hardware INT=0x20
----------------
IN: 
0x0010163f:  nop    
0x00101640:  pop    %ebp
0x00101641:  ret    

----------------
IN: 
0x00100065:  call   0x1001ba

----------------
IN: 
0x001001ba:  push   %ebp
0x001001bb:  mov    %esp,%ebp
0x001001bd:  sub    $0x8,%esp
0x001001c0:  call   0x1000e6

----------------
IN: 
0x001000e6:  push   %ebp
0x001000e7:  mov    %esp,%ebp
0x001000e9:  sub    $0x18,%esp
0x001000ec:  mov    %cs,-0xa(%ebp)
0x001000ef:  mov    %ds,-0xc(%ebp)
0x001000f2:  mov    %es,-0xe(%ebp)
0x001000f5:  mov    %ss,-0x10(%ebp)
0x001000f8:  movzwl -0xa(%ebp),%eax
0x001000fc:  movzwl %ax,%eax
0x001000ff:  and    $0x3,%eax
0x00100102:  mov    %eax,%edx
0x00100104:  mov    0x10fa20,%eax
0x00100109:  sub    $0x4,%esp
0x0010010c:  push   %edx
0x0010010d:  push   %eax
0x0010010e:  push   $0x103581
0x00100113:  call   0x10030b

Servicing hardware INT=0x20
----------------
IN: 
0x00100118:  add    $0x10,%esp
0x0010011b:  movzwl -0xa(%ebp),%eax
0x0010011f:  movzwl %ax,%edx
0x00100122:  mov    0x10fa20,%eax
0x00100127:  sub    $0x4,%esp
0x0010012a:  push   %edx
0x0010012b:  push   %eax
0x0010012c:  push   $0x10358f
0x00100131:  call   0x10030b

----------------
IN: 
0x00100136:  add    $0x10,%esp
0x00100139:  movzwl -0xc(%ebp),%eax
0x0010013d:  movzwl %ax,%edx
0x00100140:  mov    0x10fa20,%eax
0x00100145:  sub    $0x4,%esp
0x00100148:  push   %edx
0x00100149:  push   %eax
0x0010014a:  push   $0x10359d
0x0010014f:  call   0x10030b

----------------
IN: 
0x00100154:  add    $0x10,%esp
0x00100157:  movzwl -0xe(%ebp),%eax
0x0010015b:  movzwl %ax,%edx
0x0010015e:  mov    0x10fa20,%eax
0x00100163:  sub    $0x4,%esp
0x00100166:  push   %edx
0x00100167:  push   %eax
0x00100168:  push   $0x1035ab
0x0010016d:  call   0x10030b

----------------
IN: 
0x00100172:  add    $0x10,%esp
0x00100175:  movzwl -0x10(%ebp),%eax
0x00100179:  movzwl %ax,%edx
0x0010017c:  mov    0x10fa20,%eax
0x00100181:  sub    $0x4,%esp
0x00100184:  push   %edx
0x00100185:  push   %eax
0x00100186:  push   $0x1035b9
0x0010018b:  call   0x10030b

----------------
IN: 
0x00100190:  add    $0x10,%esp
0x00100193:  mov    0x10fa20,%eax
0x00100198:  add    $0x1,%eax
0x0010019b:  mov    %eax,0x10fa20
0x001001a0:  nop    
0x001001a1:  leave  
0x001001a2:  ret    

Servicing hardware INT=0x20
----------------
IN: 
0x001001c5:  sub    $0xc,%esp
0x001001c8:  push   $0x1035c8
0x001001cd:  call   0x10030b

----------------
IN: 
0x001001d2:  add    $0x10,%esp
0x001001d5:  call   0x1001a3

----------------
IN: 
0x001001a3:  push   %ebp
0x001001a4:  mov    %esp,%ebp
0x001001a6:  sub    $0x8,%esp
0x001001a9:  int    $0x78

----------------
IN: 
0x00102313:  push   $0x0
0x00102315:  push   $0x78
0x00102317:  jmp    0x101ec9

----------------
IN: 
0x00101d75:  mov    0x8(%ebp),%eax
0x00101d78:  movzwl 0x3c(%eax),%eax
0x00101d7c:  cmp    $0x1b,%ax
0x00101d80:  je     0x101ea5

----------------
IN: 
0x00101d86:  mov    0x8(%ebp),%eax
0x00101d89:  mov    $0x1100a0,%edx
0x00101d8e:  mov    %eax,%ebx
0x00101d90:  mov    $0x13,%eax
0x00101d95:  mov    %edx,%edi
0x00101d97:  mov    %ebx,%esi
0x00101d99:  mov    %eax,%ecx
0x00101d9b:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x00101d9b:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x00101d9d:  movw   $0x1b,0x1100dc
0x00101da6:  movw   $0x23,0x1100e8
0x00101daf:  movzwl 0x1100e8,%eax
0x00101db6:  mov    %ax,0x1100c8
0x00101dbc:  movzwl 0x1100c8,%eax
0x00101dc3:  mov    %ax,0x1100cc
0x00101dc9:  mov    0x8(%ebp),%eax
0x00101dcc:  add    $0x44,%eax
0x00101dcf:  mov    %eax,0x1100e4
0x00101dd4:  mov    0x1100e0,%eax
0x00101dd9:  or     $0x30,%ah
0x00101ddc:  mov    %eax,0x1100e0
0x00101de1:  mov    0x8(%ebp),%eax
0x00101de4:  sub    $0x4,%eax
0x00101de7:  mov    $0x1100a0,%edx
0x00101dec:  mov    %edx,(%eax)
0x00101dee:  jmp    0x101ea5

----------------
IN: 
0x00101ea5:  nop    
0x00101ea6:  jmp    0x101ea9

Servicing hardware INT=0x20
----------------
IN: 
0x00101ffb:  push   $0x0
0x00101ffd:  push   $0x20
0x00101fff:  jmp    0x101ec9

----------------
IN: 
0x00101ec9:  push   %ds
0x00101eca:  push   %es
0x00101ecb:  push   %fs
0x00101ecd:  push   %gs
0x00101ecf:  pusha  
0x00101ed0:  mov    $0x10,%eax
0x00101ed5:  mov    %eax,%ds

----------------
IN: 
0x00101ed7:  mov    %eax,%es

----------------
IN: 
0x00101ed9:  push   %esp
0x00101eda:  call   0x101eb2

----------------
IN: 
0x00101eb2:  push   %ebp
0x00101eb3:  mov    %esp,%ebp
0x00101eb5:  sub    $0x8,%esp
0x00101eb8:  sub    $0xc,%esp
0x00101ebb:  pushl  0x8(%ebp)
0x00101ebe:  call   0x101c8b

----------------
IN: 
0x00101c8b:  push   %ebp
0x00101c8c:  mov    %esp,%ebp
0x00101c8e:  push   %edi
0x00101c8f:  push   %esi
0x00101c90:  push   %ebx
0x00101c91:  sub    $0x1c,%esp
0x00101c94:  mov    0x8(%ebp),%eax
0x00101c97:  mov    0x30(%eax),%eax
0x00101c9a:  cmp    $0x79,%eax
0x00101c9d:  je     0x101df3

----------------
IN: 
0x00101ca3:  cmp    $0x79,%eax
0x00101ca6:  ja     0x101e69

----------------
IN: 
0x00101cac:  cmp    $0x78,%eax
0x00101caf:  je     0x101d75

----------------
IN: 
0x00101cb5:  cmp    $0x78,%eax
0x00101cb8:  ja     0x101e69

----------------
IN: 
0x00101cbe:  cmp    $0x2f,%eax
0x00101cc1:  ja     0x101e69

----------------
IN: 
0x00101cc7:  cmp    $0x2e,%eax
0x00101cca:  jae    0x101e9f

----------------
IN: 
0x00101cd0:  cmp    $0x24,%eax
0x00101cd3:  je     0x101d27

----------------
IN: 
0x00101cd5:  cmp    $0x24,%eax
0x00101cd8:  ja     0x101e69

----------------
IN: 
0x00101cde:  cmp    $0x20,%eax
0x00101ce1:  je     0x101ced

----------------
IN: 
0x00101ced:  mov    0x10fe44,%eax
0x00101cf2:  add    $0x1,%eax
0x00101cf5:  mov    %eax,0x10fe44
0x00101cfa:  mov    0x10fe44,%ecx
0x00101d00:  mov    $0x51eb851f,%edx
0x00101d05:  mov    %ecx,%eax
0x00101d07:  mul    %edx
0x00101d09:  mov    %edx,%eax
0x00101d0b:  shr    $0x5,%eax
0x00101d0e:  imul   $0x64,%eax,%edx
0x00101d11:  mov    %ecx,%eax
0x00101d13:  sub    %edx,%eax
0x00101d15:  test   %eax,%eax
0x00101d17:  jne    0x101ea2

----------------
IN: 
0x00101ea2:  nop    
0x00101ea3:  jmp    0x101ea9

----------------
IN: 
0x00101ea9:  nop    
0x00101eaa:  lea    -0xc(%ebp),%esp
0x00101ead:  pop    %ebx
0x00101eae:  pop    %esi
0x00101eaf:  pop    %edi
0x00101eb0:  pop    %ebp
0x00101eb1:  ret    

----------------
IN: 
0x00101ec3:  add    $0x10,%esp
0x00101ec6:  nop    
0x00101ec7:  leave  
0x00101ec8:  ret    

----------------
IN: 
0x00101edf:  pop    %esp
0x00101ee0:  popa   
0x00101ee1:  pop    %gs
0x00101ee3:  pop    %fs
0x00101ee5:  pop    %es

----------------
IN: 
0x00101ee6:  pop    %ds

----------------
IN: 
0x00101ee7:  add    $0x8,%esp
0x00101eea:  iret   

Servicing hardware INT=0x20
----------------
IN: 
0x001001ab:  mov    %ebp,%esp
0x001001ad:  nop    
0x001001ae:  pop    %ebp
0x001001af:  ret    

----------------
IN: 
0x001001da:  call   0x1000e6

----------------
IN: 
0x001000e6:  push   %ebp
0x001000e7:  mov    %esp,%ebp
0x001000e9:  sub    $0x18,%esp
0x001000ec:  mov    %cs,-0xa(%ebp)
0x001000ef:  mov    %ds,-0xc(%ebp)
0x001000f2:  mov    %es,-0xe(%ebp)
0x001000f5:  mov    %ss,-0x10(%ebp)
0x001000f8:  movzwl -0xa(%ebp),%eax
0x001000fc:  movzwl %ax,%eax
0x001000ff:  and    $0x3,%eax
0x00100102:  mov    %eax,%edx
0x00100104:  mov    0x10fa20,%eax
0x00100109:  sub    $0x4,%esp
0x0010010c:  push   %edx
0x0010010d:  push   %eax
0x0010010e:  push   $0x103581
0x00100113:  call   0x10030b

----------------
IN: 
0x0010030b:  push   %ebp
0x0010030c:  mov    %esp,%ebp
0x0010030e:  sub    $0x18,%esp
0x00100311:  lea    0xc(%ebp),%eax
0x00100314:  mov    %eax,-0x10(%ebp)
0x00100317:  mov    -0x10(%ebp),%eax
0x0010031a:  sub    $0x8,%esp
0x0010031d:  push   %eax
0x0010031e:  pushl  0x8(%ebp)
0x00100321:  call   0x1002e2

Servicing hardware INT=0x20
----------------
IN: 
0x001002e2:  push   %ebp
0x001002e3:  mov    %esp,%ebp
0x001002e5:  sub    $0x18,%esp
0x001002e8:  movl   $0x0,-0xc(%ebp)
0x001002ef:  pushl  0xc(%ebp)
0x001002f2:  pushl  0x8(%ebp)
0x001002f5:  lea    -0xc(%ebp),%eax
0x001002f8:  push   %eax
0x001002f9:  push   $0x1002be
0x001002fe:  call   0x102c45

----------------
IN: 
0x00102c45:  push   %ebp
0x00102c46:  mov    %esp,%ebp
0x00102c48:  push   %esi
0x00102c49:  push   %ebx
0x00102c4a:  sub    $0x20,%esp
0x00102c4d:  jmp    0x102c66

----------------
IN: 
0x00102c66:  mov    0x10(%ebp),%eax
0x00102c69:  lea    0x1(%eax),%edx
0x00102c6c:  mov    %edx,0x10(%ebp)
0x00102c6f:  movzbl (%eax),%eax
0x00102c72:  movzbl %al,%ebx
0x00102c75:  cmp    $0x25,%ebx
0x00102c78:  jne    0x102c4f

----------------
IN: 
0x00102c7a:  movb   $0x20,-0x25(%ebp)
0x00102c7e:  movl   $0xffffffff,-0x1c(%ebp)
0x00102c85:  mov    -0x1c(%ebp),%eax
0x00102c88:  mov    %eax,-0x18(%ebp)
0x00102c8b:  movl   $0x0,-0x24(%ebp)
0x00102c92:  mov    -0x24(%ebp),%eax
0x00102c95:  mov    %eax,-0x20(%ebp)
0x00102c98:  mov    0x10(%ebp),%eax
0x00102c9b:  lea    0x1(%eax),%edx
0x00102c9e:  mov    %edx,0x10(%ebp)
0x00102ca1:  movzbl (%eax),%eax
0x00102ca4:  movzbl %al,%ebx
0x00102ca7:  lea    -0x23(%ebx),%eax
0x00102caa:  cmp    $0x55,%eax
0x00102cad:  ja     0x102fb8

----------------
IN: 
0x00102cb3:  mov    0x103d14(,%eax,4),%eax
0x00102cba:  jmp    *%eax

----------------
IN: 
0x00102e92:  sub    $0x8,%esp
0x00102e95:  pushl  -0x20(%ebp)
0x00102e98:  lea    0x14(%ebp),%eax
0x00102e9b:  push   %eax
0x00102e9c:  call   0x102bda

Servicing hardware INT=0x20
----------------
IN: 
0x00102bda:  push   %ebp
0x00102bdb:  mov    %esp,%ebp
0x00102bdd:  cmpl   $0x1,0xc(%ebp)
0x00102be1:  jle    0x102bf7

----------------
IN: 
0x00102bf7:  cmpl   $0x0,0xc(%ebp)
0x00102bfb:  je     0x102c0f

----------------
IN: 
0x00102c0f:  mov    0x8(%ebp),%eax
0x00102c12:  mov    (%eax),%eax
0x00102c14:  lea    0x4(%eax),%ecx
0x00102c17:  mov    0x8(%ebp),%edx
0x00102c1a:  mov    %ecx,(%edx)
0x00102c1c:  mov    (%eax),%eax
0x00102c1e:  cltd   
0x00102c1f:  pop    %ebp
0x00102c20:  ret    

----------------
IN: 
0x00102ea1:  add    $0x10,%esp
0x00102ea4:  mov    %eax,-0x10(%ebp)
0x00102ea7:  mov    %edx,-0xc(%ebp)
0x00102eaa:  mov    -0x10(%ebp),%eax
0x00102ead:  mov    -0xc(%ebp),%edx
0x00102eb0:  test   %edx,%edx
0x00102eb2:  jns    0x102ed7

----------------
IN: 
0x00102ed7:  movl   $0xa,-0x14(%ebp)
0x00102ede:  jmp    0x102f82

----------------
IN: 
0x00102f82:  movsbl -0x25(%ebp),%edx
0x00102f86:  mov    -0x14(%ebp),%eax
0x00102f89:  sub    $0x4,%esp
0x00102f8c:  push   %edx
0x00102f8d:  pushl  -0x18(%ebp)
0x00102f90:  push   %eax
0x00102f91:  pushl  -0xc(%ebp)
0x00102f94:  pushl  -0x10(%ebp)
0x00102f97:  pushl  0xc(%ebp)
0x00102f9a:  pushl  0x8(%ebp)
0x00102f9d:  call   0x102a9f

----------------
IN: 
0x00102a9f:  push   %ebp
0x00102aa0:  mov    %esp,%ebp
0x00102aa2:  sub    $0x38,%esp
0x00102aa5:  mov    0x10(%ebp),%eax
0x00102aa8:  mov    %eax,-0x30(%ebp)
0x00102aab:  mov    0x14(%ebp),%eax
0x00102aae:  mov    %eax,-0x2c(%ebp)
0x00102ab1:  mov    -0x30(%ebp),%eax
0x00102ab4:  mov    -0x2c(%ebp),%edx
0x00102ab7:  mov    %eax,-0x18(%ebp)
0x00102aba:  mov    %edx,-0x14(%ebp)
0x00102abd:  mov    0x18(%ebp),%eax
0x00102ac0:  mov    %eax,-0x1c(%ebp)
0x00102ac3:  mov    -0x18(%ebp),%eax
0x00102ac6:  mov    -0x14(%ebp),%edx
0x00102ac9:  mov    %eax,-0x20(%ebp)
0x00102acc:  mov    %edx,-0x10(%ebp)
0x00102acf:  mov    -0x10(%ebp),%eax
0x00102ad2:  mov    %eax,-0xc(%ebp)
0x00102ad5:  cmpl   $0x0,-0x10(%ebp)
0x00102ad9:  je     0x102af7

Servicing hardware INT=0x20
----------------
IN: 
0x00102af7:  mov    -0x20(%ebp),%eax
0x00102afa:  mov    -0xc(%ebp),%edx
0x00102afd:  divl   -0x1c(%ebp)
0x00102b00:  mov    %eax,-0x20(%ebp)
0x00102b03:  mov    %edx,-0x24(%ebp)
0x00102b06:  mov    -0x20(%ebp),%eax
0x00102b09:  mov    -0x10(%ebp),%edx
0x00102b0c:  mov    %eax,-0x18(%ebp)
0x00102b0f:  mov    %edx,-0x14(%ebp)
0x00102b12:  mov    -0x24(%ebp),%eax
0x00102b15:  mov    %eax,-0x28(%ebp)
0x00102b18:  mov    0x18(%ebp),%eax
0x00102b1b:  mov    $0x0,%edx
0x00102b20:  mov    -0x2c(%ebp),%ecx
0x00102b23:  cmp    %eax,-0x30(%ebp)
0x00102b26:  sbb    %edx,%ecx
0x00102b28:  jb     0x102b61

----------------
IN: 
0x00102b61:  subl   $0x1,0x1c(%ebp)
0x00102b65:  cmpl   $0x0,0x1c(%ebp)
0x00102b69:  jg     0x102b50

----------------
IN: 
0x00102b6b:  mov    -0x28(%ebp),%eax
0x00102b6e:  add    $0x103cf0,%eax
0x00102b73:  movzbl (%eax),%eax
0x00102b76:  movsbl %al,%eax
0x00102b79:  sub    $0x8,%esp
0x00102b7c:  pushl  0xc(%ebp)
0x00102b7f:  push   %eax
0x00102b80:  mov    0x8(%ebp),%eax
0x00102b83:  call   *%eax

----------------
IN: 
0x001002be:  push   %ebp
0x001002bf:  mov    %esp,%ebp
0x001002c1:  sub    $0x8,%esp
0x001002c4:  sub    $0xc,%esp
0x001002c7:  pushl  0x8(%ebp)
0x001002ca:  call   0x1015ae

----------------
IN: 
0x001015ae:  push   %ebp
0x001015af:  mov    %esp,%ebp
0x001015b1:  sub    $0x8,%esp
0x001015b4:  pushl  0x8(%ebp)
0x001015b7:  call   0x101045

----------------
IN: 
0x00101045:  push   %ebp
0x00101046:  mov    %esp,%ebp
0x00101048:  cmpl   $0x8,0x8(%ebp)
0x0010104c:  je     0x10105b

Servicing hardware INT=0x20
----------------
IN: 
0x0010104e:  pushl  0x8(%ebp)
0x00101051:  call   0x100fc8

----------------
IN: 
0x00100fc8:  push   %ebp
0x00100fc9:  mov    %esp,%ebp
0x00100fcb:  sub    $0x20,%esp
0x00100fce:  movl   $0x0,-0x4(%ebp)
0x00100fd5:  jmp    0x100fe0

----------------
IN: 
0x00100fe0:  movw   $0x379,-0x6(%ebp)
0x00100fe6:  movzwl -0x6(%ebp),%eax
0x00100fea:  mov    %eax,%edx
0x00100fec:  in     (%dx),%al
0x00100fed:  mov    %al,-0x7(%ebp)
0x00100ff0:  movzbl -0x7(%ebp),%eax
0x00100ff4:  test   %al,%al
0x00100ff6:  js     0x101001

----------------
IN: 
0x00101001:  mov    0x8(%ebp),%eax
0x00101004:  movzbl %al,%eax
0x00101007:  movw   $0x378,-0x12(%ebp)
0x0010100d:  mov    %al,-0x13(%ebp)
0x00101010:  movzbl -0x13(%ebp),%eax
0x00101014:  movzwl -0x12(%ebp),%edx
0x00101018:  out    %al,(%dx)
0x00101019:  nop    
0x0010101a:  movw   $0x37a,-0xe(%ebp)
0x00101020:  movb   $0xd,-0xf(%ebp)
0x00101024:  movzbl -0xf(%ebp),%eax
0x00101028:  movzwl -0xe(%ebp),%edx
0x0010102c:  out    %al,(%dx)
0x0010102d:  nop    
0x0010102e:  movw   $0x37a,-0xa(%ebp)
0x00101034:  movb   $0x8,-0xb(%ebp)
0x00101038:  movzbl -0xb(%ebp),%eax
0x0010103c:  movzwl -0xa(%ebp),%edx
0x00101040:  out    %al,(%dx)
0x00101041:  nop    
0x00101042:  nop    
0x00101043:  leave  
0x00101044:  ret    

----------------
IN: 
0x00101056:  add    $0x4,%esp
0x00101059:  jmp    0x101079

----------------
IN: 
0x00101079:  nop    
0x0010107a:  leave  
0x0010107b:  ret    

----------------
IN: 
0x001015bc:  add    $0x4,%esp
0x001015bf:  sub    $0xc,%esp
0x001015c2:  pushl  0x8(%ebp)
0x001015c5:  call   0x10107c

Servicing hardware INT=0x20
----------------
IN: 
0x0010107c:  push   %ebp
0x0010107d:  mov    %esp,%ebp
0x0010107f:  push   %ebx
0x00101080:  sub    $0x24,%esp
0x00101083:  mov    0x8(%ebp),%eax
0x00101086:  mov    $0x0,%al
0x00101088:  test   %eax,%eax
0x0010108a:  jne    0x101093

----------------
IN: 
0x0010108c:  orl    $0x700,0x8(%ebp)
0x00101093:  mov    0x8(%ebp),%eax
0x00101096:  movzbl %al,%eax
0x00101099:  cmp    $0xd,%eax
0x0010109c:  je     0x101109

----------------
IN: 
0x0010109e:  cmp    $0xd,%eax
0x001010a1:  jg     0x101143

----------------
IN: 
0x00101143:  mov    0x10fe60,%ecx
0x00101149:  movzwl 0x10fe64,%eax
0x00101150:  lea    0x1(%eax),%edx
0x00101153:  mov    %dx,0x10fe64
0x0010115a:  movzwl %ax,%eax
0x0010115d:  add    %eax,%eax
0x0010115f:  add    %ecx,%eax
0x00101161:  mov    0x8(%ebp),%edx
0x00101164:  mov    %dx,(%eax)
0x00101167:  jmp    0x10116a

----------------
IN: 
0x0010116a:  movzwl 0x10fe64,%eax
0x00101171:  cmp    $0x7cf,%ax
0x00101175:  jbe    0x1011d1

----------------
IN: 
0x001011d1:  movzwl 0x10fe66,%eax
0x001011d8:  movzwl %ax,%eax
0x001011db:  mov    %ax,-0x1a(%ebp)
0x001011df:  movb   $0xe,-0x1b(%ebp)
0x001011e3:  movzbl -0x1b(%ebp),%eax
0x001011e7:  movzwl -0x1a(%ebp),%edx
0x001011eb:  out    %al,(%dx)
0x001011ec:  nop    
0x001011ed:  movzwl 0x10fe64,%eax
0x001011f4:  shr    $0x8,%ax
0x001011f8:  movzbl %al,%eax
0x001011fb:  movzwl 0x10fe66,%edx
0x00101202:  add    $0x1,%edx
0x00101205:  movzwl %dx,%edx
0x00101208:  mov    %dx,-0x16(%ebp)
0x0010120c:  mov    %al,-0x17(%ebp)
0x0010120f:  movzbl -0x17(%ebp),%eax
0x00101213:  movzwl -0x16(%ebp),%edx
0x00101217:  out    %al,(%dx)
0x00101218:  nop    
0x00101219:  movzwl 0x10fe66,%eax
0x00101220:  movzwl %ax,%eax
0x00101223:  mov    %ax,-0x12(%ebp)
0x00101227:  movb   $0xf,-0x13(%ebp)
0x0010122b:  movzbl -0x13(%ebp),%eax
0x0010122f:  movzwl -0x12(%ebp),%edx
0x00101233:  out    %al,(%dx)
0x00101234:  nop    
0x00101235:  movzwl 0x10fe64,%eax
0x0010123c:  movzbl %al,%eax
0x0010123f:  movzwl 0x10fe66,%edx
0x00101246:  add    $0x1,%edx
0x00101249:  movzwl %dx,%edx
0x0010124c:  mov    %dx,-0xe(%ebp)
0x00101250:  mov    %al,-0xf(%ebp)
0x00101253:  movzbl -0xf(%ebp),%eax
0x00101257:  movzwl -0xe(%ebp),%edx
0x0010125b:  out    %al,(%dx)
0x0010125c:  nop    
0x0010125d:  nop    
0x0010125e:  mov    -0x4(%ebp),%ebx
0x00101261:  leave  
0x00101262:  ret    

Servicing hardware INT=0x20
----------------
IN: 
0x001015ca:  add    $0x10,%esp
0x001015cd:  sub    $0xc,%esp
0x001015d0:  pushl  0x8(%ebp)
0x001015d3:  call   0x1012be

----------------
IN: 
0x001012be:  push   %ebp
0x001012bf:  mov    %esp,%ebp
0x001012c1:  cmpl   $0x8,0x8(%ebp)
0x001012c5:  je     0x1012d4

----------------
IN: 
0x001012c7:  pushl  0x8(%ebp)
0x001012ca:  call   0x101263

----------------
IN: 
0x00101263:  push   %ebp
0x00101264:  mov    %esp,%ebp
0x00101266:  sub    $0x10,%esp
0x00101269:  movl   $0x0,-0x4(%ebp)
0x00101270:  jmp    0x10127b

----------------
IN: 
0x0010127b:  movw   $0x3fd,-0x6(%ebp)
0x00101281:  movzwl -0x6(%ebp),%eax
0x00101285:  mov    %eax,%edx
0x00101287:  in     (%dx),%al
0x00101288:  mov    %al,-0x7(%ebp)
0x0010128b:  movzbl -0x7(%ebp),%eax
0x0010128f:  movzbl %al,%eax
0x00101292:  and    $0x20,%eax
0x00101295:  test   %eax,%eax
0x00101297:  jne    0x1012a2

----------------
IN: 
0x001012a2:  mov    0x8(%ebp),%eax
0x001012a5:  movzbl %al,%eax
0x001012a8:  movw   $0x3f8,-0xa(%ebp)
0x001012ae:  mov    %al,-0xb(%ebp)
0x001012b1:  movzbl -0xb(%ebp),%eax
0x001012b5:  movzwl -0xa(%ebp),%edx
0x001012b9:  out    %al,(%dx)
0x001012ba:  nop    
0x001012bb:  nop    
0x001012bc:  leave  
0x001012bd:  ret    

----------------
IN: 
0x001012cf:  add    $0x4,%esp
0x001012d2:  jmp    0x1012f2

Servicing hardware INT=0x20
----------------
IN: 
0x001012f2:  nop    
0x001012f3:  leave  
0x001012f4:  ret    

----------------
IN: 
0x001015d8:  add    $0x10,%esp
0x001015db:  nop    
0x001015dc:  leave  
0x001015dd:  ret    

----------------
IN: 
0x001002cf:  add    $0x10,%esp
0x001002d2:  mov    0xc(%ebp),%eax
0x001002d5:  mov    (%eax),%eax
0x001002d7:  lea    0x1(%eax),%edx
0x001002da:  mov    0xc(%ebp),%eax
0x001002dd:  mov    %edx,(%eax)
0x001002df:  nop    
0x001002e0:  leave  
0x001002e1:  ret    

----------------
IN: 
0x00102b85:  add    $0x10,%esp
0x00102b88:  nop    
0x00102b89:  leave  
0x00102b8a:  ret    

----------------
IN: 
0x00102fa2:  add    $0x20,%esp
0x00102fa5:  jmp    0x102fe0

----------------
IN: 
0x00102fe0:  jmp    0x102c4d

----------------
IN: 
0x00102c4d:  jmp    0x102c66

----------------
IN: 
0x00102c4f:  test   %ebx,%ebx
0x00102c51:  je     0x102fe5

----------------
IN: 
0x00102c57:  sub    $0x8,%esp
0x00102c5a:  pushl  0xc(%ebp)
0x00102c5d:  push   %ebx
0x00102c5e:  mov    0x8(%ebp),%eax
0x00102c61:  call   *%eax

----------------
IN: 
0x00102c63:  add    $0x10,%esp
0x00102c66:  mov    0x10(%ebp),%eax
0x00102c69:  lea    0x1(%eax),%edx
0x00102c6c:  mov    %edx,0x10(%ebp)
0x00102c6f:  movzbl (%eax),%eax
0x00102c72:  movzbl %al,%ebx
0x00102c75:  cmp    $0x25,%ebx
0x00102c78:  jne    0x102c4f

----------------
IN: 
0x001010a7:  cmp    $0x8,%eax
0x001010aa:  je     0x1010b6

Servicing hardware INT=0x20
----------------
IN: 
0x001010ac:  cmp    $0xa,%eax
0x001010af:  je     0x1010f9

----------------
IN: 
0x001010f9:  movzwl 0x10fe64,%eax
0x00101100:  add    $0x50,%eax
0x00101103:  mov    %ax,0x10fe64
0x00101109:  movzwl 0x10fe64,%ebx
0x00101110:  movzwl 0x10fe64,%ecx
0x00101117:  movzwl %cx,%eax
0x0010111a:  imul   $0xcccd,%eax,%eax
0x00101120:  shr    $0x10,%eax
0x00101123:  mov    %eax,%edx
0x00101125:  shr    $0x6,%dx
0x00101129:  mov    %edx,%eax
0x0010112b:  shl    $0x2,%eax
0x0010112e:  add    %edx,%eax
0x00101130:  shl    $0x4,%eax
0x00101133:  sub    %eax,%ecx
0x00101135:  mov    %ecx,%edx
0x00101137:  mov    %ebx,%eax
0x00101139:  sub    %edx,%eax
0x0010113b:  mov    %ax,0x10fe64
0x00101141:  jmp    0x10116a

----------------
IN: 
0x00101177:  mov    0x10fe60,%eax
0x0010117c:  lea    0xa0(%eax),%edx
0x00101182:  mov    0x10fe60,%eax
0x00101187:  sub    $0x4,%esp
0x0010118a:  push   $0xf00
0x0010118f:  push   %edx
0x00101190:  push   %eax
0x00101191:  call   0x103413

----------------
IN: 
0x00103413:  push   %ebp
0x00103414:  mov    %esp,%ebp
0x00103416:  push   %edi
0x00103417:  push   %esi
0x00103418:  push   %ebx
0x00103419:  sub    $0x30,%esp
0x0010341c:  mov    0x8(%ebp),%eax
0x0010341f:  mov    %eax,-0x10(%ebp)
0x00103422:  mov    0xc(%ebp),%eax
0x00103425:  mov    %eax,-0x14(%ebp)
0x00103428:  mov    0x10(%ebp),%eax
0x0010342b:  mov    %eax,-0x18(%ebp)
0x0010342e:  mov    -0x10(%ebp),%eax
0x00103431:  cmp    -0x14(%ebp),%eax
0x00103434:  jae    0x103478

----------------
IN: 
0x00103436:  mov    -0x10(%ebp),%eax
0x00103439:  mov    %eax,-0x1c(%ebp)
0x0010343c:  mov    -0x14(%ebp),%eax
0x0010343f:  mov    %eax,-0x20(%ebp)
0x00103442:  mov    -0x18(%ebp),%eax
0x00103445:  mov    %eax,-0x24(%ebp)
0x00103448:  mov    -0x24(%ebp),%eax
0x0010344b:  shr    $0x2,%eax
0x0010344e:  mov    %eax,%ecx
0x00103450:  mov    -0x1c(%ebp),%edx
0x00103453:  mov    -0x20(%ebp),%eax
0x00103456:  mov    %edx,%edi
0x00103458:  mov    %eax,%esi
0x0010345a:  rep movsl %ds:(%esi),%es:(%edi)

Servicing hardware INT=0x20
----------------
IN: 
0x0010345a:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0010345c:  mov    -0x24(%ebp),%ecx
0x0010345f:  and    $0x3,%ecx
0x00103462:  je     0x103466

----------------
IN: 
0x00103466:  mov    %esi,%eax
0x00103468:  mov    %edi,%edx
0x0010346a:  mov    %ecx,-0x28(%ebp)
0x0010346d:  mov    %edx,-0x2c(%ebp)
0x00103470:  mov    %eax,-0x30(%ebp)
0x00103473:  mov    -0x1c(%ebp),%eax
0x00103476:  jmp    0x1034ae

----------------
IN: 
0x001034ae:  add    $0x30,%esp
0x001034b1:  pop    %ebx
0x001034b2:  pop    %esi
0x001034b3:  pop    %edi
0x001034b4:  pop    %ebp
0x001034b5:  ret    

----------------
IN: 
0x00101196:  add    $0x10,%esp
0x00101199:  movl   $0x780,-0xc(%ebp)
0x001011a0:  jmp    0x1011b8

----------------
IN: 
0x001011b8:  cmpl   $0x7cf,-0xc(%ebp)
0x001011bf:  jle    0x1011a2

----------------
IN: 
0x001011a2:  mov    0x10fe60,%edx
0x001011a8:  mov    -0xc(%ebp),%eax
0x001011ab:  add    %eax,%eax
0x001011ad:  add    %edx,%eax
0x001011af:  movw   $0x720,(%eax)
0x001011b4:  addl   $0x1,-0xc(%ebp)
0x001011b8:  cmpl   $0x7cf,-0xc(%ebp)
0x001011bf:  jle    0x1011a2

----------------
IN: 
0x001011c1:  movzwl 0x10fe64,%eax
0x001011c8:  sub    $0x50,%eax
0x001011cb:  mov    %ax,0x10fe64
0x001011d1:  movzwl 0x10fe66,%eax
0x001011d8:  movzwl %ax,%eax
0x001011db:  mov    %ax,-0x1a(%ebp)
0x001011df:  movb   $0xe,-0x1b(%ebp)
0x001011e3:  movzbl -0x1b(%ebp),%eax
0x001011e7:  movzwl -0x1a(%ebp),%edx
0x001011eb:  out    %al,(%dx)
0x001011ec:  nop    
0x001011ed:  movzwl 0x10fe64,%eax
0x001011f4:  shr    $0x8,%ax
0x001011f8:  movzbl %al,%eax
0x001011fb:  movzwl 0x10fe66,%edx
0x00101202:  add    $0x1,%edx
0x00101205:  movzwl %dx,%edx
0x00101208:  mov    %dx,-0x16(%ebp)
0x0010120c:  mov    %al,-0x17(%ebp)
0x0010120f:  movzbl -0x17(%ebp),%eax
0x00101213:  movzwl -0x16(%ebp),%edx
0x00101217:  out    %al,(%dx)
0x00101218:  nop    
0x00101219:  movzwl 0x10fe66,%eax
0x00101220:  movzwl %ax,%eax
0x00101223:  mov    %ax,-0x12(%ebp)
0x00101227:  movb   $0xf,-0x13(%ebp)
0x0010122b:  movzbl -0x13(%ebp),%eax
0x0010122f:  movzwl -0x12(%ebp),%edx
0x00101233:  out    %al,(%dx)
0x00101234:  nop    
0x00101235:  movzwl 0x10fe64,%eax
0x0010123c:  movzbl %al,%eax
0x0010123f:  movzwl 0x10fe66,%edx
0x00101246:  add    $0x1,%edx
0x00101249:  movzwl %dx,%edx
0x0010124c:  mov    %dx,-0xe(%ebp)
0x00101250:  mov    %al,-0xf(%ebp)
0x00101253:  movzbl -0xf(%ebp),%eax
0x00101257:  movzwl -0xe(%ebp),%edx
0x0010125b:  out    %al,(%dx)
0x0010125c:  nop    
0x0010125d:  nop    
0x0010125e:  mov    -0x4(%ebp),%ebx
0x00101261:  leave  
0x00101262:  ret    

Servicing hardware INT=0x20
----------------
IN: 
0x00102fe5:  nop    
0x00102fe6:  lea    -0x8(%ebp),%esp
0x00102fe9:  pop    %ebx
0x00102fea:  pop    %esi
0x00102feb:  pop    %ebp
0x00102fec:  ret    

----------------
IN: 
0x00100303:  add    $0x10,%esp
0x00100306:  mov    -0xc(%ebp),%eax
0x00100309:  leave  
0x0010030a:  ret    

----------------
IN: 
0x00100326:  add    $0x10,%esp
0x00100329:  mov    %eax,-0xc(%ebp)
0x0010032c:  mov    -0xc(%ebp),%eax
0x0010032f:  leave  
0x00100330:  ret    

----------------
IN: 
0x00100118:  add    $0x10,%esp
0x0010011b:  movzwl -0xa(%ebp),%eax
0x0010011f:  movzwl %ax,%edx
0x00100122:  mov    0x10fa20,%eax
0x00100127:  sub    $0x4,%esp
0x0010012a:  push   %edx
0x0010012b:  push   %eax
0x0010012c:  push   $0x10358f
0x00100131:  call   0x10030b

----------------
IN: 
0x00102f63:  sub    $0x8,%esp
0x00102f66:  pushl  -0x20(%ebp)
0x00102f69:  lea    0x14(%ebp),%eax
0x00102f6c:  push   %eax
0x00102f6d:  call   0x102b8b

----------------
IN: 
0x00102b8b:  push   %ebp
0x00102b8c:  mov    %esp,%ebp
0x00102b8e:  cmpl   $0x1,0xc(%ebp)
0x00102b92:  jle    0x102ba8

Servicing hardware INT=0x20
----------------
IN: 
0x00102ba8:  cmpl   $0x0,0xc(%ebp)
0x00102bac:  je     0x102bc4

----------------
IN: 
0x00102bc4:  mov    0x8(%ebp),%eax
0x00102bc7:  mov    (%eax),%eax
0x00102bc9:  lea    0x4(%eax),%ecx
0x00102bcc:  mov    0x8(%ebp),%edx
0x00102bcf:  mov    %ecx,(%edx)
0x00102bd1:  mov    (%eax),%eax
0x00102bd3:  mov    $0x0,%edx
0x00102bd8:  pop    %ebp
0x00102bd9:  ret    

----------------
IN: 
0x00102f72:  add    $0x10,%esp
0x00102f75:  mov    %eax,-0x10(%ebp)
0x00102f78:  mov    %edx,-0xc(%ebp)
0x00102f7b:  movl   $0x10,-0x14(%ebp)
0x00102f82:  movsbl -0x25(%ebp),%edx
0x00102f86:  mov    -0x14(%ebp),%eax
0x00102f89:  sub    $0x4,%esp
0x00102f8c:  push   %edx
0x00102f8d:  pushl  -0x18(%ebp)
0x00102f90:  push   %eax
0x00102f91:  pushl  -0xc(%ebp)
0x00102f94:  pushl  -0x10(%ebp)
0x00102f97:  pushl  0xc(%ebp)
0x00102f9a:  pushl  0x8(%ebp)
0x00102f9d:  call   0x102a9f

----------------
IN: 
0x00102b2a:  mov    0x1c(%ebp),%eax
0x00102b2d:  sub    $0x1,%eax
0x00102b30:  sub    $0x4,%esp
0x00102b33:  pushl  0x20(%ebp)
0x00102b36:  push   %eax
0x00102b37:  pushl  0x18(%ebp)
0x00102b3a:  pushl  -0x14(%ebp)
0x00102b3d:  pushl  -0x18(%ebp)
0x00102b40:  pushl  0xc(%ebp)
0x00102b43:  pushl  0x8(%ebp)
0x00102b46:  call   0x102a9f

----------------
IN: 
0x00102b4b:  add    $0x20,%esp
0x00102b4e:  jmp    0x102b6b

----------------
IN: 
0x00100136:  add    $0x10,%esp
0x00100139:  movzwl -0xc(%ebp),%eax
0x0010013d:  movzwl %ax,%edx
0x00100140:  mov    0x10fa20,%eax
0x00100145:  sub    $0x4,%esp
0x00100148:  push   %edx
0x00100149:  push   %eax
0x0010014a:  push   $0x10359d
0x0010014f:  call   0x10030b

----------------
IN: 
0x00100154:  add    $0x10,%esp
0x00100157:  movzwl -0xe(%ebp),%eax
0x0010015b:  movzwl %ax,%edx
0x0010015e:  mov    0x10fa20,%eax
0x00100163:  sub    $0x4,%esp
0x00100166:  push   %edx
0x00100167:  push   %eax
0x00100168:  push   $0x1035ab
0x0010016d:  call   0x10030b

Servicing hardware INT=0x20
----------------
IN: 
0x00100172:  add    $0x10,%esp
0x00100175:  movzwl -0x10(%ebp),%eax
0x00100179:  movzwl %ax,%edx
0x0010017c:  mov    0x10fa20,%eax
0x00100181:  sub    $0x4,%esp
0x00100184:  push   %edx
0x00100185:  push   %eax
0x00100186:  push   $0x1035b9
0x0010018b:  call   0x10030b

----------------
IN: 
0x00100190:  add    $0x10,%esp
0x00100193:  mov    0x10fa20,%eax
0x00100198:  add    $0x1,%eax
0x0010019b:  mov    %eax,0x10fa20
0x001001a0:  nop    
0x001001a1:  leave  
0x001001a2:  ret    

----------------
IN: 
0x001001df:  sub    $0xc,%esp
0x001001e2:  push   $0x1035e8
0x001001e7:  call   0x10030b

----------------
IN: 
0x001001ec:  add    $0x10,%esp
0x001001ef:  call   0x1001b0

----------------
IN: 
0x001001b0:  push   %ebp
0x001001b1:  mov    %esp,%ebp
0x001001b3:  int    $0x79

----------------
IN: 
0x0010231c:  push   $0x0
0x0010231e:  push   $0x79
0x00102320:  jmp    0x101ec9

----------------
IN: 
0x00101df3:  mov    0x8(%ebp),%eax
0x00101df6:  movzwl 0x3c(%eax),%eax
0x00101dfa:  cmp    $0x8,%ax
0x00101dfe:  je     0x101ea8

----------------
IN: 
0x00101e04:  mov    0x8(%ebp),%eax
0x00101e07:  movw   $0x8,0x3c(%eax)
0x00101e0d:  mov    0x8(%ebp),%eax
0x00101e10:  movw   $0x10,0x28(%eax)
0x00101e16:  mov    0x8(%ebp),%eax
0x00101e19:  movzwl 0x28(%eax),%edx
0x00101e1d:  mov    0x8(%ebp),%eax
0x00101e20:  mov    %dx,0x2c(%eax)
0x00101e24:  mov    0x8(%ebp),%eax
0x00101e27:  mov    0x40(%eax),%eax
0x00101e2a:  and    $0xcf,%ah
0x00101e2d:  mov    %eax,%edx
0x00101e2f:  mov    0x8(%ebp),%eax
0x00101e32:  mov    %edx,0x40(%eax)
0x00101e35:  mov    0x8(%ebp),%eax
0x00101e38:  mov    0x44(%eax),%eax
0x00101e3b:  sub    $0x44,%eax
0x00101e3e:  mov    %eax,0x1100ec
0x00101e43:  mov    0x1100ec,%eax
0x00101e48:  sub    $0x4,%esp
0x00101e4b:  push   $0x44
0x00101e4d:  pushl  0x8(%ebp)
0x00101e50:  push   %eax
0x00101e51:  call   0x103413

----------------
IN: 
0x00103413:  push   %ebp
0x00103414:  mov    %esp,%ebp
0x00103416:  push   %edi
0x00103417:  push   %esi
0x00103418:  push   %ebx
0x00103419:  sub    $0x30,%esp
0x0010341c:  mov    0x8(%ebp),%eax
0x0010341f:  mov    %eax,-0x10(%ebp)
0x00103422:  mov    0xc(%ebp),%eax
0x00103425:  mov    %eax,-0x14(%ebp)
0x00103428:  mov    0x10(%ebp),%eax
0x0010342b:  mov    %eax,-0x18(%ebp)
0x0010342e:  mov    -0x10(%ebp),%eax
0x00103431:  cmp    -0x14(%ebp),%eax
0x00103434:  jae    0x103478

----------------
IN: 
0x00103436:  mov    -0x10(%ebp),%eax
0x00103439:  mov    %eax,-0x1c(%ebp)
0x0010343c:  mov    -0x14(%ebp),%eax
0x0010343f:  mov    %eax,-0x20(%ebp)
0x00103442:  mov    -0x18(%ebp),%eax
0x00103445:  mov    %eax,-0x24(%ebp)
0x00103448:  mov    -0x24(%ebp),%eax
0x0010344b:  shr    $0x2,%eax
0x0010344e:  mov    %eax,%ecx
0x00103450:  mov    -0x1c(%ebp),%edx
0x00103453:  mov    -0x20(%ebp),%eax
0x00103456:  mov    %edx,%edi
0x00103458:  mov    %eax,%esi
0x0010345a:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0010345a:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0010345c:  mov    -0x24(%ebp),%ecx
0x0010345f:  and    $0x3,%ecx
0x00103462:  je     0x103466

----------------
IN: 
0x00103466:  mov    %esi,%eax
0x00103468:  mov    %edi,%edx
0x0010346a:  mov    %ecx,-0x28(%ebp)
0x0010346d:  mov    %edx,-0x2c(%ebp)
0x00103470:  mov    %eax,-0x30(%ebp)
0x00103473:  mov    -0x1c(%ebp),%eax
0x00103476:  jmp    0x1034ae

----------------
IN: 
0x001034ae:  add    $0x30,%esp
0x001034b1:  pop    %ebx
0x001034b2:  pop    %esi
0x001034b3:  pop    %edi
0x001034b4:  pop    %ebp
0x001034b5:  ret    

----------------
IN: 
0x00101e56:  add    $0x10,%esp
0x00101e59:  mov    0x1100ec,%edx
0x00101e5f:  mov    0x8(%ebp),%eax
0x00101e62:  sub    $0x4,%eax
0x00101e65:  mov    %edx,(%eax)
0x00101e67:  jmp    0x101ea8

----------------
IN: 
0x00101ea8:  nop    
0x00101ea9:  nop    
0x00101eaa:  lea    -0xc(%ebp),%esp
0x00101ead:  pop    %ebx
0x00101eae:  pop    %esi
0x00101eaf:  pop    %edi
0x00101eb0:  pop    %ebp
0x00101eb1:  ret    

Servicing hardware INT=0x20
----------------
IN: 
0x001001b5:  mov    %ebp,%esp
0x001001b7:  nop    
0x001001b8:  pop    %ebp
0x001001b9:  ret    

----------------
IN: 
0x001001f4:  call   0x1000e6

Servicing hardware INT=0x20
----------------
IN: 
0x001001f9:  nop    
0x001001fa:  leave  
0x001001fb:  ret    

----------------
IN: 
0x0010006a:  jmp    0x10006a

Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
